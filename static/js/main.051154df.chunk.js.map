{"version":3,"sources":["App/Menu/Menu.module.scss","App/Label/Label.module.scss","App/TouchPad/TouchPad.module.scss","App/Display/Display.module.scss","constants.js","util/findIncrementOptions.js","util/findPitchNames.js","App/Menu/Menu.js","App/ResizeListener/ResizeListener.js","App/Label/Label.js","App/TouchPad/TouchPad.js","App/Display/canvas.js","util/shepardTone.js","App/Display/Display.js","App/App.js","reportWebVitals.js","index.js","App/App.module.scss"],"names":["module","exports","MAX_FREQ","OSCILLATOR_TYPES","TEMPERMENT_TYPES","semitones","increments","i","findIncrementsOfSemitone","push","increment","Array","keys","semitoneIndexes","semitoneIndex","undefined","map","key","String","fromCharCode","parseInt","toUpperCase","shift","findIncrementLabel","str","Menu","a4","temperment","minFreq","maxFreq","layoutIncrement","oscillator","rootPitch","setMinFreq","setMaxFreq","setA4","setTemperment","setOscillator","setSemitones","setRootPitch","setLayoutIncrement","onTempermentChange","value","target","onOscillatorChange","pitchNames","findPitchNames","className","styles","root","property","title","label","input","type","checked","onChange","labelText","name","index","findIncrementOptions","num","min","max","step","disabled","ResizeListener","props","_onResize","win","setState","innerHeight","innerWidth","state","addEventListener","this","removeEventListener","children","React","Component","defaultProps","window","Label","arc","Math","PI","rad","x","cos","y","sin","classnames","button","length","small","style","left","top","TouchPad","callback","rootNode","useRef","anyTouch","evt","targetTouches","rect","current","getBoundingClientRect","circ","directions","clientX","clientY","width","height","atan2","rounded","round","direction","ref","onTouchMove","onTouchStart","onTouchEnd","onTouchCancel","rotate","angle","ctx","func","dx","dy","call","frequencies","currentOscillators","audioCtx","gainNode","Canvas","element","document","createElement","offsetWidth","offsetHeight","devicePixelRatio","resize","isMounted","_element","parentNode","_width","_height","_devicePixelRatio","_imageDataHandler","_context","scale","radius","startAngle","endAngle","anticlockwise","beginPath","bezierCurveTo","clearRect","clip","closePath","drawImage","source","sx","sy","sWidth","sHeight","dWidth","dHeight","isCanvas","_drawImageDest","fill","fillRect","lineTo","moveTo","quadraticCurveTo","stroke","resetTransform","restore","transform","save","setRotate","setTransform","xScale","xSkew","ySkew","yScale","setTranslate","translate","createImageData","imageDataOrWidth","getContext","fillStyle","globalCompositeOperation","globalAlpha","lineWidth","strokeStyle","points","lastPoint","nextPoint","path","Path2D","avgX","avgY","colors","Display","_rootNode","createRef","_root","_buffer","_background","_drawBackground","prevProps","prevState","isChromatic","activeNotes","_drawHitStates","_connectNotes","_convertIndex","color","fillSlice","note","center","slice","canvas","beginRad","beginCos","beginSin","j","endRad","endCos","endSin","closingRad","initializaAudio","close","AudioContext","webkitAudioContext","createGain","connect","destination","gain","findFrequencies","distance","lowestFrequency","pow","currentFrequency","toggleNote","isPlaying","oscillators","frequency","createOscillator","start","startNote","stop","stopNote","App","useState","isMenuOpen","setMenuOpen","hasInitializedAudio","setHasInitializedAudio","setActiveNotes","onTouchCallback","pitch","indexOf","onClick","contentHolder","smallest","wheelHolder","menuHolder","menuButton","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.051154df.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Menu_root__3QA5H\",\"label\":\"Menu_label__3hKMT\",\"labelText\":\"Menu_labelText__2uoMn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Label_root__iHLA-\",\"button\":\"Label_button__opkRi\",\"small\":\"Label_small__FYd4m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TouchPad_root__22wzt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Display_root__ig8ld\"};","export const MIN_FREQ = 20;\nexport const MAX_FREQ = 20000;\n\nexport const OSCILLATOR_TYPES = {\n  SINE: 'sine',\n  SQUARE: 'square',\n  SAWTOOTH: 'sawtooth',\n  TRIANGLE: 'triangle',\n};\n\nexport const TEMPERMENT_TYPES = {\n  EQUAL: 'equal',\n  JUST: 'just',\n  MEANTONE: 'meantone',\n  PYTHAGOREAN: 'pythagorean',\n};\n","export default function(semitones) {\n  const increments = [];\n  for(let i = 1; i < semitones; i++) {\n    if (findIncrementsOfSemitone(semitones, i)) {\n      increments.push(i);\n    }\n  }\n  return increments;\n}\n\nfunction findIncrementsOfSemitone(semitones, increment) {\n  const allSemitones = [...Array(semitones).keys()];\n  const semitoneIndexes = [];\n  for(let i = 0; i < semitones; i++) {\n    const semitoneIndex = (i * increment) % semitones;\n    if (semitoneIndexes[semitoneIndex] !== undefined) {\n      return false;\n    } else {\n      semitoneIndexes[semitoneIndex] = semitoneIndex;\n    }\n  }\n  return semitoneIndexes;\n}\n","export default function(semitones) {\n  if (semitones === 12) {\n    return ['A', 'A#/Bb', 'B', 'C', 'C#/Db', 'D', 'D#/Eb', 'E', 'F', 'F#/Gb', 'G', 'G#/Ab'];\n  } else if (semitones <= 26) {\n    return [...Array(semitones).keys()].map(function(key){return String.fromCharCode(97 + parseInt(key)).toUpperCase()});\n  } else {\n    const keys = [...Array(semitones + 1).keys()];\n    keys.shift();\n    return keys;\n  }\n}\n","import styles from './Menu.module.scss';\nimport {MIN_FREQ, MAX_FREQ, TEMPERMENT_TYPES, OSCILLATOR_TYPES} from '../../constants';\nimport findIncrementOptions from '../../../src/util/findIncrementOptions';\nimport findPitchNames from '../../../src/util/findPitchNames';\n\nfunction findIncrementLabel(increment, semitones) {\n  let str = String(increment);\n  if (increment === 1) {\n    str += ` (chromatic)`\n  } else if (increment === semitones - 1) {\n    str += ` (reverse chromatic)`\n  } else if (semitones === 12 && increment === 7) {\n    str += ` (circle of fifths)`\n  }\n  return str;\n}\n\nexport default function Menu({ a4, temperment, semitones, minFreq, maxFreq, layoutIncrement, oscillator, rootPitch, setMinFreq, setMaxFreq, setA4, setTemperment, setOscillator, setSemitones, setRootPitch, setLayoutIncrement }) {\n  function onTempermentChange({ target: { value }}) {\n    setTemperment(value);\n  }\n\n  function onOscillatorChange({ target: { value }}) {\n    setOscillator(value);\n  }\n\n  const pitchNames = findPitchNames(semitones);\n\n  return (\n    <form className={styles.root}>\n      <div className={styles.property}>\n        <h2 className={styles.title}>Oscillator</h2>\n        <label className={styles.label}>\n          <input className={styles.input} type=\"radio\" checked={oscillator === OSCILLATOR_TYPES.SINE} value={OSCILLATOR_TYPES.SINE} onChange={onOscillatorChange} />\n          <div className={styles.labelText}>{OSCILLATOR_TYPES.SINE}</div>\n        </label>\n        <label className={styles.label}>\n          <input className={styles.input} type=\"radio\" checked={oscillator === OSCILLATOR_TYPES.SQUARE} value={OSCILLATOR_TYPES.SQUARE} onChange={onOscillatorChange} />\n          <div className={styles.labelText}>{OSCILLATOR_TYPES.SQUARE}</div>\n        </label>\n        <label className={styles.label}>\n          <input className={styles.input} type=\"radio\" checked={oscillator === OSCILLATOR_TYPES.SAWTOOTH} value={OSCILLATOR_TYPES.SAWTOOTH} onChange={onOscillatorChange} />\n          <div className={styles.labelText}>{OSCILLATOR_TYPES.SAWTOOTH}</div>\n        </label>\n        <label className={styles.label}>\n          <input className={styles.input} type=\"radio\" checked={oscillator === OSCILLATOR_TYPES.TRIANGLE} value={OSCILLATOR_TYPES.TRIANGLE} onChange={onOscillatorChange} />\n          <div className={styles.labelText}>{OSCILLATOR_TYPES.TRIANGLE}</div>\n        </label>\n      </div>\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>Root Pitch</h2>\n        {pitchNames.map(function(name, index) {\n          return <label className={styles.label} key={name}>\n            <input className={styles.input} type=\"radio\" value={index} name=\"rootPitch\" checked={rootPitch === index} onChange={function({target:{value}}){setRootPitch(parseInt(value))}} />\n            <div className={styles.labelText}>{name}</div>\n          </label>\n        })}\n      </div>\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>Layout Increment</h2>\n        {findIncrementOptions(semitones).map(function(num) {\n          return <label className={styles.label} key={num}>\n            <input className={styles.input} type=\"radio\" value={num} name=\"increment\" checked={layoutIncrement === num} onChange={function({target:{value}}){setLayoutIncrement(parseInt(value))}} />\n            <div className={styles.labelText}>{findIncrementLabel(num, semitones)}</div>\n          </label>\n        })}\n      </div>\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>Frequencies</h2>\n        <label className={styles.label}>\n          <input\n            className={styles.input}\n            type=\"number\"\n            min={MIN_FREQ}\n            max={MAX_FREQ}\n            value={minFreq}\n            step=\"1\"\n            onChange={function({target:{value}}){setMinFreq(parseInt(value))}}\n          />\n          <div className={styles.labelText}>Minimum Frequency</div>\n        </label>\n        <label className={styles.label}>\n          <input\n            className={styles.input}\n            type=\"number\"\n            min={MIN_FREQ}\n            max={MAX_FREQ}\n            value={maxFreq}\n            step=\"1\"\n            onChange={function({target:{value}}){setMaxFreq(parseInt(value))}}\n          />\n          <div className={styles.labelText}>Max Frequency</div>\n        </label>\n      </div>\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>Semitones</h2>\n        <label className={styles.label}>\n          <input className={styles.input} type=\"number\" min={1} max={100} value={semitones} step=\"1\" onChange={function({target: {value}}){setSemitones(parseInt(value))}} />\n        </label>\n      </div>\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>A4</h2>\n        <label className={styles.label}>\n          <input\n            className={styles.input}\n            type=\"number\"\n            min={MIN_FREQ}\n            max={MAX_FREQ}\n            value={a4}\n            step=\"1\"\n            onChange={function({target:{value}}){setA4(parseInt(value))}}\n          />\n        </label>\n      </div>\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>Temperment</h2>\n        <label className={styles.label}>\n          <input className={styles.input} type=\"radio\" disabled checked={temperment === TEMPERMENT_TYPES.EQUAL} value={TEMPERMENT_TYPES.EQUAL} onChange={onTempermentChange} />\n          <div className={styles.labelText}>{TEMPERMENT_TYPES.EQUAL}</div>\n        </label>\n        <label className={styles.label}>\n          <input className={styles.input} type=\"radio\" disabled checked={temperment === TEMPERMENT_TYPES.JUST} value={TEMPERMENT_TYPES.JUST} onChange={onTempermentChange} />\n          <div className={styles.labelText}>{TEMPERMENT_TYPES.JUST}</div>\n        </label>\n        <label className={styles.label}>\n          <input className={styles.input} type=\"radio\" disabled checked={temperment === TEMPERMENT_TYPES.MEANTONE} value={TEMPERMENT_TYPES.MEANTONE} onChange={onTempermentChange} />\n          <div className={styles.labelText}>{TEMPERMENT_TYPES.MEANTONE}</div>\n        </label>\n        <label className={styles.label}>\n          <input className={styles.input} type=\"radio\" disabled checked={temperment === TEMPERMENT_TYPES.PYTHAGOREAN} value={TEMPERMENT_TYPES.PYTHAGOREAN} onChange={onTempermentChange} />\n          <div className={styles.labelText}>{TEMPERMENT_TYPES.PYTHAGOREAN}</div>\n        </label>\n      </div>\n    </form>\n  );\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst PLACEHOLDER_WINDOW = {\n  addEventListener() {},\n  innerHeight: 0,\n  innerWidth: 0,\n  removeEventListener() {},\n};\n\nexport default class ResizeListener extends React.Component {\n  static propTypes = {\n    children: PropTypes.func.isRequired,\n    win: PropTypes.object,\n  };\n\n  static defaultProps = {\n    win: typeof window !== 'undefined' ? window : PLACEHOLDER_WINDOW,\n  };\n\n  constructor(props) {\n    super(props);\n    const { win } = props;\n    this.state = {\n      innerHeight: win.innerHeight,\n      innerWidth: win.innerWidth,\n    };\n    win.addEventListener('resize', this._onResize);\n  }\n\n  componentWillUnmount() {\n    const { win } = this.props;\n    win.removeEventListener('resize', this._onResize);\n  }\n\n  _onResize = () => {\n    const { win } = this.props;\n    this.setState({\n      innerHeight: win.innerHeight,\n      innerWidth: win.innerWidth,\n    });\n  };\n\n  render() {\n    const { innerHeight, innerWidth } = this.state;\n    const { children } = this.props;\n    return children(innerWidth, innerHeight);\n  }\n}\n","import styles from './Label.module.scss';\nimport classnames from 'classnames';\nimport findPitchNames from '../../../src/util/findPitchNames';\n\nexport default function Label({rootPitch, semitones, layoutIncrement}) {\n  const arc = Math.PI * 2 / semitones;\n  const pitchNames = findPitchNames(semitones);\n  const radius = 35;\n  return <div className={styles.root}>\n  {pitchNames.map(function(name, index) {\n    const rad = arc * ((index-rootPitch) * layoutIncrement) - Math.PI * 0.5;\n    const x = Math.cos(rad);\n    const y = Math.sin(rad);\n    return <div\n      className={classnames(styles.button, name.length > 1 && styles.small)}\n      key={name}\n      style={{\n        left: `${(x * radius + 50)}%`,\n        top: `${(y * radius + 50)}%`,\n      }}\n    >{name}</div>\n  })}</div>\n}\n","import {useRef} from 'react';\nimport {round} from '@danehansen/math';\nimport styles from './TouchPad.module.scss';\n\nexport default function TouchPad({className, callback, semitones}) {\n  const rootNode = useRef(null);\n\n  function onTouchMove(evt) {\n    // console.log('onTouchMove');\n    anyTouch(evt);\n  }\n\n  function onTouchStart(evt) {\n    // console.log('onTouchStart');\n    anyTouch(evt);\n  }\n\n  function onTouchEnd(evt) {\n    const {targetTouches} = evt;\n    // console.log('onTouchEnd', targetTouches[0]);\n    anyTouch(evt);\n  }\n\n  function onTouchCancel(evt) {\n    // console.log('onTouchCancel');\n    anyTouch(evt);\n  }\n\n  function anyTouch(evt) {\n    const {targetTouches} = evt;\n    if (!targetTouches) {\n      callback([]);\n    }\n    const rect = rootNode.current.getBoundingClientRect();\n\n    const circ = Math.PI * 2;\n    const directions = []\n    for (let i = 0; i < targetTouches.length; i++) {\n      const {clientX, clientY} = targetTouches[i];\n      const x = clientX - rect.x - rect.width * 0.5;\n      const y = clientY - rect.y - rect.height * 0.5;\n      const rad = (Math.atan2(-y, x) + circ) % circ;\n      const rounded = Math.round(round(rad, circ / semitones) / circ * semitones) % semitones;\n      const direction = (semitones * 2 - (rounded + 9)) % semitones;\n      // console.log('anyTouch', direction);\n      directions.push(direction);\n    }\n    // console.log('anyTouch', directions);\n    callback(directions);\n  }\n\n  return <div\n    ref={rootNode}\n    className={styles.root}\n    onTouchMove={onTouchMove}\n    onTouchStart={onTouchStart}\n    onTouchEnd={onTouchEnd}\n    onTouchCancel={onTouchCancel}\n  />;\n}\n","// import ImageDataHandler from './image-data-handler';\n\nfunction rotate(angle, x, y, ctx, func) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const dx = x - cos * x - sin * -y;\n  const dy = y - sin * x - cos * y;\n  func.call(ctx, cos, sin, -sin, cos, dx, dy);\n}\n\n/**\n* a helper for canvas manipulation, to store a reference to the element as well as it's context.\nalso adds some helpful method defaults. also has some drawing utilities.\n* @param {HTMLCanvasElement} [element = document.createElement('canvas')] - put HTMLCanvasElement if this is your\n* final render canvas\n* @param {Integer} [width = element.offsetWidth] - width of area\n* @param {Integer} [height = element.offsetHeight] - height of area\n* @param {Float} [devicePixelRatio = window.devicePixelRatio] - actual pixels to css pixel\n*/\nexport default class Canvas {\n  /* *******************\n  * initializing methods\n  *********************/\n\n  constructor(element = document.createElement('canvas'), width = element.offsetWidth, height = element.offsetHeight, devicePixelRatio = window.devicePixelRatio) { // eslint-disable-line max-len\n    this._element = element;\n    this._context = this._element.getContext('2d');\n    this.resize(width, height, devicePixelRatio);\n  }\n\n  /**\n    * sets width/height properties as well as scaling\n    * @param {Integer} [width = this.width] - width of area of canvas\n    * @param {Integer} [height = this.height] - height of area of canvas\n    * @param {Float} [devicePixelRatio = window.devicePixelRatio] - actual pixels to css pixel\n    * @returns {void}\n  */\n  // eslint-disable complexity\n  resize = (width, height, devicePixelRatio = window.devicePixelRatio) => {\n    // allow for case to call with no params when devicePixelRatio is changed\n    // allow for case to call with no params when dom element is resized\n    // otherwise width and height are defined\n    // this method will erase the canvas and reset any clipping, fillStyle, lineWidth, strokeStyle, etc...\n    if (!width || !height) {\n      const isMounted = !!this._element.parentNode;\n      width = isMounted ? this._element.offsetWidth : this._width;\n      height = isMounted ? this._element.offsetHeight : this._height;\n    }\n    this._devicePixelRatio = devicePixelRatio;\n    this._width = width;\n    this._height = height;\n    this._element.width = width * this._devicePixelRatio;\n    this._element.height = height * this._devicePixelRatio;\n    this._imageDataHandler = null;\n    this._context.scale(this._devicePixelRatio, this._devicePixelRatio);\n  }\n  // eslint-enable complexity\n\n  /* ******\n  * getters\n  ********/\n\n  /**\n    * get the instance's HTMLCanvasElement\n    * @readonly\n    * @type {HTMLCanvasElement}\n  */\n  get element() {\n    return this._element;\n  }\n\n  /**\n    * get the instance's height\n    * @readonly\n    * @type {Integer}\n  */\n  get height() {\n    return this._height;\n  }\n\n  /**\n    * get the instance's ImageDataHandler reflecting the current state\n    * @readonly\n    * @type {ImageDataHandler}\n  */\n  get imageDataHandler() {\n    if (!this._imageDataHandler) {\n      const width = this._width * this._devicePixelRatio;\n      const height = this._height * this._devicePixelRatio;\n      // this._imageDataHandler = new ImageDataHandler(this._context, 0, 0, width, height);\n    }\n    return this._imageDataHandler;\n  }\n\n  /**\n    * get the instance's width\n    * @readonly\n    * @type {Integer}\n  */\n  get width() {\n    return this._width;\n  }\n\n  /* ******\n  * setters\n  ********/\n\n  /**\n    * set the fill color of the context.\n    * @param {String} str - new value for fillStyle\n    * @type {String}\n  */\n  set fillStyle(str) {\n    this._context.fillStyle = str;\n  }\n\n  /**\n    * set the globalCompositeOperation of the context.\n    * @param {String} str - new value for globalCompositeOperation\n    * @type {String}\n  */\n  set globalCompositeOperation(str) {\n    this._context.globalCompositeOperation = str;\n  }\n\n  /**\n    * set the alpha the context.\n    * @param {Float} num - new value for globalAlpha\n    * @type {Float}\n  */\n  set globalAlpha(num) {\n    this._context.globalAlpha = num;\n  }\n\n  /**\n    * set the stroke width of the context.\n    * @param {Float} num - new value for lineWidth\n    * @type {Float}\n  */\n  set lineWidth(num) {\n    this._context.lineWidth = num;\n  }\n\n  /**\n    * sets the stroke color of the context.\n    * @param {String} str - new value for strokeStyle\n    * @type {String}\n  */\n  set strokeStyle(str) {\n    this._context.strokeStyle = str;\n  }\n\n  /* **************\n  * drawing methods\n  ****************/\n\n  /**\n    * draws an arc on the context\n    * @param {Float} x - center point's x position\n    * @param {Float} y - center point's y position\n    * @param {Float} radius - arc's radius\n    * @param {Float} [startAngle = 0] - angle to begin arc\n    * @param {Float} [endAngle = Math.PI * 2] - angle to end arc\n    * @param {Boolean} [anticlockwise = false] - draws anticlockwise if true\n    * @returns {void}\n  */\n  arc = (x, y, radius, startAngle = 0, endAngle = Math.PI * 2, anticlockwise = false) => {\n    this._context.arc(x, y, radius, startAngle, endAngle, anticlockwise);\n  }\n\n  /**\n    * begins a drawing path on the context\n    * @returns {void}\n  */\n  beginPath = () => {\n    this._context.beginPath();\n  }\n\n  /**\n    * draws an bezier curve on the context\n    * @returns {void}\n  */\n  bezierCurveTo = (...args) => {\n    this._context.bezierCurveTo(...args);\n  }\n\n  /**\n    * clears a rectangle on the context. also nulls the _imageDataHandler value if one exists.\n    * @param {Float} [x = 0] - rectangle's x position\n    * @param {Float} [y = 0] - rectangle's y position\n    * @param {Float} [width = this.width] - rectangle's width\n    * @param {Float} [height = this.height] - rectangle's height\n    * @returns {void}\n  */\n  clearRect = (x = 0, y = 0, width = this.width, height = this.height) => {\n    this._context.clearRect(x, y, width, height);\n    this._imageDataHandler = null;\n  }\n\n  /**\n    * creates a clipping path on the context for future drawing calls.\n    * @returns {void}\n  */\n  clip = (...args) => {\n    this._context.clip(...args);\n  }\n\n  /**\n    * closes a path on the context\n    * @returns {void}\n  */\n  closePath = () => {\n    this._context.closePath();\n  }\n\n  // eslint-disable valid-jsdoc\n  /**\n    * draws an Image or canvas element into the context. also nulls the _imageDataHandler value if one exists.\n    * method overloading to reflect CanvasRenderingContext2D.drawImage.\n    * @param {Canvas|Image|HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} source - where to take pixels from\n    * @param {Float} [dx = 0] - x coordinate of source's destination\n    * @param {Float} [dy = 0] - y coordinate of source's destination\n    * @param {Float} [dWidth = image.width] - width of destination\n    * @param {Float} [dHeight = image.height] - height of destination\n    * @returns {void}\n  */\n  /**\n    * draws an Image or canvas element into the context. also nulls the _imageDataHandler value if one exists.\n    * method overloading to reflect CanvasRenderingContext2D.drawImage.\n    * @param {Canvas|Image|HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} source - where to take pixels from\n    * @param {Float} sx - x coordinate of where to pull from source\n    * @param {Float} sy - y coordinate of where to pull from source\n    * @param {Float} sWidth - width of area to pull from source\n    * @param {Float} sHeight - height of area to pull from source\n    * @param {Float} dx - x coordinate of source's destination\n    * @param {Float} dy - y coordinate of source's destination\n    * @param {Float} dWidth - width of destination\n    * @param {Float} dHeight - height of destination\n    * @returns {void}\n  */\n  drawImage = (source, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight) => { // eslint-disable-line max-params\n    // sx, sy, sWidth, sHeight on images do not get scaled against devicePixelRatio\n    const hasSource = typeof dx === 'number';\n    const isCanvas = source instanceof Canvas;\n    if (hasSource) {\n      if (isCanvas) {\n        sx *= this._devicePixelRatio;\n        sy *= this._devicePixelRatio;\n        sWidth *= this._devicePixelRatio;\n        sHeight *= this._devicePixelRatio;\n        this._context.drawImage(source.element, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);\n      } else {\n        this._context.drawImage(source, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);\n      }\n    } else if (isCanvas) {\n      sWidth = sWidth || source.width;\n      sHeight = sHeight || source.height;\n      this._drawImageDest(source.element, sx, sy, sWidth, sHeight);\n    } else {\n      this._drawImageDest(source, sx, sy, sWidth, sHeight);\n    }\n    this._imageDataHandler = null;\n  }\n  // eslint-enable valid-jsdoc\n\n  _drawImageDest = (source, dx = 0, dy = 0, dWidth = source.width, dHeight = source.height) => {\n    this._context.drawImage(source, dx, dy, dWidth, dHeight);\n  }\n\n  /**\n    * fills a path on the context. also nulls the _imageDataHandler value if one exists.\n    * @returns {void}\n  */\n  fill = (...args) => {\n    this._context.fill(...args);\n    this._imageDataHandler = null;\n  }\n\n  /**\n    * draws a filled rectangle on the context. also nulls the _imageDataHandler value if one exists.\n    * @param {Float} [x = 0] - rectangle's x position\n    * @param {Float} [y = 0] - rectangle's y position\n    * @param {Float} [width = this.width] - rectangle's width\n    * @param {Float} [height = this.height] - rectangle's height\n    * @returns {void}\n  */\n  fillRect = (x = 0, y = 0, width = this.width, height = this.height) => {\n    this._context.fillRect(x, y, width, height);\n    this._imageDataHandler = null;\n  }\n\n  /**\n    * draws a line to a point on the context.\n    * @returns {void}\n  */\n  lineTo = (...args) => {\n    this._context.lineTo(...args);\n  }\n\n  /**\n    * moves to a point on the context.\n    * @returns {void}\n  */\n  moveTo = (...args) => {\n    this._context.moveTo(...args);\n  }\n\n  /**\n    * draws a quadratic curve to a point on the context.\n    * @returns {void}\n  */\n  quadraticCurveTo = (...args) => {\n    this._context.quadraticCurveTo(...args);\n  }\n\n  /**\n    * draws a rectangle on the context.\n    * @param {Float} [x = 0] - rectangle's x position\n    * @param {Float} [y = 0] - rectangle's y position\n    * @param {Float} [width = this.width] - rectangle's width\n    * @param {Float} [height = this.height] - rectangle's height\n    * @returns {void}\n  */\n  rect = (x = 0, y = 0, width = this.width, height = this.height) => {\n    this._context.rect(x, y, width, height);\n  }\n\n  // scale: no scale method! use resize instead!\n\n  /**\n    * strokes the context's current path.\n    * @returns {void}\n  */\n  stroke = (...args) => {\n    this._context.stroke(...args);\n    this._imageDataHandler = null;\n  }\n\n  /* *********************\n  * transformation methods\n  ***********************/\n\n  /**\n    * resets all transforms on the context to zero.\n    * @returns {void}\n  */\n  resetTransform = () => {\n    this._context.resetTransform();\n    // if canvas was scaled it would otherwise be undone\n    this._context.scale(this._devicePixelRatio, this._devicePixelRatio);\n  }\n\n  /**\n    * restores context to a saved state of popped off of a stack.\n    * @returns {void}\n  */\n  restore = () => {\n    this._context.restore();\n  }\n\n  /**\n    * cumulatively rotates the context around x/y coordinates.\n    * @param {Float} angle - amount to rotate\n    * @param {Float} [x = this.width / 2] - center x position\n    * @param {Float} [y = this.height / 2] - center y position\n    * @returns {void}\n  */\n  rotate = (angle, x = 0.5 * this.width, y = 0.5 * this.height) => {\n    if (!angle) {\n      return;\n    }\n    rotate(angle, x, y, this._context, this._context.transform);\n  }\n\n  /**\n    * pushes a saved state of the curent context onto a stack.\n    * @returns {void}\n  */\n  save = () => {\n    this._context.save();\n  }\n\n  /**\n    * resets the context's rotation to a new amount around x/y coordinates.\n    * @param {Float} angle - amount to rotate\n    * @param {Float} [x = this.width / 2] - center x position\n    * @param {Float} [y = this.height / 2] - center y position\n    * @returns {void}\n  */\n  setRotate = (angle, x = 0.5 * this.width, y = 0.5 * this.height) => {\n    rotate(angle, x, y, this._context, this.setTransform);\n  }\n\n  /**\n    * resets the context's transform to new values.\n    * @param {Float} xScale - horizontal scale\n    * @param {Float} xSkew - horizontal skew\n    * @param {Float} ySkew - verical skew\n    * @param {Float} yScale - vertical movement\n    * @param {Float} dx - horizontal movement\n    * @param {Float} dy - vertical movement\n    * @returns {void}\n  */\n  setTransform = (xScale, xSkew, ySkew, yScale, dx, dy) => {\n    xScale *= this._devicePixelRatio;\n    xSkew *= this._devicePixelRatio;\n    ySkew *= this._devicePixelRatio;\n    yScale *= this._devicePixelRatio;\n    dx *= this._devicePixelRatio;\n    dy *= this._devicePixelRatio;\n    this._context.setTransform(xScale, xSkew, ySkew, yScale, dx, dy);\n  }\n\n  /**\n    * sets the context's grid to coordinates.\n    * @param {Float} dx - horizontal movement\n    * @param {Float} dy - vertical movement\n    * @returns {void}\n  */\n  setTranslate = (dx, dy) => {\n    this.setTransform(1, 0, 0, 1, dx, dy);\n  }\n\n  /**\n    * cumulatively moves the context's grid by coordinates.\n    * @param {Float} dx - horizontal movement\n    * @param {Float} dy - vertical movement\n    * @returns {void}\n  */\n  translate = (dx, dy) => {\n    this._context.translate(dx, dy);\n  }\n\n  /* ***********\n  * misc methods\n  *************/\n\n  // eslint-disable valid-jsdoc\n  /**\n    * creates a blank ImageData based on provided width/height.\n    * method overloading to reflect CanvasRenderingContext2D.createImageData.\n    * @param {Number} width - a width amount\n    * @param {Number} height - a height amount\n    * @returns {void}\n  */\n  /**\n    * creates a blank ImageData based on a provided ImageData's dimensions.\n    * method overloading to reflect CanvasRenderingContext2D.createImageData.\n    * @param {ImageData} imageData - an existing ImageData instance\n    * @returns {void}\n  */\n  // eslint-enable valid-jsdoc\n  createImageData = (imageDataOrWidth, height) => {\n    return this._context.createImageData(imageDataOrWidth, height);\n  }\n\n  /* *************\n  * static methods\n  ***************/\n\n  /**\n    * returns Path2D of a path approximately through an array of points.\n    * @param {Array} points - array of points\n    * @param {Path2D} [path = new Path2D()] - Path2D instance to add instructions to\n    * @returns {void}\n  */\n  static quadraticThrough(points, path = new Path2D()) {\n    const { length } = points;\n    let lastPoint;\n    let nextPoint;\n    for (let i = 0; i < length - 1; i++) {\n      lastPoint = nextPoint || points[0];\n      nextPoint = points[i + 1];\n      if (i === 0) {\n        path.moveTo(lastPoint.x, lastPoint.y);\n      } else if (i < length - 2) {\n        const avgX = (lastPoint.x + nextPoint.x) / 2;\n        const avgY = (lastPoint.y + nextPoint.y) / 2;\n        path.quadraticCurveTo(lastPoint.x, lastPoint.y, avgX, avgY);\n      } else {\n        path.quadraticCurveTo(lastPoint.x, lastPoint.y, nextPoint.x, nextPoint.y);\n      }\n    }\n    return path;\n  }\n}\n","let frequencies;\nlet currentOscillators;\nlet audioCtx;\nlet gainNode;\n\nexport function initializaAudio(semitones, a4, minFreq, maxFreq) {\n  if (audioCtx) {\n    audioCtx.close();\n  }\n  audioCtx = new (window.AudioContext || window.webkitAudioContext)();\n  gainNode = audioCtx.createGain();\n\n  gainNode.connect(audioCtx.destination);\n\n  // TODO: figure out this gain value\n  gainNode.gain.value = 0.1;\n\n  currentOscillators = [];\n  frequencies = [];\n  for(let i = 0; i < semitones; i++) {\n    frequencies[i] = findFrequencies(i, a4, minFreq, maxFreq, semitones)\n  }\n}\n\nfunction findFrequencies(distance, a4, minFreq, maxFreq, semitones) {\n  let lowestFrequency = a4 * Math.pow(Math.pow(2, 1 / semitones), distance);\n\n  while(lowestFrequency >= minFreq) {\n    lowestFrequency /= 2;\n  }\n  lowestFrequency *= 2;\n\n  const frequencies = [];\n  for (let currentFrequency = lowestFrequency; currentFrequency <= maxFreq; currentFrequency *= 2) {\n    frequencies.push(currentFrequency);\n  }\n  return frequencies;\n}\n\nfunction startNote(index, type) {\n  const oscillators = [];\n  currentOscillators[index] = oscillators;\n  for(const frequency of frequencies[index]) {\n    const oscillator = audioCtx.createOscillator();\n    oscillator.frequency.value = frequency;\n    oscillator.type = type;\n    oscillator.connect(gainNode);\n    oscillator.start();\n    oscillators.push(oscillator);\n  }\n}\n\nfunction stopNote(index) {\n  for(const oscillator of currentOscillators[index]) {\n    oscillator.stop();\n  }\n  currentOscillators[index] = null;\n}\n\nexport function toggleNote(note, isPlaying, type) {\n  if (isPlaying && !currentOscillators[note]) {\n    startNote(note, type);\n  } else if (!isPlaying && currentOscillators[note]) {\n    stopNote(note);\n  }\n}\n","import styles from './Display.module.scss';\nimport classnames from 'classnames';\nimport React from 'react';\nimport Canvas from './canvas';\n\nconst colors = ['#f00', '#f80', '#ff0', '#8f0', '#0f0', '#0f8', '#0ff', '#08f', '#00f', '#80f', '#f0f', '#f08'];\n\nexport default class Display extends React.Component {\n  state={}\n\n  constructor(props) {\n    super(props);\n    this._rootNode = React.createRef();\n  }\n\n  componentDidMount() {\n    const {current} = this._rootNode;\n    const {offsetWidth, offsetHeight} = current;\n    this._root = new Canvas(current);\n    this._root.globalCompositeOperation = 'copy';\n    this._buffer = new Canvas(undefined, offsetWidth, offsetHeight);\n    this._background = new Canvas(undefined, offsetWidth, offsetHeight);\n\n\n    this._drawBackground();\n    this._root.drawImage(this._background);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.isChromatic !== this.props.isChromatic) {\n      this._drawBackground();\n      this._root.drawImage(this._background);\n    }\n    if (prevProps.activeNotes !== this.props.activeNotes) {\n      this._buffer.clearRect();\n      this._buffer.drawImage(this._background);\n      // this._buffer.globalCompositeOperation = 'hue';\n      // this._buffer.globalCompositeOperation = 'multiply';\n      // this._buffer.globalCompositeOperation = 'screen';\n      // this._buffer.globalCompositeOperation = 'overlay';\n      // this._buffer.globalCompositeOperation = 'darken';\n      // this._buffer.globalCompositeOperation = 'lighten';\n      // this._buffer.globalCompositeOperation = 'color-dodge';\n      // this._buffer.globalCompositeOperation = 'color-burn';\n      // this._buffer.globalCompositeOperation = 'luminosity';\n      this._drawHitStates();\n      this._connectNotes();\n      // this._buffer.globalCompositeOperation = 'source-over';\n      this._root.drawImage(this._buffer);\n    }\n  }\n\n  componentWillUnmount() {\n\n  }\n\n  render() {\n    const {className} = this.props;\n    return <canvas className={classnames(styles.root, className)} ref={this._rootNode} />;\n  }\n\n  _convertIndex(index) {\n    const {rootPitch, semitones, layoutIncrement} = this.props;\n    return ((index - rootPitch + semitones) * layoutIncrement) % semitones;\n  }\n\n  _drawBackground() {\n    const {isChromatic, rootPitch, semitones} = this.props;\n    for (let i = 0; i < colors.length; i++) {\n      this._convertIndex(i)\n      const color = colors[this._convertIndex((i + rootPitch) % semitones)];\n      fillSlice(this._background, color, i);\n    }\n  }\n\n  _drawHitStates() {\n    const {activeNotes, layoutIncrement, semitones, rootPitch} = this.props;\n    for (const note of this.props.activeNotes) {\n      fillSlice(this._buffer, `rgba(0,0,0,0.2)`, this._convertIndex(note));\n    }\n  }\n\n  _connectNotes() {\n    const {activeNotes} = this.props;\n    const center = this._buffer.width / 2;\n    const slice = Math.PI * 2 / 12;\n    const canvas = this._buffer;\n    for (let i = 0; i < activeNotes.length; i++) {\n      const beginRad = slice * (activeNotes[i] + 9);\n      const beginCos = Math.cos(beginRad);\n      const beginSin = Math.sin(beginRad);\n      for (let j = i; j < activeNotes.length; j++) {\n        const endRad = slice * (activeNotes[j] + 9);\n        const endCos = Math.cos(endRad);\n        const endSin = Math.sin(endRad);\n        canvas.beginPath();\n        canvas.moveTo(center + beginCos * center, center + beginSin * center)\n        canvas.lineTo(center + endCos * center, center + endSin * center);\n        canvas.stroke();\n      }\n    }\n  }\n}\n\nfunction fillSlice(canvas, color, index) {\n  const center = canvas.width / 2;\n  const slice = Math.PI * 2 / 12;\n\n  canvas.beginPath();\n  canvas.fillStyle = color;\n  canvas.moveTo(center, center);\n\n  const rad = slice * (index - 3.5);\n  const cos = Math.cos(rad);\n  const sin = Math.sin(rad);\n  canvas.lineTo(center + cos * center, center + sin * center);\n\n  const closingRad = rad + slice;\n  canvas.arc(center, center, center, rad, closingRad);\n  canvas.fill();\n}\n","import styles from './App.module.scss';\nimport Menu from './Menu/Menu';\nimport {useState} from 'react';\nimport {MIN_FREQ, MAX_FREQ, TEMPERMENT_TYPES, OSCILLATOR_TYPES} from '../constants';\nimport findIncrementOptions from '../util/findIncrementOptions';\nimport ResizeListener from './ResizeListener/ResizeListener';\nimport Label from './Label/Label';\nimport TouchPad from './TouchPad/TouchPad';\nimport Display from './Display/Display';\nimport {initializaAudio, toggleNote} from '../util/shepardTone'\n\nexport default function App() {\n  let [isMenuOpen, setMenuOpen] = useState(false);\n  let [a4, setA4] = useState(440);\n  let [temperment, setTemperment] = useState(TEMPERMENT_TYPES.EQUAL);\n  let [oscillator, setOscillator] = useState(OSCILLATOR_TYPES.SINE);\n  let [rootPitch, setRootPitch] = useState(3);\n\n  let [minFreq, setMinFreq] = useState(MIN_FREQ);\n  let [maxFreq, setMaxFreq] = useState(MAX_FREQ);\n  function changeMinFreq(num) {\n    if (num >= maxFreq) {\n      setMaxFreq(num + 1);\n    }\n    setMinFreq(num);\n  }\n  function changeMaxFreq(num) {\n    if (num <= minFreq) {\n      setMinFreq(num - 1);\n    }\n    setMaxFreq(num);\n  }\n\n  let [semitones, setSemitones] = useState(12);\n  function changeSemitones(num) {\n    const incrementOptions = findIncrementOptions(num);\n    if (incrementOptions.indexOf(layoutIncrement) >= 0) {\n      setLayoutIncrement(1);\n    }\n    if (temperment !== TEMPERMENT_TYPES.EQUAL) {\n      setTemperment(TEMPERMENT_TYPES.EQUAL);\n    }\n    setSemitones(num);\n  }\n\n  let [layoutIncrement, setLayoutIncrement] = useState(1);\n  function changeLayoutIncrement(num) {\n    setLayoutIncrement(num);\n  }\n\n\n  let [hasInitializedAudio, setHasInitializedAudio] = useState(false);\n  function onInitialClick() {\n    initializaAudio(semitones, a4, minFreq, maxFreq);\n    setHasInitializedAudio(true);\n  }\n\n  function onMenuButtonClick() {\n    if (isMenuOpen) {\n      initializaAudio(semitones, a4, minFreq, maxFreq);\n    }\n    setMenuOpen(!isMenuOpen);\n  }\n\n  let [activeNotes, setActiveNotes] = useState([]);\n\n  function onTouchCallback(directions) {\n    const activeNotes = [];\n    for (let direction of directions) {\n      const pitch = ((direction * layoutIncrement) + rootPitch) % semitones;\n      activeNotes.push(pitch);\n    }\n\n    for(let i = 0; i < semitones; i++) {\n      if (activeNotes.indexOf(i) >= 0) {\n        toggleNote(i, true, oscillator)\n      } else {\n        toggleNote(i, false, oscillator)\n      }\n    }\n\n    setActiveNotes(activeNotes);\n  }\n\n  return (\n    <div className={styles.root} onClick={hasInitializedAudio ? null : onInitialClick}>\n      <div className={styles.contentHolder}>\n      </div>\n      <ResizeListener>\n        {function(innerWidth, innerHeight) {\n          const smallest = Math.min(innerWidth, innerHeight);\n          return <div className={styles.wheelHolder} style={{width: `${smallest}px`, height: `${smallest}px`}}>\n            <Display\n              semitones={semitones}\n              layoutIncrement={layoutIncrement}\n              activeNotes={activeNotes}\n              rootPitch={rootPitch}\n            />\n            <Label\n              layoutIncrement={layoutIncrement}\n              rootPitch={rootPitch}\n              semitones={semitones}\n            />\n            {hasInitializedAudio && <TouchPad\n              callback={onTouchCallback}\n              semitones={semitones}\n            />}\n          </div>\n        }}\n      </ResizeListener>\n\n      {isMenuOpen && <div className={styles.menuHolder}><Menu\n        minFreq={minFreq}\n        maxFreq={maxFreq}\n        setMinFreq={changeMinFreq}\n        setMaxFreq={changeMaxFreq}\n        a4={a4}\n        setA4={setA4}\n        temperment={temperment}\n        setTemperment={setTemperment}\n        oscillator={oscillator}\n        setOscillator={setOscillator}\n        semitones={semitones}\n        setSemitones={changeSemitones}\n        rootPitch={rootPitch}\n        setRootPitch={setRootPitch}\n        layoutIncrement={layoutIncrement}\n        setLayoutIncrement={changeLayoutIncrement}\n      /></div>}\n\n      <button className={styles.menuButton} onClick={onMenuButtonClick}>{isMenuOpen ? 'close menu' : 'open menu'}</button>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/reset.module.scss';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__nWMuC\",\"menuHolder\":\"App_menuHolder__243kY\",\"menuButton\":\"App_menuButton__3IBp4\",\"contentHolder\":\"App_contentHolder__3Zpi7\",\"wheelHolder\":\"App_wheelHolder__1I76D\"};"],"sourceRoot":""}