{"version":3,"sources":["App/App.module.scss","App/PitchLabel/PitchLabel.module.scss","App/MatchingChords/MatchingChords.module.scss","App/ChordLabel/ChordLabel.module.scss","App/Menu/Menu.module.scss","App/Display/Display.module.scss","App/Menu/Input/Input.module.scss","App/Button/Button.module.scss","App/TouchPad/TouchPad.module.scss","App/Display/canvas.js","util/music.js","util/constants.js","App/Display/findColors.js","App/Display/fillSlice.js","util/findIntervalRatio.js","App/Display/drawInterval.js","App/Display/Display.js","App/Menu/Input/Input.js","App/Button/Button.js","App/Menu/Menu.js","App/PitchLabel/PitchLabel.js","App/ChordLabel/ChordLabel.js","App/TouchPad/TouchPad.js","App/FirstTouch/FirstTouch.js","App/MatchingChords/MatchingChords.js","util/findPitchSkipOptions.js","util/findAllPitchNames.js","util/findBestPitchNames.js","util/findPitchNames.js","util/findBaseFrequencies.js","util/findPitchSequence.js","util/findChordNames.js","util/sortPitchNames.js","util/shepardTone.js","util/hooks.js","util/findChords.js","App/App.js","reportWebVitals.js","index.js"],"names":["module","exports","rotate","angle","x","y","ctx","func","cos","Math","sin","dx","dy","call","Canvas","element","document","createElement","width","offsetWidth","height","offsetHeight","devicePixelRatio","window","resize","isMounted","_element","parentNode","_width","_height","_devicePixelRatio","_imageDataHandler","_context","scale","arc","radius","startAngle","endAngle","PI","anticlockwise","beginPath","bezierCurveTo","clearRect","clip","closePath","drawImage","source","sx","sy","sWidth","sHeight","dWidth","dHeight","isCanvas","_drawImageDest","fill","fillRect","lineTo","moveTo","quadraticCurveTo","rect","stroke","resetTransform","restore","transform","save","setRotate","setTransform","xScale","xSkew","ySkew","yScale","setTranslate","translate","createImageData","imageDataOrWidth","this","getContext","str","fillStyle","globalCompositeOperation","num","globalAlpha","lineWidth","strokeStyle","points","lastPoint","nextPoint","path","Path2D","length","i","avgX","avgY","HUMAN_MAX_FREQ","STANDARD_SEMITONES","STANDARD_A4","CENTS_PER_STANDARD_SEMITONE","CENTS_PER_OCTAVE","A4","415","427","428","429","430","430.54","432","435","439","transposeFrequency","frequency","cents","pow","DEGREES_IN_CIRCLE","RADIANS_IN_CIRCLE","EQ_FREQUENCIES","push","MODES","name","chords","useModeForNaming","OSCILLATOR_TYPES","SINE","SQUARE","TRIANGLE","findDirectionalColor","direction","colorSlice","cosR","cosG","cosB","r","round","g","b","flipRadiansVertically","radians","atan2","fillSlice","canvas","color","diameter","startRadians","endRadians","outerRadius","holeRadius","isInKey","center","isCircle","modulo","findIntervalRatio","fRoot","fComparison","fA","fB","log2","abs","drawInterval","radianA","radianB","frequencyA","frequencyB","colorA","colorB","pointA","pointB","interval","xDiff","yDiff","diff","sqrt","radiusA","radiusB","centerX","centerY","Display","className","activePitches","baseFrequencies","mode","pitchSequence","rootNode","useRef","useState","root","setRoot","buffer","setBuffer","useEffect","current","undefined","semitones","colors","buttonSlice","toRadianDirection","findColors","halfSlice","degrees","isActive","indexOf","drawSlices","pitchA","degreesA","j","pitchB","degreesB","connectPitches","classnames","styles","ref","Input","rest","Button","href","component","Component","target","findIncrementLabel","increment","Menu","a4","setA4","allPitchNames","eq","setEq","setMode","oscillator","setOscillator","pitchSkip","setPitchSkip","setSemitones","transposition","setTransposition","pitchSkipOptions","onOscillatorChange","value","onEQChange","index","values","property","title","Object","map","label","type","checked","onChange","labelText","reset","onClick","evt","preventDefault","verticalRangeHolder","verticalRange","min","max","step","bind","columns","parseInt","modeObj","valueText","wide","keys","issue","PitchLabel","pitchNamesSorted","chordNamesSorted","transformOrigin","hasAccidental","isSmall","button","small","deemphesized","style","ChordLabel","IS_TOUCH_SCREEN","TouchPad","listeners","callback","pointerIsDown","setPointerIsDown","handle","pitches","isTouchEvent","test","getBoundingClientRect","findPitchIndex","clientX","clientY","rad","toDegreeDirection","floor","targetTouches","touch","onTouchStart","onTouchEnd","onTouchCancel","onTouchMove","onMouseUp","onMouseDown","onMouseMove","FirstTouch","hasCalledCallback","setHasCalledCallback","onMouseEnter","onMouseLeave","onMouseOver","onMouseOut","MatchingChords","chordHolders","fingersNeeded","chord","chordHolder","findPitchSkipOptions","increments","findIncrementsOfSemitone","semitoneIndexes","semitoneIndex","PITCH_NAMES","m","findAllPitchNames","allNames","array","letters","lastLetterIndex","makeArrayWithNakedLettersInKeySpots","pitchName","lastPitchName","nextPitchName","Array","isArray","findIndex","node","addAccidentalsToKeySpots","hasFlats","join","hasSharps","fillInEmptySpots","findBestPitchNames","lowestNumOfIncidentals","Number","MAX_VALUE","lowestNames","t","names","incidentals","countKeyIncidentals","match","findPitchNames","nameIndexFloat","nameIndex","prefix","remainder","String","slice","findBaseFrequencies","rootFrequency","frequencies","findPitchSequence","sequence","findChordNames","modeIndex","twelveChordsInMode","semitonesChordsInMode","sortPitchNames","pitchNames","currentOscillators","audioContext","gainNode","headNode","initializaAudio","close","AudioContext","webkitAudioContext","createGain","connect","destination","gain","eqNode","createBiquadFilter","findAudibleOctaves","toggleNote","note","isPlaying","oscillators","oscillatorNode","createOscillator","start","startNote","stop","stopNote","WIN","PLACEHOLDER_WINDOW","addEventListener","innerHeight","innerWidth","removeEventListener","CHORDS","suffix","textTransform","additionalPitches","findChords","inversions","results","pitch","findInversionsOfChord","sort","sortAscending","matchingChords","forEach","inversion","inversionLowered","rootPitch","correctPitches","findFingersNeeded","sortMatchingChords","chordA","chordB","replaceState","throttle","queryString","history","location","origin","pathname","App","urlParams","parse","search","parseNumbers","arrayFormat","useURLParams","key","def","changeParams","stringify","isEqual","setAllPitchNames","setPitchNames","setPitchSkipOptions","_ps","_eq","setRootFrequency","setBaseFrequencies","setPitchSequence","setPitchNamesSorted","setChordNamesSorted","setActivePitches","activeChords","setActiveChords","win","setInnerHeight","setInnerWidth","onResize","useViewportDimensions","isMenuOpen","setMenuOpen","contentHolder","wheelHolder","newPitches","low","high","randomAmount","random","randomPitches","randomPitch","addRandomPitches","menuHolder","menuButton","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.165a4eeb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__nWMuC\",\"menuHolder\":\"App_menuHolder__243kY\",\"menuButton\":\"App_menuButton__3IBp4\",\"contentHolder\":\"App_contentHolder__3Zpi7\",\"wheelHolder\":\"App_wheelHolder__1I76D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PitchLabel_root__3-xxj\",\"button\":\"PitchLabel_button__29U3k\",\"hasAccidental\":\"PitchLabel_hasAccidental__xtPck\",\"small\":\"PitchLabel_small__3x-Zk\",\"deemphesized\":\"PitchLabel_deemphesized__Gd1GB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"MatchingChords_root__56skG\",\"chordHolder\":\"MatchingChords_chordHolder__QGRl6\",\"fingersNeeded0\":\"MatchingChords_fingersNeeded0__2ftp0\",\"chord\":\"MatchingChords_chord__25OHW\",\"fingersNeeded1\":\"MatchingChords_fingersNeeded1__1c1IT\",\"fingersNeeded2\":\"MatchingChords_fingersNeeded2__1dx63\",\"fingersNeeded3\":\"MatchingChords_fingersNeeded3__2980F\",\"fingersNeeded4\":\"MatchingChords_fingersNeeded4__1gmzO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ChordLabel_root__U_GCi\",\"button\":\"ChordLabel_button__3bTYZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Menu_root__3QA5H\",\"property\":\"Menu_property__qoOWz\",\"title\":\"Menu_title__tE_9H\",\"reset\":\"Menu_reset__uN5da\",\"columns\":\"Menu_columns__3o8dK\",\"label\":\"Menu_label__3hKMT\",\"wide\":\"Menu_wide__2sfIP\",\"labelText\":\"Menu_labelText__2uoMn\",\"valueText\":\"Menu_valueText__37XmB\",\"verticalRangeHolder\":\"Menu_verticalRangeHolder__2TdXL\",\"verticalRange\":\"Menu_verticalRange__3aZoM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Display_root__ig8ld\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Input_root__2EB5Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Button_root__1mUtC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TouchPad_root__22wzt\"};","// import ImageDataHandler from './image-data-handler';\n\nfunction rotate(angle, x, y, ctx, func) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const dx = x - cos * x - sin * -y;\n  const dy = y - sin * x - cos * y;\n  func.call(ctx, cos, sin, -sin, cos, dx, dy);\n}\n\n/**\n* a helper for canvas manipulation, to store a reference to the element as well as it's context.\nalso adds some helpful method defaults. also has some drawing utilities.\n* @param {HTMLCanvasElement} [element = document.createElement('canvas')] - put HTMLCanvasElement if this is your\n* final render canvas\n* @param {Integer} [width = element.offsetWidth] - width of area\n* @param {Integer} [height = element.offsetHeight] - height of area\n* @param {Float} [devicePixelRatio = window.devicePixelRatio] - actual pixels to css pixel\n*/\nexport default class Canvas {\n  /* *******************\n  * initializing methods\n  *********************/\n\n  constructor(element = document.createElement('canvas'), width = element.offsetWidth, height = element.offsetHeight, devicePixelRatio = window.devicePixelRatio) { // eslint-disable-line max-len\n    this._element = element;\n    this._context = this._element.getContext('2d');\n    this.resize(width, height, devicePixelRatio);\n  }\n\n  /**\n    * sets width/height properties as well as scaling\n    * @param {Integer} [width = this.width] - width of area of canvas\n    * @param {Integer} [height = this.height] - height of area of canvas\n    * @param {Float} [devicePixelRatio = window.devicePixelRatio] - actual pixels to css pixel\n    * @returns {void}\n  */\n  // eslint-disable complexity\n  resize = (width, height, devicePixelRatio = window.devicePixelRatio) => {\n    // allow for case to call with no params when devicePixelRatio is changed\n    // allow for case to call with no params when dom element is resized\n    // otherwise width and height are defined\n    // this method will erase the canvas and reset any clipping, fillStyle, lineWidth, strokeStyle, etc...\n    if (!width || !height) {\n      const isMounted = !!this._element.parentNode;\n      width = isMounted ? this._element.offsetWidth : this._width;\n      height = isMounted ? this._element.offsetHeight : this._height;\n    }\n    this._devicePixelRatio = devicePixelRatio;\n    this._width = width;\n    this._height = height;\n    this._element.width = width * this._devicePixelRatio;\n    this._element.height = height * this._devicePixelRatio;\n    this._imageDataHandler = null;\n    this._context.scale(this._devicePixelRatio, this._devicePixelRatio);\n  }\n  // eslint-enable complexity\n\n  /* ******\n  * getters\n  ********/\n\n  /**\n    * get the instance's HTMLCanvasElement\n    * @readonly\n    * @type {HTMLCanvasElement}\n  */\n  get element() {\n    return this._element;\n  }\n\n  /**\n    * get the instance's height\n    * @readonly\n    * @type {Integer}\n  */\n  get height() {\n    return this._height;\n  }\n\n  /**\n    * get the instance's ImageDataHandler reflecting the current state\n    * @readonly\n    * @type {ImageDataHandler}\n  */\n  get imageDataHandler() {\n    // if (!this._imageDataHandler) {\n      // const width = this._width * this._devicePixelRatio;\n      // const height = this._height * this._devicePixelRatio;\n      // this._imageDataHandler = new ImageDataHandler(this._context, 0, 0, width, height);\n    // }\n    return this._imageDataHandler;\n  }\n\n  /**\n    * get the instance's width\n    * @readonly\n    * @type {Integer}\n  */\n  get width() {\n    return this._width;\n  }\n\n  /* ******\n  * setters\n  ********/\n\n  /**\n    * set the fill color of the context.\n    * @param {String} str - new value for fillStyle\n    * @type {String}\n  */\n  set fillStyle(str) {\n    this._context.fillStyle = str;\n  }\n\n  /**\n    * set the globalCompositeOperation of the context.\n    * @param {String} str - new value for globalCompositeOperation\n    * @type {String}\n  */\n  set globalCompositeOperation(str) {\n    this._context.globalCompositeOperation = str;\n  }\n\n  /**\n    * set the alpha the context.\n    * @param {Float} num - new value for globalAlpha\n    * @type {Float}\n  */\n  set globalAlpha(num) {\n    this._context.globalAlpha = num;\n  }\n\n  /**\n    * set the stroke width of the context.\n    * @param {Float} num - new value for lineWidth\n    * @type {Float}\n  */\n  set lineWidth(num) {\n    this._context.lineWidth = num;\n  }\n\n  /**\n    * sets the stroke color of the context.\n    * @param {String} str - new value for strokeStyle\n    * @type {String}\n  */\n  set strokeStyle(str) {\n    this._context.strokeStyle = str;\n  }\n\n  /* **************\n  * drawing methods\n  ****************/\n\n  /**\n    * draws an arc on the context\n    * @param {Float} x - center point's x position\n    * @param {Float} y - center point's y position\n    * @param {Float} radius - arc's radius\n    * @param {Float} [startAngle = 0] - angle to begin arc\n    * @param {Float} [endAngle = Math.PI * 2] - angle to end arc\n    * @param {Boolean} [anticlockwise = false] - draws anticlockwise if true\n    * @returns {void}\n  */\n  arc = (x, y, radius, startAngle = 0, endAngle = Math.PI * 2, anticlockwise = false) => {\n    this._context.arc(x, y, radius, startAngle, endAngle, anticlockwise);\n  }\n\n  /**\n    * begins a drawing path on the context\n    * @returns {void}\n  */\n  beginPath = () => {\n    this._context.beginPath();\n  }\n\n  /**\n    * draws an bezier curve on the context\n    * @returns {void}\n  */\n  bezierCurveTo = (...args) => {\n    this._context.bezierCurveTo(...args);\n  }\n\n  /**\n    * clears a rectangle on the context. also nulls the _imageDataHandler value if one exists.\n    * @param {Float} [x = 0] - rectangle's x position\n    * @param {Float} [y = 0] - rectangle's y position\n    * @param {Float} [width = this.width] - rectangle's width\n    * @param {Float} [height = this.height] - rectangle's height\n    * @returns {void}\n  */\n  clearRect = (x = 0, y = 0, width = this.width, height = this.height) => {\n    this._context.clearRect(x, y, width, height);\n    this._imageDataHandler = null;\n  }\n\n  /**\n    * creates a clipping path on the context for future drawing calls.\n    * @returns {void}\n  */\n  clip = (...args) => {\n    this._context.clip(...args);\n  }\n\n  /**\n    * closes a path on the context\n    * @returns {void}\n  */\n  closePath = () => {\n    this._context.closePath();\n  }\n\n  // eslint-disable valid-jsdoc\n  /**\n    * draws an Image or canvas element into the context. also nulls the _imageDataHandler value if one exists.\n    * method overloading to reflect CanvasRenderingContext2D.drawImage.\n    * @param {Canvas|Image|HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} source - where to take pixels from\n    * @param {Float} [dx = 0] - x coordinate of source's destination\n    * @param {Float} [dy = 0] - y coordinate of source's destination\n    * @param {Float} [dWidth = image.width] - width of destination\n    * @param {Float} [dHeight = image.height] - height of destination\n    * @returns {void}\n  */\n  /**\n    * draws an Image or canvas element into the context. also nulls the _imageDataHandler value if one exists.\n    * method overloading to reflect CanvasRenderingContext2D.drawImage.\n    * @param {Canvas|Image|HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} source - where to take pixels from\n    * @param {Float} sx - x coordinate of where to pull from source\n    * @param {Float} sy - y coordinate of where to pull from source\n    * @param {Float} sWidth - width of area to pull from source\n    * @param {Float} sHeight - height of area to pull from source\n    * @param {Float} dx - x coordinate of source's destination\n    * @param {Float} dy - y coordinate of source's destination\n    * @param {Float} dWidth - width of destination\n    * @param {Float} dHeight - height of destination\n    * @returns {void}\n  */\n  drawImage = (source, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight) => { // eslint-disable-line max-params\n    // sx, sy, sWidth, sHeight on images do not get scaled against devicePixelRatio\n    const hasSource = typeof dx === 'number';\n    const isCanvas = source instanceof Canvas;\n    if (hasSource) {\n      if (isCanvas) {\n        sx *= this._devicePixelRatio;\n        sy *= this._devicePixelRatio;\n        sWidth *= this._devicePixelRatio;\n        sHeight *= this._devicePixelRatio;\n        this._context.drawImage(source.element, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);\n      } else {\n        this._context.drawImage(source, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);\n      }\n    } else if (isCanvas) {\n      sWidth = sWidth || source.width;\n      sHeight = sHeight || source.height;\n      this._drawImageDest(source.element, sx, sy, sWidth, sHeight);\n    } else {\n      this._drawImageDest(source, sx, sy, sWidth, sHeight);\n    }\n    this._imageDataHandler = null;\n  }\n  // eslint-enable valid-jsdoc\n\n  _drawImageDest = (source, dx = 0, dy = 0, dWidth = source.width, dHeight = source.height) => {\n    this._context.drawImage(source, dx, dy, dWidth, dHeight);\n  }\n\n  /**\n    * fills a path on the context. also nulls the _imageDataHandler value if one exists.\n    * @returns {void}\n  */\n  fill = (...args) => {\n    this._context.fill(...args);\n    this._imageDataHandler = null;\n  }\n\n  /**\n    * draws a filled rectangle on the context. also nulls the _imageDataHandler value if one exists.\n    * @param {Float} [x = 0] - rectangle's x position\n    * @param {Float} [y = 0] - rectangle's y position\n    * @param {Float} [width = this.width] - rectangle's width\n    * @param {Float} [height = this.height] - rectangle's height\n    * @returns {void}\n  */\n  fillRect = (x = 0, y = 0, width = this.width, height = this.height) => {\n    this._context.fillRect(x, y, width, height);\n    this._imageDataHandler = null;\n  }\n\n  /**\n    * draws a line to a point on the context.\n    * @returns {void}\n  */\n  lineTo = (...args) => {\n    this._context.lineTo(...args);\n  }\n\n  /**\n    * moves to a point on the context.\n    * @returns {void}\n  */\n  moveTo = (...args) => {\n    this._context.moveTo(...args);\n  }\n\n  /**\n    * draws a quadratic curve to a point on the context.\n    * @returns {void}\n  */\n  quadraticCurveTo = (...args) => {\n    this._context.quadraticCurveTo(...args);\n  }\n\n  /**\n    * draws a rectangle on the context.\n    * @param {Float} [x = 0] - rectangle's x position\n    * @param {Float} [y = 0] - rectangle's y position\n    * @param {Float} [width = this.width] - rectangle's width\n    * @param {Float} [height = this.height] - rectangle's height\n    * @returns {void}\n  */\n  rect = (x = 0, y = 0, width = this.width, height = this.height) => {\n    this._context.rect(x, y, width, height);\n  }\n\n  // scale: no scale method! use resize instead!\n\n  /**\n    * strokes the context's current path.\n    * @returns {void}\n  */\n  stroke = (...args) => {\n    this._context.stroke(...args);\n    this._imageDataHandler = null;\n  }\n\n  /* *********************\n  * transformation methods\n  ***********************/\n\n  /**\n    * resets all transforms on the context to zero.\n    * @returns {void}\n  */\n  resetTransform = () => {\n    this._context.resetTransform();\n    // if canvas was scaled it would otherwise be undone\n    this._context.scale(this._devicePixelRatio, this._devicePixelRatio);\n  }\n\n  /**\n    * restores context to a saved state of popped off of a stack.\n    * @returns {void}\n  */\n  restore = () => {\n    this._context.restore();\n  }\n\n  /**\n    * cumulatively rotates the context around x/y coordinates.\n    * @param {Float} angle - amount to rotate\n    * @param {Float} [x = this.width / 2] - center x position\n    * @param {Float} [y = this.height / 2] - center y position\n    * @returns {void}\n  */\n  rotate = (angle, x = 0.5 * this.width, y = 0.5 * this.height) => {\n    if (!angle) {\n      return;\n    }\n    rotate(angle, x, y, this._context, this._context.transform);\n  }\n\n  /**\n    * pushes a saved state of the curent context onto a stack.\n    * @returns {void}\n  */\n  save = () => {\n    this._context.save();\n  }\n\n  /**\n    * resets the context's rotation to a new amount around x/y coordinates.\n    * @param {Float} angle - amount to rotate\n    * @param {Float} [x = this.width / 2] - center x position\n    * @param {Float} [y = this.height / 2] - center y position\n    * @returns {void}\n  */\n  setRotate = (angle, x = 0.5 * this.width, y = 0.5 * this.height) => {\n    rotate(angle, x, y, this._context, this.setTransform);\n  }\n\n  /**\n    * resets the context's transform to new values.\n    * @param {Float} xScale - horizontal scale\n    * @param {Float} xSkew - horizontal skew\n    * @param {Float} ySkew - verical skew\n    * @param {Float} yScale - vertical movement\n    * @param {Float} dx - horizontal movement\n    * @param {Float} dy - vertical movement\n    * @returns {void}\n  */\n  setTransform = (xScale, xSkew, ySkew, yScale, dx, dy) => {\n    xScale *= this._devicePixelRatio;\n    xSkew *= this._devicePixelRatio;\n    ySkew *= this._devicePixelRatio;\n    yScale *= this._devicePixelRatio;\n    dx *= this._devicePixelRatio;\n    dy *= this._devicePixelRatio;\n    this._context.setTransform(xScale, xSkew, ySkew, yScale, dx, dy);\n  }\n\n  /**\n    * sets the context's grid to coordinates.\n    * @param {Float} dx - horizontal movement\n    * @param {Float} dy - vertical movement\n    * @returns {void}\n  */\n  setTranslate = (dx, dy) => {\n    this.setTransform(1, 0, 0, 1, dx, dy);\n  }\n\n  /**\n    * cumulatively moves the context's grid by coordinates.\n    * @param {Float} dx - horizontal movement\n    * @param {Float} dy - vertical movement\n    * @returns {void}\n  */\n  translate = (dx, dy) => {\n    this._context.translate(dx, dy);\n  }\n\n  /* ***********\n  * misc methods\n  *************/\n\n  // eslint-disable valid-jsdoc\n  /**\n    * creates a blank ImageData based on provided width/height.\n    * method overloading to reflect CanvasRenderingContext2D.createImageData.\n    * @param {Number} width - a width amount\n    * @param {Number} height - a height amount\n    * @returns {void}\n  */\n  /**\n    * creates a blank ImageData based on a provided ImageData's dimensions.\n    * method overloading to reflect CanvasRenderingContext2D.createImageData.\n    * @param {ImageData} imageData - an existing ImageData instance\n    * @returns {void}\n  */\n  // eslint-enable valid-jsdoc\n  createImageData = (imageDataOrWidth, height) => {\n    return this._context.createImageData(imageDataOrWidth, height);\n  }\n\n  /* *************\n  * static methods\n  ***************/\n\n  /**\n    * returns Path2D of a path approximately through an array of points.\n    * @param {Array} points - array of points\n    * @param {Path2D} [path = new Path2D()] - Path2D instance to add instructions to\n    * @returns {void}\n  */\n  static quadraticThrough(points, path = new Path2D()) {\n    const { length } = points;\n    let lastPoint;\n    let nextPoint;\n    for (let i = 0; i < length - 1; i++) {\n      lastPoint = nextPoint || points[0];\n      nextPoint = points[i + 1];\n      if (i === 0) {\n        path.moveTo(lastPoint.x, lastPoint.y);\n      } else if (i < length - 2) {\n        const avgX = (lastPoint.x + nextPoint.x) / 2;\n        const avgY = (lastPoint.y + nextPoint.y) / 2;\n        path.quadraticCurveTo(lastPoint.x, lastPoint.y, avgX, avgY);\n      } else {\n        path.quadraticCurveTo(lastPoint.x, lastPoint.y, nextPoint.x, nextPoint.y);\n      }\n    }\n    return path;\n  }\n}\n","export const HUMAN_CENT_THRESHOLD = 5;\nexport const HUMAN_MIN_FREQ = 20;\nexport const HUMAN_MAX_FREQ = 20000;\nexport const STANDARD_SEMITONES = 12;\nexport const STANDARD_A4 = 440;\nexport const CENTS_PER_STANDARD_SEMITONE = 100;\nexport const CENTS_PER_OCTAVE = STANDARD_SEMITONES * CENTS_PER_STANDARD_SEMITONE;\n\nexport const A4 = {\n  415: 'baroque',\n  427: 'classical',\n  428: 'classical',\n  429: 'classical',\n  430: 'classical',\n  430.54: 'scientific',\n  432: '“frequency of the universe”',\n  435: 'diapson normal',\n  439: 'new philharmonic',\n  [STANDARD_A4]: 'stuttgart',\n  452: 'old philharmonic',\n  466: 'chorton',\n};\n\nexport function findInterval(fA, fB) {\n  const cents = CENTS_PER_OCTAVE * Math.log2(fB / fA);\n  return cents;\n}\n\nexport function transposeFrequency(frequency, cents) {\n  return frequency * Math.pow(Math.pow(2, 1 / STANDARD_SEMITONES), (cents / CENTS_PER_STANDARD_SEMITONE));\n}\n\nexport function findFrequency(str) {\n  // TODO\n}\n","import {CENTS_PER_STANDARD_SEMITONE, HUMAN_MAX_FREQ, HUMAN_MIN_FREQ} from './music';\n\nexport const DEFAULT_TRANSPOSITION = 3 * CENTS_PER_STANDARD_SEMITONE;\nexport const DEGREES_IN_CIRCLE = 360;\nexport const RADIANS_IN_CIRCLE = Math.PI * 2;\n\nexport const EQ_FREQUENCIES = [];\nlet frequency = 2;\nwhile(frequency < HUMAN_MAX_FREQ) {\n  frequency *= 2;\n  if (frequency >= HUMAN_MIN_FREQ && frequency <= HUMAN_MAX_FREQ) {\n    EQ_FREQUENCIES.push(frequency);\n  }\n}\n\nexport const MODES = [\n  {\n    name: '(none)',\n    chords: [],\n    useModeForNaming: 1,\n  },\n  {\n    name: 'I Ionian (Major)',\n    chords: ['I', null, 'ii', null, 'iii', 'IV', null, 'V', null, 'vi', null, 'viiº'],\n  },\n  {\n    name: 'II Dorian',\n    chords: ['i', null, 'ii', 'III', null, 'IV', null, 'v', null, 'viº', 'VII', null],\n  },\n  {\n    name: 'III Phrygian',\n    chords: ['i', 'II', null, 'III', null, 'iv', null, 'vº', 'VI', null, 'vii', null],\n  },\n  {\n    name: 'IV Lydian',\n    chords: ['I', null, 'II', null, 'iii', null, 'ivº ', 'V', null, 'vi', null, 'vii'],\n  },\n  {\n    name: 'V Mixolydian',\n    chords: ['I', null, 'ii', null, 'iiiº', 'IV', null, 'v', null, 'vi', 'VII', null],\n  },\n  {\n    name: 'VI Aeolian (Minor)',\n    chords: ['i', null, 'iiº', 'III', null, 'iv', null, 'v', 'VI', null, 'VII', null],\n  },\n  {\n    name: 'VII Locrian',\n    chords: ['iº', 'II', null, 'iii', null, 'iv', 'V',  null, 'VI', null, 'vii', null],\n  },\n  {\n    name: 'Major Pentatonic',\n    chords: ['I', null, 'ii', null, 'iii', null, null, 'V', null, 'vi', null, null],\n    useModeForNaming: 1,\n  },\n  {\n    name: 'Minor Pentatonic',\n    chords: ['i', null, null, 'III', null, 'iv', null, 'v', null, null, 'VII', null],\n    useModeForNaming: 6,\n  },\n  {\n    name: 'Blues Major',\n    chords: ['I', null, 'ii', null, null, 'IV', null, 'v', null, 'vi', null, null],\n    useModeForNaming: 1,\n  },\n  {\n    name: 'Blues Minor',\n    chords: ['i', null, null, 'III', null, 'iv', null, null, 'VI', null, 'vii', null],\n    useModeForNaming: 6,\n  },\n];\n\nexport const OSCILLATOR_TYPES = {\n  SINE: 'sine',\n  SQUARE: 'square',\n  // SAWTOOTH: 'sawtooth',\n  TRIANGLE: 'triangle',\n};\n\nexport const TEMPERMENT_TYPES = {\n  EQUAL: 'equal',\n  JUST: 'just',\n  MEANTONE: 'meantone',\n  PYTHAGOREAN: 'pythagorean',\n};\n","import {toRadianDirection} from '@danehansen/math';\nimport {RADIANS_IN_CIRCLE, DEGREES_IN_CIRCLE} from '../../util/constants';\n\nfunction findDirectionalColor(direction) {\n  direction -= RADIANS_IN_CIRCLE * 0.25;\n  const colorSlice = RADIANS_IN_CIRCLE / 3;\n  const cosR = Math.cos(-direction);\n  const cosG = Math.cos(-direction - colorSlice);\n  const cosB = Math.cos(-direction + colorSlice);\n\n  const r = Math.round(cosR * 255 * 0.5 + 255 * 0.5);\n  const g = Math.round(cosG * 255 * 0.5 + 255 * 0.5);\n  const b = Math.round(cosB * 255 * 0.5 + 255 * 0.5);\n\n  return {r, g, b};\n}\n\nexport default function findColors(semitones) {\n  const colors = [];\n  const buttonSlice = DEGREES_IN_CIRCLE / semitones;\n  for(let i = 0; i < semitones; i++) {\n    colors.push(findDirectionalColor(toRadianDirection(i * buttonSlice)));\n  }\n  return colors;\n}\n","import {modulo} from '@danehansen/math';\nimport {RADIANS_IN_CIRCLE} from '../../util/constants';\n\nfunction flipRadiansVertically(radians) {\n  return Math.atan2(-Math.sin(radians), Math.cos(radians));\n}\n\nexport default function fillSlice(canvas, color, diameter, startRadians, endRadians, outerRadius, holeRadius, isInKey) {\n  const center = diameter / 2;\n  const isCircle = modulo(startRadians, RADIANS_IN_CIRCLE) === modulo(endRadians, RADIANS_IN_CIRCLE);\n\n  canvas.beginPath();\n  canvas.fillStyle =`rgb(${color.r}, ${color.g}, ${color.b})`;\n\n  if (isCircle) {\n    canvas.arc(center, center, center * outerRadius, 0, RADIANS_IN_CIRCLE);\n  } else {\n    // clockwise straight edge\n    let cos = Math.cos(startRadians);\n    let sin = Math.sin(startRadians);\n    canvas.moveTo(center + cos * center * holeRadius, center + sin * -center * holeRadius);\n    canvas.lineTo(center + cos * center * outerRadius, center + sin * -center * outerRadius);\n\n    // outer arc\n    canvas.arc(center, center, center * outerRadius, flipRadiansVertically(startRadians), flipRadiansVertically(endRadians), true);\n\n    // anticlockwise straight edge\n    cos = Math.cos(endRadians);\n    sin = Math.sin(endRadians);\n    canvas.moveTo(center + cos * center * outerRadius, center + sin * -center * outerRadius);\n    canvas.lineTo(center + cos * center * holeRadius, center + sin * -center * holeRadius);\n\n    // inner arc\n    canvas.arc(center, center, center * holeRadius, flipRadiansVertically(endRadians), flipRadiansVertically(startRadians), false);\n  }\n\n  canvas.fill();\n\n  if (isCircle) {\n    canvas.beginPath();\n    canvas.globalCompositeOperation = 'destination-out';\n    canvas.arc(center, center, center * holeRadius, 0, RADIANS_IN_CIRCLE);\n    canvas.fill();\n    canvas.globalCompositeOperation = 'source-over';\n  }\n}\n","import {findInterval, CENTS_PER_OCTAVE} from './music';\n\nexport default function findIntervalRatio(fRoot, fComparison) {\n  const tolerance = 2;\n  const cents = findInterval(fRoot, fComparison) % CENTS_PER_OCTAVE;\n\n  if (Math.abs(cents - 100) < tolerance || Math.abs(cents + 1100) < tolerance) {\n    return [16, 15];\n  }\n  if (Math.abs(cents - 1100) < tolerance || Math.abs(cents + 100) < tolerance) {\n    return [15, 16];\n  }\n\n  if (Math.abs(cents - 200) < tolerance || Math.abs(cents + 1000) < tolerance) {\n    return [9, 8];\n  }\n  if (Math.abs(cents - 1000) < tolerance || Math.abs(cents + 200) < tolerance) {\n    return [8, 9];\n  }\n\n  if (Math.abs(cents - 300) < tolerance || Math.abs(cents + 900) < tolerance) {\n    return [5, 3];\n  }\n  if (Math.abs(cents - 900) < tolerance || Math.abs(cents + 300) < tolerance) {\n    return [3, 5];\n  }\n\n  if (Math.abs(cents - 400) < tolerance || Math.abs(cents + 800) < tolerance) {\n    return [5, 4];\n  }\n  if (Math.abs(cents - 800) < tolerance || Math.abs(cents + 400) < tolerance) {\n    return [4, 5];\n  }\n\n  if (Math.abs(cents - 500) < tolerance || Math.abs(cents + 700) < tolerance) {\n    return [3, 2];\n  }\n  if (Math.abs(cents - 700) < tolerance || Math.abs(cents + 500) < tolerance) {\n    return [2, 3];\n  }\n\n  if (Math.abs(cents - 600) < tolerance || Math.abs(cents + 600) < tolerance) {\n    return [13, 9];\n  }\n\n  if (Math.abs(cents - 1200) < tolerance || Math.abs(cents + 1200) < tolerance || Math.abs(cents) < tolerance) {\n    return [1, 1];\n  }\n}\n","import findIntervalRatio from '../../util/findIntervalRatio';\nimport {RADIANS_IN_CIRCLE} from '../../util/constants';\n\nexport default function drawInterval(radianA, radianB, diameter, canvas, radius, frequencyA, frequencyB, colorA, colorB) {\n  const center = diameter / 2;\n\n  const cosA = Math.cos(radianA);\n  const sinA = Math.sin(-radianA);\n\n  const cosB = Math.cos(radianB);\n  const sinB = Math.sin(-radianB);\n\n  const pointA = {\n    x: center + cosA * center * radius,\n    y: center + sinA * center * radius,\n  };\n\n  const pointB = {\n    x: center + cosB * center * radius,\n    y: center + sinB * center * radius,\n  };\n\n  const interval = findIntervalRatio(frequencyA, frequencyB);\n  if (interval) {\n    canvas.lineWidth = 1;\n    const xDiff = pointB.x - pointA.x;\n    const yDiff = pointB.y - pointA.y;\n    const diff = Math.sqrt(Math.pow(xDiff, 2) + Math.pow(yDiff, 2));\n    const radiusA = diff / interval[0] / 2;\n    const radiusB = diff / interval[1] / 2;\n\n    canvas.strokeStyle = `rgb(${colorA.r}, ${colorA.g}, ${colorA.b})`;\n    for (let i = 0; i < interval[0]; i++) {\n      canvas.beginPath();\n      const centerX = pointA.x + xDiff / interval[0] * (i + 0.5);\n      const centerY = pointA.y + yDiff / interval[0] * (i + 0.5);\n      canvas.arc(centerX, centerY, radiusA, 0, RADIANS_IN_CIRCLE);\n      canvas.stroke();\n    }\n\n    canvas.strokeStyle = `rgb(${colorB.r}, ${colorB.g}, ${colorB.b})`;\n    for (let i = 0; i < interval[1]; i++) {\n      canvas.beginPath();\n      const centerX = pointA.x + xDiff / interval[1] * (i + 0.5);\n      const centerY = pointA.y + yDiff / interval[1] * (i + 0.5);\n      canvas.arc(centerX, centerY, radiusB, 0, RADIANS_IN_CIRCLE);\n      canvas.stroke();\n    }\n  }\n\n  canvas.globalCompositeOperation = \"source-over\";\n  canvas.strokeStyle = \"white\";\n  canvas.lineWidth = 2;\n  canvas.beginPath();\n  canvas.moveTo(pointA.x, pointA.y);\n  canvas.lineTo(pointB.x, pointB.y);\n  canvas.stroke();\n}\n","import styles from './Display.module.scss';\nimport classnames from 'classnames';\nimport React from 'react';\nimport Canvas from './canvas';\nimport {toRadianDirection} from '@danehansen/math';\nimport {MODES, RADIANS_IN_CIRCLE, DEGREES_IN_CIRCLE} from '../../util/constants';\nimport {useState, useEffect, useRef} from 'react';\nimport findColors from './findColors';\nimport fillSlice from './fillSlice';\nimport drawInterval from './drawInterval';\n\nexport default function Display({className, activePitches, baseFrequencies, diameter, mode, pitchSequence}) {\n  const rootNode = useRef();\n\n  const [root, setRoot] = useState(null);\n  const [buffer, setBuffer] = useState(null);\n  useEffect(() => {\n    if (!rootNode.current) {\n      return;\n    }\n    setRoot(new Canvas(rootNode.current));\n    setBuffer(new Canvas(undefined, diameter, diameter));\n  }, [rootNode, diameter]);\n\n  useEffect(() => {\n    if (!root) {\n      return;\n    }\n    root.resize(diameter, diameter);\n    buffer.resize(diameter, diameter);\n  }, [root, buffer, diameter]);\n\n  useEffect(() => {\n    if (!root) {\n      return;\n    }\n\n    const semitones = pitchSequence.length;\n    const colors = findColors(semitones);\n\n    function connectPitches() {\n      for (let i = 0; i < activePitches.length; i++) {\n        const pitchA = activePitches[i];\n        const degreesA = DEGREES_IN_CIRCLE / semitones * pitchSequence.indexOf(pitchA);\n        const frequencyA = baseFrequencies[pitchSequence.indexOf(pitchA)];\n        for (let j = i + 1; j < activePitches.length; j++) {\n          const pitchB = activePitches[j];\n          const degreesB = DEGREES_IN_CIRCLE / semitones * pitchSequence.indexOf(pitchB);\n          const frequencyB = baseFrequencies[pitchSequence.indexOf(pitchB)];\n          const colorA = colors[pitchA];\n          const colorB = colors[pitchB]\n          drawInterval(toRadianDirection(degreesA), toRadianDirection(degreesB), diameter, buffer, 0.4, frequencyA, frequencyB, colorA, colorB);\n        }\n      }\n    }\n\n    function drawSlices() {\n      const halfSlice = RADIANS_IN_CIRCLE / semitones / 2;\n      const {chords} = MODES[mode];\n\n      for (let i = 0; i < semitones; i++) {\n        const pitch = pitchSequence[i];\n        const degrees = pitch / semitones * DEGREES_IN_CIRCLE;\n        const color = colors[i];\n        const isActive = activePitches.indexOf(i) >= 0;\n        const radians = toRadianDirection(degrees);\n        const isInKey = !!chords[i];\n\n        fillSlice(buffer, color, diameter, radians - halfSlice, radians + halfSlice, isActive ? 1 : 0.95, isActive ? 0.12 : 0.1, isInKey);\n      }\n    }\n\n    root.clearRect();\n    buffer.clearRect();\n    drawSlices();\n    connectPitches();\n    root.drawImage(buffer);\n  }, [activePitches, baseFrequencies, diameter, mode, pitchSequence, buffer, root]);\n\n  return <canvas className={classnames(styles.root, className)} ref={rootNode} />;\n}\n","import styles from './Input.module.scss';\nimport classnames from 'classnames';\n\nexport default function Input({className, ...rest}) {\n  return <input className={classnames(styles.root, className)} {...rest} />\n}\n","import styles from './Button.module.scss';\nimport classnames from 'classnames';\n\nexport default function Button({\n  className,\n  href,\n\n  component:Component = href ? 'a' : 'button',\n  target = href && '_blank',\n  ...rest\n}) {\n  return <Component className={classnames(styles.root, className)} target={target} href={href} {...rest} />\n}\n","import styles from './Menu.module.scss';\nimport {OSCILLATOR_TYPES, MODES, EQ_FREQUENCIES} from '../../util/constants';\nimport {STANDARD_A4, A4, STANDARD_SEMITONES, HUMAN_CENT_THRESHOLD, CENTS_PER_STANDARD_SEMITONE, CENTS_PER_OCTAVE} from '../../util/music';\nimport classnames from 'classnames';\nimport Input from './Input/Input';\nimport Button from '../Button/Button';\n\nfunction findIncrementLabel(increment, semitones) {\n  if (increment === 1) {\n    return 'Clockwise';\n  } else if (increment === semitones - 1) {\n    return 'Anticlockwise';\n  }\n  if (semitones % STANDARD_SEMITONES === 0) {\n    if (increment === 7) {\n      return 'Circle of Fifths';\n    } else if (increment === semitones - 7) {\n      return 'Circle of Fourths';\n    }\n  }\n  return `skip ${increment - 1}`;\n}\n\nexport default function Menu({\n    a4,\n    setA4,\n    allPitchNames,\n    eq,\n    setEq,\n    mode,\n    setMode,\n    oscillator,\n    setOscillator,\n    pitchSkip,\n    setPitchSkip,\n    semitones,\n    setSemitones,\n    transposition,\n    setTransposition,\n    pitchSkipOptions,\n  }) {\n\n  function onOscillatorChange({ target: { value }}) {\n    setOscillator(value);\n  }\n\n  function onEQChange(index, {target: {value}}) {\n    const values = [...eq]\n    values[index] = value;\n    setEq(values);\n  }\n\n  return (\n    <form className={styles.root}>\n      <div className={styles.property}>\n        <h2 className={styles.title}>Oscillator</h2>\n        {Object.values(OSCILLATOR_TYPES).map((value) => {\n          return <label className={styles.label} key={value}>\n            <Input type=\"radio\" checked={oscillator === value} value={value} onChange={onOscillatorChange} />\n            <div className={styles.labelText}>{value}</div>\n          </label>\n        })}\n      </div>\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>EQ<Button className={styles.reset} onClick={(evt) => {evt.preventDefault(); setEq(EQ_FREQUENCIES.map(() => 0))}}>reset</Button></h2>\n        <div className={styles.verticalRangeHolder}>\n          {eq.map((value, i) => {\n            return <Input\n              key={i} className={styles.verticalRange} type=\"range\" min=\"-1\" max={1 * 0.27} step=\"0.01\" value={value} onChange={onEQChange.bind(null, i)} />\n          })}\n        </div>\n      </div>\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>Transposition</h2>\n        <div className={styles.columns}>\n          {allPitchNames.map((name, index) => {\n            return <label className={styles.label} key={name}>\n              <Input type=\"radio\" value={index * CENTS_PER_STANDARD_SEMITONE} name=\"transposition\" checked={transposition === index * CENTS_PER_STANDARD_SEMITONE} onChange={({target:{value}}) => {setTransposition(parseInt(value))}} />\n              <div className={styles.labelText}>{name}</div>\n            </label>\n          })}\n        </div>\n      </div>\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>Mode</h2>\n        <div className={styles.columns}>\n          {MODES.map((modeObj, index) => {\n            return <label className={styles.label} key={modeObj.name}>\n              <Input type=\"radio\" value={index} name=\"mode\" checked={mode === index} onChange={({target:{value}}) => {setMode(parseInt(value))}} />\n              <div className={styles.labelText}>{modeObj.name}</div>\n            </label>\n          })}\n        </div>\n      </div>\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>Semitones<Button className={styles.reset} onClick={(evt) => {evt.preventDefault(); setSemitones(STANDARD_SEMITONES)}}>reset</Button><div className={styles.valueText}>{semitones}</div></h2>\n        <label className={classnames(styles.label, styles.wide)}>\n          <Input type=\"range\" min={1} max={CENTS_PER_OCTAVE / HUMAN_CENT_THRESHOLD} value={semitones} onChange={({target: {value}}) => {setSemitones(parseInt(value))}} />\n        </label>\n      </div>\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>A4<Button className={styles.reset} onClick={(evt) => {evt.preventDefault(); setA4(STANDARD_A4)}}>reset</Button><div className={styles.valueText}>{a4}{A4[a4] && ` (${A4[a4]})`}</div></h2>\n        <label className={classnames(styles.label, styles.wide)}>\n          <Input\n            type=\"range\"\n            min={Math.min(...Object.keys(A4))}\n            max={Math.max(...Object.keys(A4))}\n            value={a4}\n            onChange={({target:{value}}) => {setA4(parseInt(value))}}\n          />\n        </label>\n      </div>\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>Organize</h2>\n        <div className={styles.columns}>\n        {pitchSkipOptions.map((num) => {\n          return <label className={styles.label} key={num}>\n            <Input type=\"radio\" value={num} name=\"pitchSkip\" checked={pitchSkip === num} onChange={({target:{value}}) => {setPitchSkip(parseInt(value))}} />\n            <div className={styles.labelText}>{findIncrementLabel(num, semitones)}</div>\n          </label>\n        })}\n        </div>\n      </div>\n\n      <Button\n        className={styles.issue}\n        href=\"https://github.com/danehansen/shepard-wheel/issues\"\n      >submit issue</Button>\n    </form>\n  );\n}\n","import styles from './PitchLabel.module.scss';\nimport classnames from 'classnames';\nimport { DEGREES_IN_CIRCLE } from '../../util/constants';\n\nexport default function PitchLabel({pitchNamesSorted, diameter, chordNamesSorted}) {\n  const semitones = pitchNamesSorted.length;\n\n  return <div className={styles.root}>{pitchNamesSorted.map(function(name, index) {\n    const degrees = DEGREES_IN_CIRCLE / semitones * index;\n    const hasAccidental = name?.length === 2 || name?.length === 3;\n    const isSmall = name?.length > 3;\n    let transform;\n    let transformOrigin;\n    const radius = -0.475;\n    const accidentalRadis = radius * 0.96;\n\n    if (isSmall) {\n      transform = `translate(0%, -50%) rotate(${degrees}deg) translate(0%, 50%) translateY(${diameter * radius}px) rotate(${90}deg)`;\n      transformOrigin = `0 50%`;\n    } else {\n      transformOrigin = `50% 0`;\n      if (hasAccidental) {\n        transform = `translate(-50%, 0) rotate(${degrees}deg) translateY(${diameter * accidentalRadis}px) `;\n      } else {\n        transform = `translate(-50%, 0) rotate(${degrees}deg) translateY(${diameter * radius}px) `;\n      }\n    }\n\n    return <div\n      className={classnames(styles.button, isSmall && styles.small, hasAccidental && styles.hasAccidental, !chordNamesSorted[index] && styles.deemphesized)}\n      key={index}\n      style={{transform, transformOrigin}}\n    >{name}</div>\n  })}</div>\n}\n","import styles from './ChordLabel.module.scss';\nimport {DEGREES_IN_CIRCLE} from '../../util/constants';\n\nexport default function ChordLabel({chordNamesSorted, diameter}) {\n  const semitones = chordNamesSorted.length;\n\n  return <div className={styles.root}>{chordNamesSorted.map(function(name, index) {\n    if (!name) {\n      return null;\n    }\n    const degrees = DEGREES_IN_CIRCLE / semitones * index;\n\n    return <div\n      className={styles.button}\n      key={index}\n      style={{\n        transform: `translate(-50%, -50%) rotate(${degrees}deg) translateY(${diameter * -0.22}px)`,\n      }}\n    >{name}</div>\n  })}</div>\n}\n","import {useRef, useState} from 'react';\nimport {modulo, toDegreeDirection} from '@danehansen/math';\nimport styles from './TouchPad.module.scss';\nimport {RADIANS_IN_CIRCLE, DEGREES_IN_CIRCLE} from '../../util/constants';\n\nconst IS_TOUCH_SCREEN = 'ontouchstart' in window;\n\nexport default function TouchPad({\n  pitchSequence,\n  callback,\n  diameter,\n}) {\n  const rootNode = useRef();\n  const [pointerIsDown, setPointerIsDown] = useState(false);\n\n  function handle(evt) {\n    const pitches = [];\n    const type = evt.type;\n    const isTouchEvent = /touch/.test(type);\n    const rect = rootNode.current.getBoundingClientRect();\n    const halfSlice = RADIANS_IN_CIRCLE / pitchSequence.length / 2;\n\n    function findPitchIndex(clientX, clientY) {\n      const x = clientX - rect.x - diameter * 0.5;\n      const y = -(clientY - rect.y - diameter * 0.5);\n      const length = Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));\n\n      if (length <= diameter / 2) {\n        const rad = modulo(Math.atan2(y, x), RADIANS_IN_CIRCLE);\n        const degrees = toDegreeDirection(rad - halfSlice);\n        const index = Math.floor(degrees / DEGREES_IN_CIRCLE * pitchSequence.length);\n        if (typeof index === 'number') {\n          pitches.push(pitchSequence[index]);\n        }\n      } else {\n        setPointerIsDown(false);\n      }\n    }\n\n    switch(type) {\n      case 'mousedown':\n        setPointerIsDown(true);\n        break;\n      case 'mouseup':\n        setPointerIsDown(false);\n        break;\n      // no default\n    }\n\n    if (isTouchEvent) {\n      const targetTouches = evt.targetTouches || [];\n      for (let i = 0; i < targetTouches.length; i++) {\n        const touch = targetTouches[i];\n        findPitchIndex(touch.clientX, touch.clientY);\n      }\n    } else {\n      if (type !== 'mouseup') {\n        findPitchIndex(evt.clientX, evt.clientY);\n      }\n    }\n\n    callback(pitches);\n  }\n\n  let listeners;\n  if (IS_TOUCH_SCREEN) {\n    listeners = {\n      onTouchStart: handle,\n      onTouchEnd: handle,\n      onTouchCancel: handle,\n      onTouchMove: handle,\n    }\n  } else {\n    listeners = {\n      onMouseUp: handle,\n      onMouseDown: handle,\n      onMouseMove: pointerIsDown ? handle : null,\n    }\n  }\n\n  return <div\n    ref={rootNode}\n    className={styles.root}\n    {...listeners}\n  />;\n}\n","import {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function FirstTouch({component: Component = 'div', callback, ...rest}) {\n  const [hasCalledCallback, setHasCalledCallback] = useState(false);\n\n  function handle(evt) {\n    setHasCalledCallback(true);\n    callback();\n  }\n\n  let listeners = {};\n  if (!hasCalledCallback) {\n    listeners = {\n      onClick: handle,\n      onMouseUp: handle,\n      onMouseDown: handle,\n      onMouseEnter: handle,\n      onMouseLeave: handle,\n      onMouseOver: handle,\n      onMouseOut: handle,\n      onMouseMove: handle,\n      onTouchStart: handle,\n      onTouchEnd: handle,\n      onTouchCancel: handle,\n      onTouchMove: handle,\n    }\n  }\n\n  return <Component {...listeners} {...rest}></Component>;\n}\n\nFirstTouch.propTypes = {\n  component: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  callback: PropTypes.func.isRequired,\n};\n","import styles from './MatchingChords.module.scss';\nimport classnames from 'classnames';\n\nexport default function MatchingChords({chords}) {\n  const chordHolders = [];\n  for (let i = 0; i < chords.length; i++) {\n    const {name, fingersNeeded} = chords[i];\n    if (!chordHolders[fingersNeeded]) {\n      chordHolders[fingersNeeded] = [];\n    }\n    chordHolders[fingersNeeded].push(<span\n      className={styles.chord}\n      key={i}\n    >{name}</span>);\n  }\n\n  return (\n    <div className={styles.root}>\n    {chordHolders.map((chordHolder, i) => {\n      return <div\n        className={classnames(styles.chordHolder, styles[`fingersNeeded${i}`])}\n        key={i}\n      >{chordHolder}</div>\n    })}\n    </div>\n  );\n}\n","export default function findPitchSkipOptions(semitones) {\n  const increments = [1];\n  for(let i = 2; i < semitones; i++) {\n    if (findIncrementsOfSemitone(semitones, i)) {\n      increments.push(i);\n    }\n  }\n  return increments;\n}\n\nfunction findIncrementsOfSemitone(semitones, increment) {\n  const semitoneIndexes = [];\n  for(let i = 0; i < semitones; i++) {\n    const semitoneIndex = (i * increment) % semitones;\n    if (semitoneIndexes[semitoneIndex] !== undefined) {\n      return false;\n    } else {\n      semitoneIndexes[semitoneIndex] = semitoneIndex;\n    }\n  }\n  return semitoneIndexes;\n}\n","import {modulo} from '@danehansen/math';\nimport {MODES} from './constants';\nimport {STANDARD_SEMITONES, CENTS_PER_STANDARD_SEMITONE} from './music';\n\nconst PITCH_NAMES = ['A', ['A♯','B♭'], 'B', 'C', ['C♯','D♭'], 'D', ['D♯','E♭'], 'E', 'F', ['F♯','G♭'], 'G', ['G♯','A♭']];\n\nfunction m(num) {\n  return modulo(num, STANDARD_SEMITONES);\n}\n\nexport default function findAllPitchNames(transposition, mode) {\n  // TODO: this is bad!\n  if ((transposition === 400 && mode === 1) || (transposition === 100 && mode === 6)) {\n    return ['A','A♯','B','B♯','C♯','D','D♯','E','E♯','F♯','G','G♯'];\n  } else if ((transposition === 600 && mode === 1) || (transposition === 300 && mode === 6)) {\n    return ['A','B♭','B','C','D♭','D','E♭','E','F','G♭','G','A♭'];\n  } else if ((transposition === 900 && mode === 1) || (transposition === 600 && mode === 6)) {\n    return ['A','A♯','B','C','C♯','D','D♯','E','E♯','F♯','G','G♯'];\n  } else if ((transposition === 1100 && mode === 1) || (transposition === 800 && mode === 6)) {\n    return ['A','A♯','B','B♯','C♯','D','D♯','E','E♯','F♯♯','G','G♯'];\n  }\n  const {useModeForNaming} = MODES[mode];\n  if (typeof useModeForNaming === 'number') {\n    return findAllPitchNames(transposition, useModeForNaming);\n  }\n\n  function makeArrayWithNakedLettersInKeySpots(array) {\n    const letters = ['A', 'B', 'C', 'D', 'E', 'F', 'G'];\n    const {chords} = MODES[mode];\n    let lastLetterIndex = 0;\n    for (let i = 0; i < STANDARD_SEMITONES; i++) {\n      const chordIndex = m(i - transposition / CENTS_PER_STANDARD_SEMITONE);\n      const chord = chords[chordIndex];\n      if (chord) {\n        array[i] = letters[lastLetterIndex];\n        lastLetterIndex++;\n      }\n    }\n    return array;\n  }\n\n  function addAccidentalsToKeySpots(array) {\n    for (let i = 0; i < STANDARD_SEMITONES; i++) {\n      const pitchName = PITCH_NAMES[i];\n      const lastPitchName = PITCH_NAMES[m(i - 1)]\n      const nextPitchName = PITCH_NAMES[m(i + 1)]\n      if (array[i]) {\n        if (!Array.isArray(pitchName)) {\n          if (lastPitchName === array[i]) {\n            array[i] = `${array[i]}♯`;\n          } else if (nextPitchName === array[i]) {\n            array[i] = `${array[i]}♭`;\n          }\n        } else {\n          const index = pitchName.findIndex((node) => node.indexOf(array[i]) >= 0)\n          array[i] = pitchName[index];\n        }\n      }\n    }\n  }\n\n  function fillInEmptySpots(array) {\n    const hasFlats = array.join('').indexOf('♭') >= 0;\n    const hasSharps = array.join('').indexOf('♯') >= 0;\n    for (let i = 0; i < 12; i++) {\n      if (array[i]) {\n        continue;\n      }\n      const pitchName = PITCH_NAMES[i];\n      if (Array.isArray(pitchName)) {\n        if (hasFlats && !hasSharps) {\n          array[i] = pitchName[1];\n        } else if (!hasFlats && hasSharps) {\n          array[i] = pitchName[0];\n        } else {\n          // defaulting to sharps for C major\n          array[i] = pitchName[0];\n        }\n      } else {\n        array[i] = pitchName;\n      }\n    }\n  }\n\n  const allNames = [];\n  makeArrayWithNakedLettersInKeySpots(allNames);\n  addAccidentalsToKeySpots(allNames);\n  fillInEmptySpots(allNames);\n  // console.log('findAllPitchNames', {transposition, mode, allNames})\n  return allNames;\n}\n","import findAllPitchNames from './findAllPitchNames';\nimport {MODES} from './constants';\n\nexport default function findBestPitchNames(transposition, mode) {\n  let lowestNumOfIncidentals = Number.MAX_VALUE;\n  let lowestNames = [];\n  for (let t = transposition; t < 1200 + transposition; t += 100) {\n    for (let m = mode; m <= 7 + mode; m++) {\n      const names = findAllPitchNames(t % 1200, (m % 7) +1);\n      const incidentals = countKeyIncidentals(t % 1200, (m % 7) +1, names);\n      if (incidentals < lowestNumOfIncidentals) {\n        lowestNumOfIncidentals = incidentals;\n        lowestNames = [names];\n      } else if (incidentals === lowestNumOfIncidentals) {\n        lowestNames.push(names);\n      }\n    }\n  }\n  return lowestNames[0];\n}\n\nfunction countKeyIncidentals(transposition, mode, names) {\n  const {chords} = MODES[mode];\n  let str = '';\n  for (let i = 0; i < chords.length; i++) {\n    if (chords[i]) {\n      str += names[i];\n    }\n  }\n  const regex = /[♭♯]/gi;\n  const match = str.match(regex);\n  if (!match) {\n    return 0;\n  }\n\n  return match.length;\n}\n","import {round} from '@danehansen/math';\nimport {STANDARD_SEMITONES, CENTS_PER_STANDARD_SEMITONE} from './music';\n\nexport default function findPitchNames(semitones, transposition, allPitchNames) {\n  return [...Array(semitones).keys()].map(function(i) {\n    const nameIndexFloat = (i / semitones * STANDARD_SEMITONES + (transposition / CENTS_PER_STANDARD_SEMITONE)) % STANDARD_SEMITONES;\n    const nameIndex = Math.floor(nameIndexFloat);\n    const prefix = allPitchNames[nameIndex];\n    const remainder = nameIndexFloat % 1;\n    if (!remainder) {\n      return prefix;\n    }\n    return `${prefix}${String(round(remainder, 0.001)).slice(1,5)}`;\n  })\n}\n","import {HUMAN_MIN_FREQ, STANDARD_SEMITONES, CENTS_PER_STANDARD_SEMITONE, transposeFrequency} from './music';\n\nexport default function findBaseFrequencies(semitones, rootFrequency) {\n  const frequencies = [];\n  for (let i = 0; i < semitones; i++) {\n    let frequency = transposeFrequency(rootFrequency, i * CENTS_PER_STANDARD_SEMITONE * (STANDARD_SEMITONES / semitones));\n    while(frequency / 2 > HUMAN_MIN_FREQ) {\n      frequency /= 2;\n    }\n    frequencies.push(frequency);\n  }\n  return frequencies;\n}\n","export default function findPitchSequence(semitones, pitchSkip) {\n  const sequence = []\n  for (let i = 0; i < semitones; i++) {\n    sequence.push((i * pitchSkip) % semitones);\n  }\n  return sequence;\n}\n","import {MODES} from './constants';\n\nexport default function findChordNames(semitones, modeIndex, pitchSkip) {\n  const twelveChordsInMode = [...MODES[modeIndex].chords];\n  const semitonesChordsInMode = [];\n  for (let i = 0; i < semitones; i++) {\n    const index = i / semitones * twelveChordsInMode.length;\n    semitonesChordsInMode.push(twelveChordsInMode[index] || null);\n  }\n\n  const semitonesChordsInModeSorted = semitonesChordsInMode.map((chord, i) => {\n    const index = (i * pitchSkip) % semitones;\n    return semitonesChordsInMode[index];\n  });\n\n  return semitonesChordsInModeSorted;\n}\n","export default function sortPitchNames(pitchNames, pitchSkip) {\n  const sorted = pitchNames.map(function(pitchName, index) {\n    return pitchNames[(index * pitchSkip) % pitchNames.length];\n  })\n  return sorted;\n}\n","import {HUMAN_MAX_FREQ} from './music';\nimport {EQ_FREQUENCIES} from './constants';\n\nlet frequencies;\nlet currentOscillators;\nlet audioContext;\nlet gainNode;\nlet headNode;\n\nexport function initializaAudio(baseFrequencies, eq) {\n  if (audioContext) {\n    audioContext.close();\n  }\n  audioContext = new (window.AudioContext || window.webkitAudioContext)();\n  gainNode = audioContext.createGain();\n  gainNode.connect(audioContext.destination);\n\n  // TODO: figure out this gain value\n  gainNode.gain.value = 0.1;\n\n  headNode = gainNode;\n  for(let i = 0; i < eq.length; i++) {\n    const eqNode = audioContext.createBiquadFilter();\n\n    if (i === 0) {\n      eqNode.type = 'lowshelf'\n    } else if (i === eq.length - 1) {\n      eqNode.type = 'highshelf'\n    } else {\n      eqNode.type = 'peaking'\n      // eqNode.Q.value = 1; // 0.0001 to 1000\n    }\n    eqNode.frequency.value = EQ_FREQUENCIES[i];\n    eqNode.gain.value = eq[i] * 40;\n    eqNode.connect(headNode)\n    headNode = eqNode;\n  }\n  gainNode.connect(headNode);\n\n  currentOscillators = [];\n  frequencies = baseFrequencies.map(function(frequency) {\n    return findAudibleOctaves(frequency);\n  })\n}\n\nfunction findAudibleOctaves(frequency) {\n  const frequencies = [];\n  while(frequency < HUMAN_MAX_FREQ) {\n    frequencies.push(frequency);\n    frequency *= 2;\n  }\n  return frequencies;\n}\n\nfunction startNote(index, type) {\n  const oscillators = [];\n  currentOscillators[index] = oscillators;\n  for(const frequency of frequencies[index]) {\n    const oscillatorNode = audioContext.createOscillator();\n    oscillatorNode.frequency.value = frequency;\n    oscillatorNode.type = type;\n    oscillatorNode.connect(headNode);\n    oscillatorNode.start();\n    oscillators.push(oscillatorNode);\n  }\n}\n\nfunction stopNote(index) {\n  for(const oscillator of currentOscillators[index]) {\n    oscillator.stop();\n  }\n  currentOscillators[index] = null;\n}\n\nexport function toggleNote(note, isPlaying, type) {\n  if (!currentOscillators) {\n    return;\n  }\n  if (isPlaying && !currentOscillators[note]) {\n    startNote(note, type);\n  } else if (!isPlaying && currentOscillators[note]) {\n    stopNote(note);\n  }\n}\n","import {useState, useEffect} from 'react';\n\nconst WIN = typeof window !== 'undefined' ? window : null;\n\nconst PLACEHOLDER_WINDOW = {\n  addEventListener() {},\n  innerHeight: 0,\n  innerWidth: 0,\n  removeEventListener() {},\n};\n\nexport function useViewportDimensions(win = WIN || PLACEHOLDER_WINDOW) {\n  const [innerHeight, setInnerHeight] = useState(win.innerHeight);\n  const [innerWidth, setInnerWidth] = useState(win.innerWidth);\n\n  useEffect(() => {\n    function onResize() {\n      setInnerHeight(win.innerHeight);\n      setInnerWidth(win.innerWidth);\n    }\n\n    win.addEventListener('resize', onResize);\n    return () => {\n      win.removeEventListener('resize', onResize);\n    }\n  }, [win]);\n\n  return [innerWidth, innerHeight];\n}\n","import {modulo, sortAscending} from '@danehansen/math';\nimport {STANDARD_SEMITONES} from './music';\n\nconst CHORDS = [\n  {\n    name: 'major',\n    suffix: '',\n    textTransform: 'toUpperCase',\n    additionalPitches: [400, 700],\n  },\n  {\n    name: 'minor',\n    suffix: '',\n    textTransform: 'toLowerCase',\n    additionalPitches: [300, 700],\n  },\n  {\n    name: 'augmented',\n    suffix: '+',\n    textTransform: 'toUpperCase',\n    additionalPitches: [400, 800],\n  },\n  {\n    name: 'diminished',\n    suffix: 'º',\n    textTransform: 'toLowerCase',\n    additionalPitches: [300, 600],\n  },\n  {\n    name: 'major sixth',\n    suffix: <sup>6</sup>,\n    textTransform: 'toUpperCase',\n    additionalPitches: [400, 700, 900],\n  },\n  {\n    name: 'minor sixth',\n    suffix: <sup>6</sup>,\n    textTransform: 'toLowerCase',\n    additionalPitches: [300, 700, 900],\n  },\n  {\n    name: 'dominant seventh',\n    suffix: <sup>7</sup>,\n    textTransform: 'toUpperCase',\n    additionalPitches: [400, 700, 1000],\n  },\n  {\n    name: 'major seventh',\n    suffix: <sup>∆7</sup>,\n    textTransform: 'toUpperCase',\n    additionalPitches: [400, 700, 1100],\n  },\n  {\n    name: 'minor seventh',\n    suffix: <sup>7</sup>,\n    textTransform: 'toLowerCase',\n    additionalPitches: [300, 700, 1000],\n  },\n\n  {\n    name: 'augmented seventh',\n    suffix: <>+<sup>∆7</sup></>,\n    textTransform: 'toUpperCase',\n    additionalPitches: [400, 800, 1000],\n  },\n  {\n    name: 'minor-major seventh',\n    suffix: <sup>M7</sup>,\n    textTransform: 'toLowerCase',\n    additionalPitches: [300, 700, 1100],\n  },\n  {\n    name: 'diminished seventh',\n    suffix: <>º<sup>7</sup></>,\n    textTransform: 'toLowerCase',\n    additionalPitches: [300, 600, 900],\n  },\n  {\n    name: 'half-diminished seventh',\n    suffix: <sup>ø7</sup>,\n    textTransform: 'toLowerCase',\n    additionalPitches: [300, 600, 1000],\n  },\n];\n\nexport default function findChords(pitches, semitones, pitchNames) {\n  function convertPitchToCents(pitch) {\n    return pitch / semitones * STANDARD_SEMITONES * 100;\n  }\n\n  function convertCentsToPitch(cents) {\n    return cents / 100 / STANDARD_SEMITONES * semitones;\n  }\n\n  const pitchesSorted = pitches.sort(sortAscending);\n  const pitchesSortedScaled = pitchesSorted.map(convertPitchToCents)\n  const inversions = findInversionsOfChord(pitchesSortedScaled)\n\n  const matchingChords = [];\n  inversions.forEach(inversion => {\n    const inversionLowered = inversion.map((pitch) => {\n      return modulo(pitch - inversion[0], 1200);\n    })\n    const rootPitch = convertCentsToPitch(inversion[0]);\n    const additionalPitches = inversionLowered.slice(1);\n    CHORDS.forEach(chord => {\n      const fingersNeeded = findFingersNeeded(additionalPitches, chord);\n      if (typeof fingersNeeded === 'number') {\n        matchingChords.push({\n          name: <>{pitchNames[rootPitch][chord.textTransform]()}{chord.suffix}</>,\n          fingersNeeded,\n        })\n      }\n    })\n  });\n  matchingChords.sort(sortMatchingChords);\n  return matchingChords;\n  // return {\n  //   pitchesSorted,\n  //   pitchesSortedScaled,\n  //   inversions,\n  //   matchingChords,\n  // }\n}\n\nfunction findInversionsOfChord(pitches) {\n  const results = [];\n  for (let i = 0; i < pitches.length; i++) {\n    results.push(pitches.map((pitch, j) => pitches[(j + i) % pitches.length]))\n  }\n  return results;\n}\n\nfunction sortMatchingChords(chordA, chordB) {\n  return chordA.fingersNeeded - chordB.fingersNeeded;\n}\n\nfunction findFingersNeeded(additionalPitches, chord) {\n  let correctPitches = 0;\n  for (let i = 0; i < additionalPitches.length; i++) {\n    if (chord.additionalPitches.indexOf(additionalPitches[i]) < 0) {\n      return;\n    }\n    correctPitches++;\n  }\n  return chord.additionalPitches.length - correctPitches;\n}\n","import styles from './App.module.scss';\nimport Display from './Display/Display';\nimport Menu from './Menu/Menu';\nimport PitchLabel from './PitchLabel/PitchLabel';\nimport ChordLabel from './ChordLabel/ChordLabel';\nimport TouchPad from './TouchPad/TouchPad';\nimport Button from './Button/Button';\nimport FirstTouch from './FirstTouch/FirstTouch';\nimport MatchingChords from './MatchingChords/MatchingChords';\nimport {OSCILLATOR_TYPES, DEFAULT_TRANSPOSITION, EQ_FREQUENCIES} from '../util/constants';\nimport {STANDARD_A4, STANDARD_SEMITONES, transposeFrequency} from '../util/music';\nimport {useState, useEffect} from 'react';\nimport findPitchSkipOptions from '../util/findPitchSkipOptions';\nimport findBestPitchNames from '../util/findBestPitchNames';\nimport findPitchNames from '../util/findPitchNames';\nimport findBaseFrequencies from '../util/findBaseFrequencies';\nimport findPitchSequence from '../util/findPitchSequence';\nimport findChordNames from '../util/findChordNames';\nimport sortPitchNames from '../util/sortPitchNames';\nimport {initializaAudio, toggleNote} from '../util/shepardTone';\nimport queryString from 'query-string';\nimport {isEqual} from 'lodash';\nimport {useViewportDimensions} from '../util/hooks';\nimport {random} from '@danehansen/math';\nimport findChords from '../util/findChords';\nimport {throttle} from 'lodash';\n\nconst replaceState = throttle((queryString) => {\n  window.history.replaceState(null, null, `${window.location.origin}${window.location.pathname}?${queryString}`);\n}, 1000);\n\nexport default function App() {\n  // useEffect(() => {\n  //   function handle(evt) {\n  //     if (typeof evt.scale === 'number' && evt.scale !== 1) {\n  //       evt.preventDefault();\n  //     }\n  //\n  //     if (evt.touches?.length > 1) {\n  //       evt.preventDefault();\n  //     }\n  //   }\n  //\n  //   const options = {\n  //     // passive: false,\n  //     // capture: false,\n  //     // signal\n  //   };\n  //   let useCapture;\n  //   // useCapture = false;\n  //\n  //   const events = [\n  //     'pointerover',\n  //     'pointerout',\n  //     'pointerenter',\n  //     'pointerleave',\n  //     'pointerdown',\n  //     'pointerup',\n  //     'pointermove',\n  //     'pointercancel',\n  //     'click',\n  //     'mouseup',\n  //     'mousedown',\n  //     'mouseenter',\n  //     'mouseleave',\n  //     'mouseover',\n  //     'mouseout',\n  //     'touchstart',\n  //     'touchend',\n  //     'touchcancel',\n  //     'touchcmove',\n  //   ];\n  //\n  //   events.forEach((eventType) => {\n  //     window.addEventListener(eventType, handle, options, useCapture);\n  //   });\n  //\n  //   return () => {\n  //     events.forEach((eventType) => {\n  //       window.removeEventListener(eventType, handle, options, useCapture);\n  //     });\n  //   }\n  // }, []);\n\n  const urlParams = queryString.parse(window.location.search, {parseNumbers: true, arrayFormat: 'comma'});\n  function useURLParams(key, value, def) {\n    useEffect(() => {\n      function changeParams() {\n        replaceState(queryString.stringify(urlParams, {arrayFormat: 'comma'}));\n      }\n\n      if (!isEqual(urlParams[key], value)) {\n        if (isEqual(def, value) && urlParams[key] !== undefined) {\n          delete urlParams[key];\n          changeParams();\n        } else if (!isEqual(def, value)) {\n          urlParams[key] = value;\n          changeParams();\n        }\n      }\n    }, [value, key, def]);\n  }\n\n  const [a4, setA4] = useState(urlParams.a4 || STANDARD_A4);\n  useURLParams('a4', a4, STANDARD_A4);\n\n  const [oscillator, setOscillator] = useState(urlParams.oscillator || OSCILLATOR_TYPES.SINE);\n  useURLParams('oscillator', oscillator, OSCILLATOR_TYPES.SINE);\n\n  const [semitones, setSemitones] = useState(urlParams.semitones || STANDARD_SEMITONES);\n  useURLParams('semitones', semitones, STANDARD_SEMITONES);\n\n  const [transposition, setTransposition] = useState(urlParams.transposition !== undefined ? urlParams.transposition : DEFAULT_TRANSPOSITION);\n  useURLParams('transposition', transposition, DEFAULT_TRANSPOSITION);\n\n  const [mode, setMode] = useState(urlParams.mode || 0);\n  useURLParams('mode', mode, 0);\n\n  const [allPitchNames, setAllPitchNames] = useState(findBestPitchNames(transposition, mode));\n  useEffect(() => {\n    setAllPitchNames(findBestPitchNames(transposition, mode));\n  }, [mode, transposition]);\n\n  const [pitchNames, setPitchNames] = useState(findPitchNames(semitones, transposition, allPitchNames));\n  useEffect(() => {\n    setPitchNames(findPitchNames(semitones, transposition, allPitchNames));\n  }, [semitones, transposition, allPitchNames]);\n\n  const [pitchSkipOptions, setPitchSkipOptions] = useState(findPitchSkipOptions(semitones));\n  useEffect(() => {\n    setPitchSkipOptions(findPitchSkipOptions(semitones));\n  }, [semitones]);\n\n  const _ps = urlParams.pitchSkip ? urlParams.pitchSkip : pitchSkipOptions[0];\n  const [pitchSkip, setPitchSkip] = useState(_ps);\n  useEffect(() => {\n    if (pitchSkipOptions.indexOf(pitchSkip) < 0) {\n      setPitchSkip(pitchSkipOptions[0]);\n    }\n  }, [pitchSkipOptions, pitchSkip]);\n  useURLParams('pitchSkip', pitchSkip, _ps);\n\n  const _eq = [];\n  for (let i = 0; i < EQ_FREQUENCIES.length; i++) {\n    _eq.push(0);\n  }\n\n  const [eq, setEq] = useState(urlParams.eq || EQ_FREQUENCIES.map(() => 0));\n  useURLParams('eq', eq, EQ_FREQUENCIES.map(() => 0));\n\n  const [rootFrequency, setRootFrequency] = useState(transposeFrequency(a4, transposition));\n  useEffect(() => {\n    setRootFrequency(transposeFrequency(a4, transposition));\n  }, [transposition, a4]);\n\n  const [baseFrequencies, setBaseFrequencies] = useState(findBaseFrequencies(semitones, rootFrequency));\n  useEffect(() => {\n    setBaseFrequencies(findBaseFrequencies(semitones, rootFrequency));\n  }, [semitones, rootFrequency]);\n\n  const [pitchSequence, setPitchSequence] = useState(findPitchSequence(semitones, pitchSkip));\n  useEffect(() => {\n    setPitchSequence(findPitchSequence(semitones, pitchSkip));\n  }, [semitones, pitchSkip]);\n\n  const [pitchNamesSorted, setPitchNamesSorted] = useState(sortPitchNames(pitchNames, pitchSkip));\n  useEffect(() => {\n    setPitchNamesSorted(sortPitchNames(pitchNames, pitchSkip));\n  }, [pitchNames, pitchSkip]);\n\n  const [chordNamesSorted, setChordNamesSorted] = useState(findChordNames(semitones, mode, pitchSkip));\n  useEffect(() => {\n    setChordNamesSorted(findChordNames(semitones, mode, pitchSkip));\n  }, [semitones, pitchSkip, mode]);\n\n  const [activePitches, setActivePitches] = useState([]);\n  const [activeChords, setActiveChords] = useState([]);\n\n  const diameter = Math.min(...useViewportDimensions());\n\n  const [isMenuOpen, setMenuOpen] = useState(false);\n  function onMenuButtonClick() {\n    if (isMenuOpen) {\n      initializaAudio(baseFrequencies, eq);\n    }\n    setMenuOpen(!isMenuOpen);\n  }\n\n  function onTouchCallback(pitches) {\n    function addRandomPitches(low, high) {\n      if (!pitches.length || (!low && !high)) {\n        return pitches;\n      }\n\n      const randomAmount = random(low, high, true);\n      const randomPitches = [];\n      for (let i = 0; i < randomAmount; i++) {\n        let randomPitch;\n        do {\n          randomPitch = random(0, 12, true);\n        } while (pitches.indexOf(randomPitch) >= 0)\n        randomPitches.push(randomPitch);\n      }\n\n      return [...pitches, ...randomPitches];\n    }\n\n    // const newPitches = addRandomPitches(1, 2);\n    const newPitches = addRandomPitches();\n\n    for(let i = 0; i < semitones; i++) {\n      if (newPitches.indexOf(i) >= 0) {\n        toggleNote(i, true, oscillator)\n      } else {\n        toggleNote(i, false, oscillator)\n      }\n    }\n\n    setActivePitches(newPitches);\n    setActiveChords(findChords(newPitches, semitones, pitchNames));\n  }\n\n  return (\n    <FirstTouch className={styles.root} callback={ initializaAudio.bind(null, baseFrequencies, eq)}>\n      <div className={styles.contentHolder}>\n        <MatchingChords chords={activeChords} />\n      </div>\n      <div className={styles.wheelHolder} style={{width: `${diameter}px`, height: `${diameter}px`}}>\n        <Display\n          activePitches={activePitches}\n          baseFrequencies={baseFrequencies}\n          diameter={diameter}\n          pitchSequence={pitchSequence}\n          mode={mode}\n        />\n        <PitchLabel pitchNamesSorted={pitchNamesSorted} diameter={diameter} chordNamesSorted={chordNamesSorted} />\n        <ChordLabel chordNamesSorted={chordNamesSorted} diameter={diameter} />\n        <TouchPad\n          callback={onTouchCallback}\n          diameter={diameter}\n          pitchSequence={pitchSequence}\n        />\n      </div>\n\n      {isMenuOpen && <div className={styles.menuHolder}><Menu\n        a4={a4}\n        setA4={setA4}\n        allPitchNames={allPitchNames}\n        eq={eq}\n        setEq={setEq}\n        mode={mode}\n        setMode={setMode}\n        oscillator={oscillator}\n        setOscillator={setOscillator}\n        pitchSkip={pitchSkip}\n        setPitchSkip={setPitchSkip}\n        semitones={semitones}\n        setSemitones={setSemitones}\n        transposition={transposition}\n        setTransposition={setTransposition}\n        pitchSkipOptions={pitchSkipOptions}\n      /></div>}\n\n      <Button className={styles.menuButton} onClick={onMenuButtonClick}>{isMenuOpen ? 'x' : 'menu'}</Button>\n    </FirstTouch>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/reset.module.scss';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}