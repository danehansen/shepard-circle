{"version":3,"sources":["App/Menu/Menu.module.scss","App/Label/Label.module.scss","App/TouchPad/TouchPad.module.scss","App/Display/Display.module.scss","constants.js","util/findIncrementOptions.js","util/findPitchNames.js","App/Menu/Menu.js","App/ResizeListener/ResizeListener.js","util/math.js","util/convertIndexToRadians.js","App/Label/Label.js","util/convertRadiansToIndex.js","App/TouchPad/TouchPad.js","App/Display/canvas.js","App/Display/Display.js","util/findInterval.js","util/shepardTone.js","App/App.js","reportWebVitals.js","index.js","App/App.module.scss"],"names":["module","exports","MAX_FREQ","OSCILLATOR_TYPES","TEMPERMENT_TYPES","semitones","increments","i","findIncrementsOfSemitone","push","increment","Array","keys","semitoneIndexes","semitoneIndex","undefined","NAMES","map","nameIndexFloat","length","nameIndex","Math","floor","prefix","remainder","String","round","slice","findIncrementLabel","str","Menu","a4","temperment","minFreq","maxFreq","layoutIncrement","oscillator","rootPitch","setMinFreq","setMaxFreq","setA4","setOscillator","setTemperment","setSemitones","setRootPitch","setLayoutIncrement","onOscillatorChange","value","target","pitchNames","findPitchNames","className","styles","root","property","title","label","input","type","checked","onChange","labelText","min","max","step","parseInt","columns","name","index","findIncrementOptions","num","ResizeListener","props","_onResize","win","setState","innerHeight","innerWidth","state","addEventListener","this","removeEventListener","children","React","Component","defaultProps","window","toRadianDirection","degrees","radians","PI","toRadians","circ","offset","modulo","convertIndexToRadians","Label","rad","x","cos","y","sin","classnames","button","small","style","left","top","convertRadiansToIndex","CIRC","RADIANS_IN_SLICE","DEGREES_IN_SLICE","lowerLimit","upperLimit","adjustedRad","TouchPad","callback","diameter","rootNode","useRef","anyTouch","evt","targetTouches","rect","current","getBoundingClientRect","pitches","clientX","clientY","sqrt","pow","pitch","atan2","ref","onTouchMove","onTouchStart","onTouchEnd","onTouchCancel","rotate","angle","ctx","func","dx","dy","call","Canvas","element","document","createElement","width","offsetWidth","height","offsetHeight","devicePixelRatio","resize","isMounted","_element","parentNode","_width","_height","_devicePixelRatio","_imageDataHandler","_context","scale","arc","radius","startAngle","endAngle","anticlockwise","beginPath","bezierCurveTo","clearRect","clip","closePath","drawImage","source","sx","sy","sWidth","sHeight","dWidth","dHeight","isCanvas","_drawImageDest","fill","fillRect","lineTo","moveTo","quadraticCurveTo","stroke","resetTransform","restore","transform","save","setRotate","setTransform","xScale","xSkew","ySkew","yScale","setTranslate","translate","createImageData","imageDataOrWidth","getContext","fillStyle","globalCompositeOperation","globalAlpha","lineWidth","strokeStyle","points","lastPoint","nextPoint","path","Path2D","avgX","avgY","Display","_rootNode","createRef","_root","_buffer","_drawSlices","prevProps","prevState","_connectPitches","activePitches","colors","buttonSlice","directionalColor","findColors","unshift","pop","color","isActive","indexOf","fillSlice","pitchA","j","connectPitches","canvas","outerRadius","holeRadius","center","halfSlice","newAngle","direction","colorSlice","cosR","cosG","cosB","r","g","b","pitchB","radianA","cosA","sinA","radianB","pointA","pointB","interval","a","findInterval","xDiff","yDiff","diff","radiusA","radiusB","centerX","centerY","frequencies","currentOscillators","audioCtx","gainNode","initializaAudio","close","AudioContext","webkitAudioContext","createGain","connect","destination","gain","findFrequencies","distance","lowestFrequency","currentFrequency","toggleNote","note","isPlaying","oscillators","frequency","createOscillator","start","startNote","stop","stopNote","App","useState","isMenuOpen","setMenuOpen","hasInitializedAudio","setHasInitializedAudio","setActivePitches","onTouchCallback","onClick","contentHolder","smallest","wheelHolder","menuHolder","menuButton","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d1642d2e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Menu_root__3QA5H\",\"property\":\"Menu_property__qoOWz\",\"columns\":\"Menu_columns__3o8dK\",\"title\":\"Menu_title__tE_9H\",\"label\":\"Menu_label__3hKMT\",\"labelText\":\"Menu_labelText__2uoMn\",\"input\":\"Menu_input__17q9X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Label_root__iHLA-\",\"button\":\"Label_button__opkRi\",\"small\":\"Label_small__FYd4m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TouchPad_root__22wzt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Display_root__ig8ld\"};","export const MIN_FREQ = 20;\nexport const MAX_FREQ = 20000;\n\nexport const OSCILLATOR_TYPES = {\n  SINE: 'sine',\n  SQUARE: 'square',\n  SAWTOOTH: 'sawtooth',\n  TRIANGLE: 'triangle',\n};\n\nexport const TEMPERMENT_TYPES = {\n  EQUAL: 'equal',\n  JUST: 'just',\n  MEANTONE: 'meantone',\n  PYTHAGOREAN: 'pythagorean',\n};\n","export default function(semitones) {\n  const increments = [];\n  for(let i = 1; i < semitones; i++) {\n    if (findIncrementsOfSemitone(semitones, i)) {\n      increments.push(i);\n    }\n  }\n  return increments;\n}\n\nfunction findIncrementsOfSemitone(semitones, increment) {\n  const allSemitones = [...Array(semitones).keys()];\n  const semitoneIndexes = [];\n  for(let i = 0; i < semitones; i++) {\n    const semitoneIndex = (i * increment) % semitones;\n    if (semitoneIndexes[semitoneIndex] !== undefined) {\n      return false;\n    } else {\n      semitoneIndexes[semitoneIndex] = semitoneIndex;\n    }\n  }\n  return semitoneIndexes;\n}\n","import {round} from '@danehansen/math';\n\nconst NAMES = ['A', 'A#/Bb', 'B', 'C', 'C#/Db', 'D', 'D#/Eb', 'E', 'F', 'F#/Gb', 'G', 'G#/Ab'];\n\nexport default function(semitones) {\n  return [...Array(semitones).keys()].map(function(i) {\n    const nameIndexFloat = i / semitones * NAMES.length;\n    const nameIndex = Math.floor(nameIndexFloat);\n    const prefix = NAMES[nameIndex];\n    const remainder = nameIndexFloat % 1;\n    if (!remainder) {\n      return prefix;\n    }\n    return `${prefix}${String(round(remainder, 0.001)).slice(1,5)}`;\n  })\n}\n","import styles from './Menu.module.scss';\nimport {MIN_FREQ, MAX_FREQ, TEMPERMENT_TYPES, OSCILLATOR_TYPES} from '../../constants';\nimport findIncrementOptions from '../../../src/util/findIncrementOptions';\nimport findPitchNames from '../../../src/util/findPitchNames';\n\nfunction findIncrementLabel(increment, semitones) {\n  let str = String(increment);\n  if (increment === 1) {\n    str += ` (chromatic)`\n  } else if (increment === semitones - 1) {\n    str += ` (reverse chromatic)`\n  } else if (semitones === 12 && increment === 7) {\n    str += ` (circle of fifths)`\n  }\n  return str;\n}\n\nexport default function Menu({ a4, temperment, semitones, minFreq, maxFreq, layoutIncrement, oscillator, rootPitch, setMinFreq, setMaxFreq, setA4, setTemperment, setOscillator, setSemitones, setRootPitch, setLayoutIncrement }) {\n  function onTempermentChange({ target: { value }}) {\n    setTemperment(value);\n  }\n\n  function onOscillatorChange({ target: { value }}) {\n    setOscillator(value);\n  }\n\n  const pitchNames = findPitchNames(semitones);\n\n  return (\n    <form className={styles.root}>\n      <div className={styles.property}>\n        <h2 className={styles.title}>Oscillator</h2>\n        <label className={styles.label}>\n          <input className={styles.input} type=\"radio\" checked={oscillator === OSCILLATOR_TYPES.SINE} value={OSCILLATOR_TYPES.SINE} onChange={onOscillatorChange} />\n          <div className={styles.labelText}>{OSCILLATOR_TYPES.SINE}</div>\n        </label>\n        <label className={styles.label}>\n          <input className={styles.input} type=\"radio\" checked={oscillator === OSCILLATOR_TYPES.SQUARE} value={OSCILLATOR_TYPES.SQUARE} onChange={onOscillatorChange} />\n          <div className={styles.labelText}>{OSCILLATOR_TYPES.SQUARE}</div>\n        </label>\n        <label className={styles.label}>\n          <input className={styles.input} type=\"radio\" checked={oscillator === OSCILLATOR_TYPES.SAWTOOTH} value={OSCILLATOR_TYPES.SAWTOOTH} onChange={onOscillatorChange} />\n          <div className={styles.labelText}>{OSCILLATOR_TYPES.SAWTOOTH}</div>\n        </label>\n        <label className={styles.label}>\n          <input className={styles.input} type=\"radio\" checked={oscillator === OSCILLATOR_TYPES.TRIANGLE} value={OSCILLATOR_TYPES.TRIANGLE} onChange={onOscillatorChange} />\n          <div className={styles.labelText}>{OSCILLATOR_TYPES.TRIANGLE}</div>\n        </label>\n      </div>\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>Semitones</h2>\n        <label className={styles.label}>\n          <input className={styles.input} type=\"range\" min={1} max={120} value={semitones} step=\"1\" onChange={function({target: {value}}){setSemitones(parseInt(value))}} />\n        </label>\n      </div>\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>Root Pitch</h2>\n        <div className={styles.columns}>\n          {pitchNames.map(function(name, index) {\n            return <label className={styles.label} key={name}>\n              <input className={styles.input} type=\"radio\" value={index} name=\"rootPitch\" checked={rootPitch === index} onChange={function({target:{value}}){setRootPitch(parseInt(value))}} />\n              <div className={styles.labelText}>{name}</div>\n            </label>\n          })}\n        </div>\n      </div>\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>Layout Increment</h2>\n        {findIncrementOptions(semitones).map(function(num) {\n          return <label className={styles.label} key={num}>\n            <input className={styles.input} type=\"radio\" value={num} name=\"increment\" checked={layoutIncrement === num} onChange={function({target:{value}}){setLayoutIncrement(parseInt(value))}} />\n            <div className={styles.labelText}>{findIncrementLabel(num, semitones)}</div>\n          </label>\n        })}\n      </div>\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>Frequencies</h2>\n        <label className={styles.label}>\n          <input\n            className={styles.input}\n            type=\"range\"\n            min={MIN_FREQ}\n            max={MAX_FREQ}\n            value={minFreq}\n            step=\"1\"\n            onChange={function({target:{value}}){setMinFreq(parseInt(value))}}\n          />\n          <div className={styles.labelText}>Minimum Frequency</div>\n        </label>\n        <label className={styles.label}>\n          <input\n            className={styles.input}\n            type=\"range\"\n            min={MIN_FREQ}\n            max={MAX_FREQ}\n            value={maxFreq}\n            step=\"1\"\n            onChange={function({target:{value}}){setMaxFreq(parseInt(value))}}\n          />\n          <div className={styles.labelText}>Max Frequency</div>\n        </label>\n      </div>\n\n\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>A4</h2>\n        <label className={styles.label}>\n          <input\n            className={styles.input}\n            type=\"number\"\n            min={MIN_FREQ}\n            max={MAX_FREQ}\n            value={a4}\n            step=\"1\"\n            onChange={function({target:{value}}){setA4(parseInt(value))}}\n          />\n        </label>\n      </div>\n\n      {/*<div className={styles.property}>\n        <h2 className={styles.title}>Temperment</h2>\n        <label className={styles.label}>\n          <input className={styles.input} type=\"radio\" disabled checked={temperment === TEMPERMENT_TYPES.EQUAL} value={TEMPERMENT_TYPES.EQUAL} onChange={onTempermentChange} />\n          <div className={styles.labelText}>{TEMPERMENT_TYPES.EQUAL}</div>\n        </label>\n        <label className={styles.label}>\n          <input className={styles.input} type=\"radio\" disabled checked={temperment === TEMPERMENT_TYPES.JUST} value={TEMPERMENT_TYPES.JUST} onChange={onTempermentChange} />\n          <div className={styles.labelText}>{TEMPERMENT_TYPES.JUST}</div>\n        </label>\n        <label className={styles.label}>\n          <input className={styles.input} type=\"radio\" disabled checked={temperment === TEMPERMENT_TYPES.MEANTONE} value={TEMPERMENT_TYPES.MEANTONE} onChange={onTempermentChange} />\n          <div className={styles.labelText}>{TEMPERMENT_TYPES.MEANTONE}</div>\n        </label>\n        <label className={styles.label}>\n          <input className={styles.input} type=\"radio\" disabled checked={temperment === TEMPERMENT_TYPES.PYTHAGOREAN} value={TEMPERMENT_TYPES.PYTHAGOREAN} onChange={onTempermentChange} />\n          <div className={styles.labelText}>{TEMPERMENT_TYPES.PYTHAGOREAN}</div>\n        </label>\n      </div>*/}\n    </form>\n  );\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst PLACEHOLDER_WINDOW = {\n  addEventListener() {},\n  innerHeight: 0,\n  innerWidth: 0,\n  removeEventListener() {},\n};\n\nexport default class ResizeListener extends React.Component {\n  static propTypes = {\n    children: PropTypes.func.isRequired,\n    win: PropTypes.object,\n  };\n\n  static defaultProps = {\n    win: typeof window !== 'undefined' ? window : PLACEHOLDER_WINDOW,\n  };\n\n  constructor(props) {\n    super(props);\n    const { win } = props;\n    this.state = {\n      innerHeight: win.innerHeight,\n      innerWidth: win.innerWidth,\n    };\n    win.addEventListener('resize', this._onResize);\n  }\n\n  componentWillUnmount() {\n    const { win } = this.props;\n    win.removeEventListener('resize', this._onResize);\n  }\n\n  _onResize = () => {\n    const { win } = this.props;\n    this.setState({\n      innerHeight: win.innerHeight,\n      innerWidth: win.innerWidth,\n    });\n  };\n\n  render() {\n    const { innerHeight, innerWidth } = this.state;\n    const { children } = this.props;\n    return children(innerWidth, innerHeight);\n  }\n}\n","import {modulo} from '@danehansen/math';\n\nexport function toRadians(degrees) {\n  return degrees * Math.PI / 180;\n}\n\nexport function toDegrees(radians) {\n  return radians * 180 / Math.PI;\n}\n\nexport function toRadianDirection(degrees) {\n  const radians = toRadians(-degrees);\n  const circ = Math.PI * 2;\n  const offset = radians + Math.PI * 0.5;\n  return modulo(offset, circ);\n}\n\nexport function toDegreeDirection(radians) {\n  const degrees = toDegrees(-radians);\n  return modulo(degrees + 90, 360);\n}\n","import { toRadianDirection } from './math';\n\nexport default function convertIndexToRadians(index, semitones, rootPitch, layoutIncrement) {\n  const degreesInSlice = 360 / semitones;\n  const degrees = index * layoutIncrement / semitones * 360;\n  const degreesOffset = degrees - (degreesInSlice * rootPitch *  layoutIncrement)\n  const radians = toRadianDirection(degreesOffset);\n  return radians;\n}\n","import styles from './Label.module.scss';\nimport classnames from 'classnames';\nimport findPitchNames from '../../util/findPitchNames';\nimport convertIndexToRadians from '../../util/convertIndexToRadians';\n\nexport default function Label({rootPitch, semitones, layoutIncrement}) {\n  const pitchNames = findPitchNames(semitones);\n  const radius = 35;\n  return <div className={styles.root}>\n  {pitchNames.map(function(name, index) {\n    const rad = convertIndexToRadians(index, semitones, rootPitch, layoutIncrement);\n    const x = Math.cos(rad);\n    const y = -Math.sin(rad);\n    return <div\n      className={classnames(styles.button, name.length > 1 && styles.small)}\n      key={name}\n      style={{\n        left: `${(x * radius + 50)}%`,\n        top: `${(y * radius + 50)}%`,\n      }}\n    >{name}</div>\n  })}</div>\n}\n","import { modulo, round } from '@danehansen/math';\nimport convertIndexToRadians from './convertIndexToRadians';\nimport {toRadianDirection} from './math';\n\nexport default function convertRadiansToIndex(rad, semitones, rootPitch, layoutIncrement) {\n  const ROUND = 0.001;\n  const CIRC = Math.PI * 2;\n  const RADIANS_IN_SLICE = CIRC / semitones;\n  const DEGREES_IN_SLICE = 360 / semitones;\n\n  for(let i = 0; i < semitones; i++) {\n    const degrees = modulo(DEGREES_IN_SLICE * (i - rootPitch) * layoutIncrement, 360);\n    const radians = toRadianDirection(degrees);\n    const lowerLimit  = radians - RADIANS_IN_SLICE / 2;\n    const upperLimit = radians + RADIANS_IN_SLICE / 2;\n    let adjustedRad = rad;\n\n    if (lowerLimit <= adjustedRad && upperLimit >= adjustedRad) {\n      return i;\n    }\n\n    if (lowerLimit < 0 && upperLimit > 0) {\n      adjustedRad -= CIRC;\n    } else if (lowerLimit < CIRC && upperLimit > CIRC) {\n      adjustedRad += CIRC;\n    }\n\n    if (lowerLimit <= adjustedRad && upperLimit >= adjustedRad) {\n      return i;\n    }\n  }\n}\n","import {useRef} from 'react';\nimport {round, modulo} from '@danehansen/math';\nimport styles from './TouchPad.module.scss';\nimport convertRadiansToIndex from '../../util/convertRadiansToIndex';\n\nexport default function TouchPad({className, callback, semitones, diameter, layoutIncrement, rootPitch}) {\n  const rootNode = useRef(null);\n\n  function onTouchMove(evt) {\n    // console.log('onTouchMove');\n    anyTouch(evt);\n  }\n\n  function onTouchStart(evt) {\n    // console.log('onTouchStart');\n    anyTouch(evt);\n  }\n\n  function onTouchEnd(evt) {\n    const {targetTouches} = evt;\n    // console.log('onTouchEnd', targetTouches[0]);\n    anyTouch(evt);\n  }\n\n  function onTouchCancel(evt) {\n    // console.log('onTouchCancel');\n    anyTouch(evt);\n  }\n\n  function anyTouch(evt) {\n    const {targetTouches} = evt;\n\n    if (!targetTouches) {\n      callback([]);\n    }\n    const rect = rootNode.current.getBoundingClientRect();\n    const pitches = []\n    for (let i = 0; i < targetTouches.length; i++) {\n      const {clientX, clientY} = targetTouches[i];\n      const x = clientX - rect.x - diameter * 0.5;\n      const y = -(clientY - rect.y - diameter * 0.5);\n\n      const length = Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));\n      if (length <= diameter / 2) {\n        const rad = modulo(Math.atan2(y, x), Math.PI * 2);\n        const pitch = convertRadiansToIndex(rad, semitones, rootPitch, layoutIncrement);\n        pitches.push(pitch);\n      }\n    }\n    callback(pitches);\n  }\n\n  return <div\n    ref={rootNode}\n    className={styles.root}\n    onTouchMove={onTouchMove}\n    onTouchStart={onTouchStart}\n    onTouchEnd={onTouchEnd}\n    onTouchCancel={onTouchCancel}\n  />;\n}\n","// import ImageDataHandler from './image-data-handler';\n\nfunction rotate(angle, x, y, ctx, func) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const dx = x - cos * x - sin * -y;\n  const dy = y - sin * x - cos * y;\n  func.call(ctx, cos, sin, -sin, cos, dx, dy);\n}\n\n/**\n* a helper for canvas manipulation, to store a reference to the element as well as it's context.\nalso adds some helpful method defaults. also has some drawing utilities.\n* @param {HTMLCanvasElement} [element = document.createElement('canvas')] - put HTMLCanvasElement if this is your\n* final render canvas\n* @param {Integer} [width = element.offsetWidth] - width of area\n* @param {Integer} [height = element.offsetHeight] - height of area\n* @param {Float} [devicePixelRatio = window.devicePixelRatio] - actual pixels to css pixel\n*/\nexport default class Canvas {\n  /* *******************\n  * initializing methods\n  *********************/\n\n  constructor(element = document.createElement('canvas'), width = element.offsetWidth, height = element.offsetHeight, devicePixelRatio = window.devicePixelRatio) { // eslint-disable-line max-len\n    this._element = element;\n    this._context = this._element.getContext('2d');\n    this.resize(width, height, devicePixelRatio);\n  }\n\n  /**\n    * sets width/height properties as well as scaling\n    * @param {Integer} [width = this.width] - width of area of canvas\n    * @param {Integer} [height = this.height] - height of area of canvas\n    * @param {Float} [devicePixelRatio = window.devicePixelRatio] - actual pixels to css pixel\n    * @returns {void}\n  */\n  // eslint-disable complexity\n  resize = (width, height, devicePixelRatio = window.devicePixelRatio) => {\n    // allow for case to call with no params when devicePixelRatio is changed\n    // allow for case to call with no params when dom element is resized\n    // otherwise width and height are defined\n    // this method will erase the canvas and reset any clipping, fillStyle, lineWidth, strokeStyle, etc...\n    if (!width || !height) {\n      const isMounted = !!this._element.parentNode;\n      width = isMounted ? this._element.offsetWidth : this._width;\n      height = isMounted ? this._element.offsetHeight : this._height;\n    }\n    this._devicePixelRatio = devicePixelRatio;\n    this._width = width;\n    this._height = height;\n    this._element.width = width * this._devicePixelRatio;\n    this._element.height = height * this._devicePixelRatio;\n    this._imageDataHandler = null;\n    this._context.scale(this._devicePixelRatio, this._devicePixelRatio);\n  }\n  // eslint-enable complexity\n\n  /* ******\n  * getters\n  ********/\n\n  /**\n    * get the instance's HTMLCanvasElement\n    * @readonly\n    * @type {HTMLCanvasElement}\n  */\n  get element() {\n    return this._element;\n  }\n\n  /**\n    * get the instance's height\n    * @readonly\n    * @type {Integer}\n  */\n  get height() {\n    return this._height;\n  }\n\n  /**\n    * get the instance's ImageDataHandler reflecting the current state\n    * @readonly\n    * @type {ImageDataHandler}\n  */\n  get imageDataHandler() {\n    if (!this._imageDataHandler) {\n      const width = this._width * this._devicePixelRatio;\n      const height = this._height * this._devicePixelRatio;\n      // this._imageDataHandler = new ImageDataHandler(this._context, 0, 0, width, height);\n    }\n    return this._imageDataHandler;\n  }\n\n  /**\n    * get the instance's width\n    * @readonly\n    * @type {Integer}\n  */\n  get width() {\n    return this._width;\n  }\n\n  /* ******\n  * setters\n  ********/\n\n  /**\n    * set the fill color of the context.\n    * @param {String} str - new value for fillStyle\n    * @type {String}\n  */\n  set fillStyle(str) {\n    this._context.fillStyle = str;\n  }\n\n  /**\n    * set the globalCompositeOperation of the context.\n    * @param {String} str - new value for globalCompositeOperation\n    * @type {String}\n  */\n  set globalCompositeOperation(str) {\n    this._context.globalCompositeOperation = str;\n  }\n\n  /**\n    * set the alpha the context.\n    * @param {Float} num - new value for globalAlpha\n    * @type {Float}\n  */\n  set globalAlpha(num) {\n    this._context.globalAlpha = num;\n  }\n\n  /**\n    * set the stroke width of the context.\n    * @param {Float} num - new value for lineWidth\n    * @type {Float}\n  */\n  set lineWidth(num) {\n    this._context.lineWidth = num;\n  }\n\n  /**\n    * sets the stroke color of the context.\n    * @param {String} str - new value for strokeStyle\n    * @type {String}\n  */\n  set strokeStyle(str) {\n    this._context.strokeStyle = str;\n  }\n\n  /* **************\n  * drawing methods\n  ****************/\n\n  /**\n    * draws an arc on the context\n    * @param {Float} x - center point's x position\n    * @param {Float} y - center point's y position\n    * @param {Float} radius - arc's radius\n    * @param {Float} [startAngle = 0] - angle to begin arc\n    * @param {Float} [endAngle = Math.PI * 2] - angle to end arc\n    * @param {Boolean} [anticlockwise = false] - draws anticlockwise if true\n    * @returns {void}\n  */\n  arc = (x, y, radius, startAngle = 0, endAngle = Math.PI * 2, anticlockwise = false) => {\n    this._context.arc(x, y, radius, startAngle, endAngle, anticlockwise);\n  }\n\n  /**\n    * begins a drawing path on the context\n    * @returns {void}\n  */\n  beginPath = () => {\n    this._context.beginPath();\n  }\n\n  /**\n    * draws an bezier curve on the context\n    * @returns {void}\n  */\n  bezierCurveTo = (...args) => {\n    this._context.bezierCurveTo(...args);\n  }\n\n  /**\n    * clears a rectangle on the context. also nulls the _imageDataHandler value if one exists.\n    * @param {Float} [x = 0] - rectangle's x position\n    * @param {Float} [y = 0] - rectangle's y position\n    * @param {Float} [width = this.width] - rectangle's width\n    * @param {Float} [height = this.height] - rectangle's height\n    * @returns {void}\n  */\n  clearRect = (x = 0, y = 0, width = this.width, height = this.height) => {\n    this._context.clearRect(x, y, width, height);\n    this._imageDataHandler = null;\n  }\n\n  /**\n    * creates a clipping path on the context for future drawing calls.\n    * @returns {void}\n  */\n  clip = (...args) => {\n    this._context.clip(...args);\n  }\n\n  /**\n    * closes a path on the context\n    * @returns {void}\n  */\n  closePath = () => {\n    this._context.closePath();\n  }\n\n  // eslint-disable valid-jsdoc\n  /**\n    * draws an Image or canvas element into the context. also nulls the _imageDataHandler value if one exists.\n    * method overloading to reflect CanvasRenderingContext2D.drawImage.\n    * @param {Canvas|Image|HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} source - where to take pixels from\n    * @param {Float} [dx = 0] - x coordinate of source's destination\n    * @param {Float} [dy = 0] - y coordinate of source's destination\n    * @param {Float} [dWidth = image.width] - width of destination\n    * @param {Float} [dHeight = image.height] - height of destination\n    * @returns {void}\n  */\n  /**\n    * draws an Image or canvas element into the context. also nulls the _imageDataHandler value if one exists.\n    * method overloading to reflect CanvasRenderingContext2D.drawImage.\n    * @param {Canvas|Image|HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} source - where to take pixels from\n    * @param {Float} sx - x coordinate of where to pull from source\n    * @param {Float} sy - y coordinate of where to pull from source\n    * @param {Float} sWidth - width of area to pull from source\n    * @param {Float} sHeight - height of area to pull from source\n    * @param {Float} dx - x coordinate of source's destination\n    * @param {Float} dy - y coordinate of source's destination\n    * @param {Float} dWidth - width of destination\n    * @param {Float} dHeight - height of destination\n    * @returns {void}\n  */\n  drawImage = (source, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight) => { // eslint-disable-line max-params\n    // sx, sy, sWidth, sHeight on images do not get scaled against devicePixelRatio\n    const hasSource = typeof dx === 'number';\n    const isCanvas = source instanceof Canvas;\n    if (hasSource) {\n      if (isCanvas) {\n        sx *= this._devicePixelRatio;\n        sy *= this._devicePixelRatio;\n        sWidth *= this._devicePixelRatio;\n        sHeight *= this._devicePixelRatio;\n        this._context.drawImage(source.element, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);\n      } else {\n        this._context.drawImage(source, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);\n      }\n    } else if (isCanvas) {\n      sWidth = sWidth || source.width;\n      sHeight = sHeight || source.height;\n      this._drawImageDest(source.element, sx, sy, sWidth, sHeight);\n    } else {\n      this._drawImageDest(source, sx, sy, sWidth, sHeight);\n    }\n    this._imageDataHandler = null;\n  }\n  // eslint-enable valid-jsdoc\n\n  _drawImageDest = (source, dx = 0, dy = 0, dWidth = source.width, dHeight = source.height) => {\n    this._context.drawImage(source, dx, dy, dWidth, dHeight);\n  }\n\n  /**\n    * fills a path on the context. also nulls the _imageDataHandler value if one exists.\n    * @returns {void}\n  */\n  fill = (...args) => {\n    this._context.fill(...args);\n    this._imageDataHandler = null;\n  }\n\n  /**\n    * draws a filled rectangle on the context. also nulls the _imageDataHandler value if one exists.\n    * @param {Float} [x = 0] - rectangle's x position\n    * @param {Float} [y = 0] - rectangle's y position\n    * @param {Float} [width = this.width] - rectangle's width\n    * @param {Float} [height = this.height] - rectangle's height\n    * @returns {void}\n  */\n  fillRect = (x = 0, y = 0, width = this.width, height = this.height) => {\n    this._context.fillRect(x, y, width, height);\n    this._imageDataHandler = null;\n  }\n\n  /**\n    * draws a line to a point on the context.\n    * @returns {void}\n  */\n  lineTo = (...args) => {\n    this._context.lineTo(...args);\n  }\n\n  /**\n    * moves to a point on the context.\n    * @returns {void}\n  */\n  moveTo = (...args) => {\n    this._context.moveTo(...args);\n  }\n\n  /**\n    * draws a quadratic curve to a point on the context.\n    * @returns {void}\n  */\n  quadraticCurveTo = (...args) => {\n    this._context.quadraticCurveTo(...args);\n  }\n\n  /**\n    * draws a rectangle on the context.\n    * @param {Float} [x = 0] - rectangle's x position\n    * @param {Float} [y = 0] - rectangle's y position\n    * @param {Float} [width = this.width] - rectangle's width\n    * @param {Float} [height = this.height] - rectangle's height\n    * @returns {void}\n  */\n  rect = (x = 0, y = 0, width = this.width, height = this.height) => {\n    this._context.rect(x, y, width, height);\n  }\n\n  // scale: no scale method! use resize instead!\n\n  /**\n    * strokes the context's current path.\n    * @returns {void}\n  */\n  stroke = (...args) => {\n    this._context.stroke(...args);\n    this._imageDataHandler = null;\n  }\n\n  /* *********************\n  * transformation methods\n  ***********************/\n\n  /**\n    * resets all transforms on the context to zero.\n    * @returns {void}\n  */\n  resetTransform = () => {\n    this._context.resetTransform();\n    // if canvas was scaled it would otherwise be undone\n    this._context.scale(this._devicePixelRatio, this._devicePixelRatio);\n  }\n\n  /**\n    * restores context to a saved state of popped off of a stack.\n    * @returns {void}\n  */\n  restore = () => {\n    this._context.restore();\n  }\n\n  /**\n    * cumulatively rotates the context around x/y coordinates.\n    * @param {Float} angle - amount to rotate\n    * @param {Float} [x = this.width / 2] - center x position\n    * @param {Float} [y = this.height / 2] - center y position\n    * @returns {void}\n  */\n  rotate = (angle, x = 0.5 * this.width, y = 0.5 * this.height) => {\n    if (!angle) {\n      return;\n    }\n    rotate(angle, x, y, this._context, this._context.transform);\n  }\n\n  /**\n    * pushes a saved state of the curent context onto a stack.\n    * @returns {void}\n  */\n  save = () => {\n    this._context.save();\n  }\n\n  /**\n    * resets the context's rotation to a new amount around x/y coordinates.\n    * @param {Float} angle - amount to rotate\n    * @param {Float} [x = this.width / 2] - center x position\n    * @param {Float} [y = this.height / 2] - center y position\n    * @returns {void}\n  */\n  setRotate = (angle, x = 0.5 * this.width, y = 0.5 * this.height) => {\n    rotate(angle, x, y, this._context, this.setTransform);\n  }\n\n  /**\n    * resets the context's transform to new values.\n    * @param {Float} xScale - horizontal scale\n    * @param {Float} xSkew - horizontal skew\n    * @param {Float} ySkew - verical skew\n    * @param {Float} yScale - vertical movement\n    * @param {Float} dx - horizontal movement\n    * @param {Float} dy - vertical movement\n    * @returns {void}\n  */\n  setTransform = (xScale, xSkew, ySkew, yScale, dx, dy) => {\n    xScale *= this._devicePixelRatio;\n    xSkew *= this._devicePixelRatio;\n    ySkew *= this._devicePixelRatio;\n    yScale *= this._devicePixelRatio;\n    dx *= this._devicePixelRatio;\n    dy *= this._devicePixelRatio;\n    this._context.setTransform(xScale, xSkew, ySkew, yScale, dx, dy);\n  }\n\n  /**\n    * sets the context's grid to coordinates.\n    * @param {Float} dx - horizontal movement\n    * @param {Float} dy - vertical movement\n    * @returns {void}\n  */\n  setTranslate = (dx, dy) => {\n    this.setTransform(1, 0, 0, 1, dx, dy);\n  }\n\n  /**\n    * cumulatively moves the context's grid by coordinates.\n    * @param {Float} dx - horizontal movement\n    * @param {Float} dy - vertical movement\n    * @returns {void}\n  */\n  translate = (dx, dy) => {\n    this._context.translate(dx, dy);\n  }\n\n  /* ***********\n  * misc methods\n  *************/\n\n  // eslint-disable valid-jsdoc\n  /**\n    * creates a blank ImageData based on provided width/height.\n    * method overloading to reflect CanvasRenderingContext2D.createImageData.\n    * @param {Number} width - a width amount\n    * @param {Number} height - a height amount\n    * @returns {void}\n  */\n  /**\n    * creates a blank ImageData based on a provided ImageData's dimensions.\n    * method overloading to reflect CanvasRenderingContext2D.createImageData.\n    * @param {ImageData} imageData - an existing ImageData instance\n    * @returns {void}\n  */\n  // eslint-enable valid-jsdoc\n  createImageData = (imageDataOrWidth, height) => {\n    return this._context.createImageData(imageDataOrWidth, height);\n  }\n\n  /* *************\n  * static methods\n  ***************/\n\n  /**\n    * returns Path2D of a path approximately through an array of points.\n    * @param {Array} points - array of points\n    * @param {Path2D} [path = new Path2D()] - Path2D instance to add instructions to\n    * @returns {void}\n  */\n  static quadraticThrough(points, path = new Path2D()) {\n    const { length } = points;\n    let lastPoint;\n    let nextPoint;\n    for (let i = 0; i < length - 1; i++) {\n      lastPoint = nextPoint || points[0];\n      nextPoint = points[i + 1];\n      if (i === 0) {\n        path.moveTo(lastPoint.x, lastPoint.y);\n      } else if (i < length - 2) {\n        const avgX = (lastPoint.x + nextPoint.x) / 2;\n        const avgY = (lastPoint.y + nextPoint.y) / 2;\n        path.quadraticCurveTo(lastPoint.x, lastPoint.y, avgX, avgY);\n      } else {\n        path.quadraticCurveTo(lastPoint.x, lastPoint.y, nextPoint.x, nextPoint.y);\n      }\n    }\n    return path;\n  }\n}\n","import styles from './Display.module.scss';\nimport classnames from 'classnames';\nimport React from 'react';\nimport Canvas from './canvas';\nimport {modulo} from '@danehansen/math';\nimport convertIndexToRadians from '../../util/convertIndexToRadians';\nimport findInterval from '../../util/findInterval';\n\nexport default class Display extends React.Component {\n  state = {}\n\n  constructor(props) {\n    super(props);\n    this._rootNode = React.createRef();\n  }\n\n  componentDidMount() {\n    const {current} = this._rootNode;\n    const {diameter} = this.props;\n    this._root = new Canvas(current);\n    this._root.globalCompositeOperation = 'copy';\n    this._buffer = new Canvas(undefined, diameter, diameter);\n\n    this._drawSlices();\n    this._root.drawImage(this._buffer);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) {\n      this._buffer.clearRect();\n      this._drawSlices();\n      this._connectPitches();\n      this._root.drawImage(this._buffer);\n    }\n  }\n\n  render() {\n    const {className} = this.props;\n    return <canvas className={classnames(styles.root, className)} ref={this._rootNode} />;\n  }\n\n  _drawSlices() {\n    const {activePitches, layoutIncrement, semitones, rootPitch, diameter} = this.props;\n\n    const colors = findColors(semitones);\n    for (let i = 0; i < rootPitch; i++) {\n      colors.unshift(colors.pop());\n    }\n\n    for (let i = 0; i < semitones; i++) {\n      const pitch = i;\n      const radians = convertIndexToRadians(pitch, semitones, rootPitch, layoutIncrement);\n      const color = colors[i];\n      const isActive = activePitches.indexOf(pitch) >= 0;\n      fillSlice(this._buffer, color, pitch, semitones, rootPitch, layoutIncrement, diameter, isActive ? 1 : 0.95, isActive ? 0.12 : 0.1);\n    }\n  }\n\n  _connectPitches() {\n    const {activePitches, semitones, rootPitch, layoutIncrement, diameter} = this.props;\n    for (let i = 0; i < activePitches.length; i++) {\n      const pitchA = activePitches[i];\n      for (let j = i; j < activePitches.length; j++) {\n        const pitchB = activePitches[j];\n        connectPitches(pitchA, pitchB, semitones, rootPitch, layoutIncrement, diameter, this._buffer, 0.4);\n      }\n    }\n  }\n}\n\nfunction fillSlice(canvas, color, pitch, semitones, rootPitch, layoutIncrement, diameter, outerRadius, holeRadius) {\n  const center = diameter / 2;\n  const halfSlice = Math.PI / semitones;\n  let radians = convertIndexToRadians(pitch, semitones, rootPitch, layoutIncrement);\n\n  // this is the edge of slice on the clockwise side\n  // canvas.moveTo(center, center);\n  let cos = Math.cos(radians - halfSlice);\n  let sin = Math.sin(radians - halfSlice);\n  canvas.beginPath();\n  canvas.fillStyle = color;\n  canvas.moveTo(center + cos * center * holeRadius, center + sin * -center * holeRadius);\n  canvas.lineTo(center + cos * center * outerRadius, center + sin * -center * outerRadius);\n\n  // outer arc\n  cos = Math.cos(radians);\n  sin = Math.sin(radians);\n  const newAngle = Math.atan2(-sin, cos)\n  let startAngle = newAngle + halfSlice;\n  let endAngle = newAngle - halfSlice;\n  canvas.arc(center, center, center * outerRadius, startAngle, endAngle, true);\n\n  // this is the edge of slice on the anticlockwise side\n  cos = Math.cos(radians + halfSlice);\n  sin = Math.sin(radians + halfSlice);\n  canvas.moveTo(center + cos * center * outerRadius, center + sin * -center * outerRadius);\n  canvas.lineTo(center + cos * center * holeRadius, center + sin * -center * holeRadius);\n\n  // inner arc\n  cos = Math.cos(radians);\n  sin = Math.sin(radians);\n  startAngle = newAngle - halfSlice;\n  endAngle = newAngle + halfSlice;\n  canvas.arc(center, center, center * holeRadius, startAngle, endAngle, false);\n\n  canvas.fill();\n}\n\nfunction findColors(semitones) {\n  const colors = [];\n  const buttonSlice = Math.PI * 2 / semitones;\n  for(let i = 0; i < semitones; i++) {\n    colors.push(directionalColor(i * buttonSlice));\n  }\n  return colors;\n}\n\nfunction directionalColor(direction) {\n  const colorSlice = Math.PI * 2 / 3;\n  const cosR = Math.cos(direction);\n  const sinR = Math.sin(direction);\n  const cosG = Math.cos(direction - colorSlice);\n  const sinG = Math.sin(direction - colorSlice);\n  const cosB = Math.cos(direction + colorSlice);\n  const sinB = Math.sin(direction + colorSlice);\n\n  const r = Math.round(cosR * 255 * 0.5 + 255 * 0.5);\n  const g = Math.round(cosG * 255 * 0.5 + 255 * 0.5);\n  const b = Math.round(cosB * 255 * 0.5 + 255 * 0.5);\n\n  return `rgb(${r}, ${g}, ${b})`;\n}\n\nfunction connectPitches(pitchA, pitchB, semitones, rootPitch, layoutIncrement, diameter, canvas, radius) {\n  const center = diameter / 2;\n\n  const radianA = convertIndexToRadians(pitchA, semitones, rootPitch, layoutIncrement);\n  const cosA = Math.cos(radianA);\n  const sinA = Math.sin(-radianA);\n\n  const radianB = convertIndexToRadians(pitchB, semitones, rootPitch, layoutIncrement);\n  const cosB = Math.cos(radianB);\n  const sinB = Math.sin(-radianB);\n\n  const pointA = {\n    x: center + cosA * center * radius,\n    y: center + sinA * center * radius,\n  };\n\n  const pointB = {\n    x: center + cosB * center * radius,\n    y: center + sinB * center * radius,\n  };\n\n  const interval = findInterval(pitchA, pitchB, semitones);\n  if (interval) {\n    canvas.strokeStyle = \"white\";\n    canvas.lineWidth = 1;\n    canvas.globalCompositeOperation = \"color\";\n    const xDiff = pointB.x - pointA.x;\n    const yDiff = pointB.y - pointA.y;\n    const diff = Math.sqrt(Math.pow(xDiff, 2) + Math.pow(yDiff, 2));\n    const radiusA = diff / interval.a / 2;\n    const radiusB = diff / interval.b / 2;\n\n    for (let i = 0; i < interval.a; i++) {\n      canvas.beginPath();\n      const centerX = pointA.x + xDiff / interval.a * (i + 0.5);\n      const centerY = pointA.y + yDiff / interval.a * (i + 0.5);\n      canvas.arc(centerX, centerY, radiusA, 0, Math.PI * 2);\n      canvas.stroke();\n    }\n\n    for (let i = 0; i < interval.b; i++) {\n      canvas.beginPath();\n      const centerX = pointA.x + xDiff / interval.b * (i + 0.5);\n      const centerY = pointA.y + yDiff / interval.b * (i + 0.5);\n      canvas.arc(centerX, centerY, radiusB, 0, Math.PI * 2);\n      canvas.stroke();\n    }\n  }\n\n  canvas.globalCompositeOperation = \"source-over\";\n  canvas.strokeStyle = \"white\";\n  canvas.lineWidth = 4;\n  canvas.beginPath();\n  canvas.moveTo(pointA.x, pointA.y);\n  canvas.lineTo(pointB.x, pointB.y);\n  canvas.stroke();\n}\n","export default function(pitchA, pitchB, semitones) {\n  if (semitones === 12) {\n    switch(pitchA - pitchB) {\n      case 1:\n        return {a: 16, b: 15};\n      case 2:\n        return {a: 9, b: 8};\n      case 3:\n        return {a: 6, b: 5};\n      case 4:\n        return {a: 5, b: 4};\n      case 5:\n        return {a: 4, b: 3};\n      case 6:\n        return {a: 7, b: 5};\n      case 7:\n        return {a: 3, b: 2};\n      case 8:\n        return {a: 8, b: 5};\n      case 9:\n        return {a: 5, b: 3};\n      case 10:\n        return {a: 16, b: 9};\n      case 11:\n        return {a: 15, b: 8};\n    }\n\n    switch(pitchB - pitchA) {\n      case 1:\n        return {a: 15, b: 16};\n      case 2:\n        return {a: 8, b: 9};\n      case 3:\n        return {a: 5, b: 6};\n      case 4:\n        return {a: 4, b: 5};\n      case 5:\n        return {a: 3, b: 4};\n      case 6:\n        return {a: 5, b: 7};\n      case 7:\n        return {a: 2, b: 3};\n      case 8:\n        return {a: 5, b: 8};\n      case 9:\n        return {a: 3, b: 5};\n      case 10:\n        return {a: 9, b: 16};\n      case 11:\n        return {a: 8, b: 15};\n    }\n  }\n}\n","let frequencies;\nlet currentOscillators;\nlet audioCtx;\nlet gainNode;\n\nexport function initializaAudio(semitones, a4, minFreq, maxFreq) {\n  if (audioCtx) {\n    audioCtx.close();\n  }\n  audioCtx = new (window.AudioContext || window.webkitAudioContext)();\n  gainNode = audioCtx.createGain();\n\n  gainNode.connect(audioCtx.destination);\n\n  // TODO: figure out this gain value\n  gainNode.gain.value = 0.1;\n\n  currentOscillators = [];\n  frequencies = [];\n  for(let i = 0; i < semitones; i++) {\n    frequencies[i] = findFrequencies(i, a4, minFreq, maxFreq, semitones)\n  }\n}\n\nfunction findFrequencies(distance, a4, minFreq, maxFreq, semitones) {\n  let lowestFrequency = a4 * Math.pow(Math.pow(2, 1 / semitones), distance);\n\n  while(lowestFrequency >= minFreq) {\n    lowestFrequency /= 2;\n  }\n  lowestFrequency *= 2;\n\n  const frequencies = [];\n  for (let currentFrequency = lowestFrequency; currentFrequency <= maxFreq; currentFrequency *= 2) {\n    frequencies.push(currentFrequency);\n  }\n  return frequencies;\n}\n\nfunction startNote(index, type) {\n  const oscillators = [];\n  currentOscillators[index] = oscillators;\n  for(const frequency of frequencies[index]) {\n    const oscillator = audioCtx.createOscillator();\n    oscillator.frequency.value = frequency;\n    oscillator.type = type;\n    oscillator.connect(gainNode);\n    oscillator.start();\n    oscillators.push(oscillator);\n  }\n}\n\nfunction stopNote(index) {\n  for(const oscillator of currentOscillators[index]) {\n    oscillator.stop();\n  }\n  currentOscillators[index] = null;\n}\n\nexport function toggleNote(note, isPlaying, type) {\n  if (isPlaying && !currentOscillators[note]) {\n    startNote(note, type);\n  } else if (!isPlaying && currentOscillators[note]) {\n    stopNote(note);\n  }\n}\n","import styles from './App.module.scss';\nimport Menu from './Menu/Menu';\nimport {useState} from 'react';\nimport {MIN_FREQ, MAX_FREQ, TEMPERMENT_TYPES, OSCILLATOR_TYPES} from '../constants';\nimport findIncrementOptions from '../util/findIncrementOptions';\nimport ResizeListener from './ResizeListener/ResizeListener';\nimport Label from './Label/Label';\nimport TouchPad from './TouchPad/TouchPad';\nimport Display from './Display/Display';\nimport {initializaAudio, toggleNote} from '../util/shepardTone'\n\nexport default function App() {\n  let [isMenuOpen, setMenuOpen] = useState(false);\n  let [a4, setA4] = useState(440);\n  let [temperment, setTemperment] = useState(TEMPERMENT_TYPES.EQUAL);\n  let [oscillator, setOscillator] = useState(OSCILLATOR_TYPES.SINE);\n  let [rootPitch, setRootPitch] = useState(3);\n\n  let [minFreq, setMinFreq] = useState(MIN_FREQ);\n  let [maxFreq, setMaxFreq] = useState(MAX_FREQ);\n  function changeMinFreq(num) {\n    if (num >= maxFreq) {\n      setMaxFreq(num + 1);\n    }\n    setMinFreq(num);\n  }\n  function changeMaxFreq(num) {\n    if (num <= minFreq) {\n      setMinFreq(num - 1);\n    }\n    setMaxFreq(num);\n  }\n\n  let [semitones, setSemitones] = useState(12);\n  function changeSemitones(num) {\n    const incrementOptions = findIncrementOptions(num);\n    if (incrementOptions.indexOf(layoutIncrement) >= 0) {\n      setLayoutIncrement(1);\n    }\n    if (temperment !== TEMPERMENT_TYPES.EQUAL) {\n      setTemperment(TEMPERMENT_TYPES.EQUAL);\n    }\n    setSemitones(num);\n  }\n\n  let [layoutIncrement, setLayoutIncrement] = useState(1);\n  function changeLayoutIncrement(num) {\n    setLayoutIncrement(num);\n  }\n\n\n  let [hasInitializedAudio, setHasInitializedAudio] = useState(false);\n  function onInitialClick() {\n    initializaAudio(semitones, a4, minFreq, maxFreq);\n    setHasInitializedAudio(true);\n  }\n\n  function onMenuButtonClick() {\n    if (isMenuOpen) {\n      initializaAudio(semitones, a4, minFreq, maxFreq);\n    }\n    setMenuOpen(!isMenuOpen);\n  }\n\n  let [activePitches, setActivePitches] = useState([]);\n\n  function onTouchCallback(pitches) {\n    for(let i = 0; i < semitones; i++) {\n      if (pitches.indexOf(i) >= 0) {\n        toggleNote(i, true, oscillator)\n      } else {\n        toggleNote(i, false, oscillator)\n      }\n    }\n    setActivePitches(pitches);\n  }\n\n  return (\n    <div className={styles.root} onClick={hasInitializedAudio ? null : onInitialClick}>\n      <div className={styles.contentHolder}>\n      </div>\n      <ResizeListener>\n        {function(innerWidth, innerHeight) {\n          const smallest = Math.min(innerWidth, innerHeight);\n          return <div className={styles.wheelHolder} style={{width: `${smallest}px`, height: `${smallest}px`}}>\n            <Display\n              diameter={smallest}\n              semitones={semitones}\n              layoutIncrement={layoutIncrement}\n              activePitches={activePitches}\n              rootPitch={rootPitch}\n              diameter={smallest}\n            />\n            <Label\n              layoutIncrement={layoutIncrement}\n              rootPitch={rootPitch}\n              semitones={semitones}\n            />\n            {hasInitializedAudio && <TouchPad\n              callback={onTouchCallback}\n              semitones={semitones}\n              diameter={smallest}\n              layoutIncrement={layoutIncrement}\n              rootPitch={rootPitch}\n            />}\n          </div>\n        }}\n      </ResizeListener>\n\n      {isMenuOpen && <div className={styles.menuHolder}><Menu\n        minFreq={minFreq}\n        maxFreq={maxFreq}\n        setMinFreq={changeMinFreq}\n        setMaxFreq={changeMaxFreq}\n        a4={a4}\n        setA4={setA4}\n        temperment={temperment}\n        setTemperment={setTemperment}\n        oscillator={oscillator}\n        setOscillator={setOscillator}\n        semitones={semitones}\n        setSemitones={changeSemitones}\n        rootPitch={rootPitch}\n        setRootPitch={setRootPitch}\n        layoutIncrement={layoutIncrement}\n        setLayoutIncrement={changeLayoutIncrement}\n      /></div>}\n\n      <button className={styles.menuButton} onClick={onMenuButtonClick}>{isMenuOpen ? 'close menu' : 'open menu'}</button>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/reset.module.scss';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__nWMuC\",\"menuHolder\":\"App_menuHolder__243kY\",\"menuButton\":\"App_menuButton__3IBp4\",\"contentHolder\":\"App_contentHolder__3Zpi7\",\"wheelHolder\":\"App_wheelHolder__1I76D\"};"],"sourceRoot":""}