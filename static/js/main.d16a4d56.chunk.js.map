{"version":3,"sources":["App/Menu/Menu.module.scss","App/App.module.scss","App/PitchLabel/PitchLabel.module.scss","App/ChordLabel/ChordLabel.module.scss","App/Display/Display.module.scss","App/TouchPad/TouchPad.module.scss","constants.js","util/findPitchSkipOptions.js","util/findPitchNames.js","util/transposeFrequency.js","util/findBaseFrequencies.js","util/findPitchSequence.js","util/findChordNames.js","util/sortPitchNames.js","App/Display/canvas.js","util/math.js","util/findInterval.js","App/Display/Display.js","App/Menu/Menu.js","App/PitchLabel/PitchLabel.js","App/ChordLabel/ChordLabel.js","App/TouchPad/TouchPad.js","App/ResizeListener/ResizeListener.js","util/shepardTone.js","App/App.js","reportWebVitals.js","index.js"],"names":["module","exports","MAX_FREQ","PITCH_NAMES","CHORD_NAMES","OSCILLATOR_TYPES","semitones","increments","i","findIncrementsOfSemitone","push","increment","Array","keys","semitoneIndexes","semitoneIndex","undefined","transposition","map","nameIndexFloat","nameIndex","Math","floor","prefix","remainder","String","round","slice","frequency","pow","rootFrequency","frequencies","transposeFrequency","pitchSkip","sequence","length","pitchNames","pitchName","index","rotate","angle","x","y","ctx","func","cos","sin","dx","dy","call","Canvas","element","document","createElement","width","offsetWidth","height","offsetHeight","devicePixelRatio","window","resize","isMounted","_element","parentNode","_width","_height","_devicePixelRatio","_imageDataHandler","_context","scale","arc","radius","startAngle","endAngle","PI","anticlockwise","beginPath","bezierCurveTo","clearRect","clip","closePath","drawImage","source","sx","sy","sWidth","sHeight","dWidth","dHeight","isCanvas","_drawImageDest","fill","fillRect","lineTo","moveTo","quadraticCurveTo","rect","stroke","resetTransform","restore","transform","save","setRotate","setTransform","xScale","xSkew","ySkew","yScale","setTranslate","translate","createImageData","imageDataOrWidth","this","getContext","str","fillStyle","globalCompositeOperation","num","globalAlpha","lineWidth","strokeStyle","points","lastPoint","nextPoint","path","Path2D","avgX","avgY","toRadianDirection","degrees","radians","toRadians","circ","offset","modulo","toDegreeDirection","toDegrees","findDifference","a","b","abs","flipRadiansVertically","atan2","Display","props","_rootNode","React","createRef","current","diameter","_root","_buffer","_drawSlices","prevProps","prevState","_connectPitches","className","classnames","styles","root","ref","activePitches","pitchSequence","halfSlice","colors","findColors","color","isActive","indexOf","fillSlice","baseFrequencies","pitchA","degreesA","frequencyA","j","pitchB","degreesB","frequencyB","connectPitches","Component","canvas","startRadians","endRadians","outerRadius","holeRadius","center","buttonSlice","directionalColor","direction","colorSlice","cosR","cosG","cosB","r","g","radianA","radianB","colorA","colorB","pointA","pointB","interval","fRoot","fComparison","numerators","denominators","lowestDifference","lowestDifferenceNumerator","lowestDifferenceDenominator","difference","difference2","findInterval","xDiff","yDiff","diff","sqrt","radiusA","radiusB","centerX","centerY","findIncrementLabel","Menu","a4","setA4","oscillator","setOscillator","setPitchSkip","setSemitones","setTransposition","pitchSkipOptions","onOscillatorChange","value","target","property","title","label","input","type","checked","onChange","labelText","min","max","step","parseInt","name","PitchLabel","pitchNamesSorted","transformOrigin","isSmall","button","small","style","ChordLabel","chordNamesSorted","TouchPad","callback","rootNode","useRef","anyTouch","evt","targetTouches","getBoundingClientRect","pitches","clientX","clientY","onTouchMove","onTouchStart","onTouchEnd","onTouchCancel","ResizeListener","_onResize","win","setState","innerHeight","innerWidth","state","addEventListener","removeEventListener","children","defaultProps","currentOscillators","audioCtx","gainNode","initializaAudio","close","AudioContext","webkitAudioContext","createGain","connect","destination","gain","findAudibleOctaves","toggleNote","note","isPlaying","oscillators","createOscillator","start","startNote","stop","stopNote","App","useState","findPitchNames","setPitchNames","useEffect","findPitchSkipOptions","setPitchSkipOptions","setRootFrequency","findBaseFrequencies","setBaseFrequencies","findPitchSequence","setPitchSequence","sortPitchNames","setPitchNamesSorted","findChordNames","setChordNamesSorted","setActivePitches","hasInitializedAudio","setHasInitializedAudio","isMenuOpen","setMenuOpen","onTouchCallback","onClick","contentHolder","smallest","wheelHolder","menuHolder","menuButton","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d16a4d56.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Menu_root__3QA5H\",\"property\":\"Menu_property__qoOWz\",\"columns\":\"Menu_columns__3o8dK\",\"title\":\"Menu_title__tE_9H\",\"label\":\"Menu_label__3hKMT\",\"labelText\":\"Menu_labelText__2uoMn\",\"input\":\"Menu_input__17q9X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__nWMuC\",\"menuHolder\":\"App_menuHolder__243kY\",\"menuButton\":\"App_menuButton__3IBp4\",\"contentHolder\":\"App_contentHolder__3Zpi7\",\"wheelHolder\":\"App_wheelHolder__1I76D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PitchLabel_root__3-xxj\",\"button\":\"PitchLabel_button__29U3k\",\"small\":\"PitchLabel_small__3x-Zk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ChordLabel_root__U_GCi\",\"button\":\"ChordLabel_button__3bTYZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Display_root__ig8ld\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TouchPad_root__22wzt\"};","export const MIN_FREQ = 20;\nexport const MAX_FREQ = 20000;\nexport const DEFAULT_SEMITONES = 12;\nexport const PITCH_NAMES = ['A', 'A♯/B♭', 'B', 'C', 'C♯/D♭', 'D', 'D♯/E♭', 'E', 'F', 'F♯/G♭', 'G', 'G♯/A♭'];\nexport const CHORD_NAMES = ['I', null, 'ii', null, 'iii', 'IV', null, 'V', null, 'vi', null, 'viiº'];\nexport const MODES = ['ionian (major)', null, 'dorian', null, 'phrygian', 'lydian', null, 'mixolydian', null, 'aeolian (minor)', null, 'locrian'];\n\nexport const OSCILLATOR_TYPES = {\n  SINE: 'sine',\n  SQUARE: 'square',\n  SAWTOOTH: 'sawtooth',\n  TRIANGLE: 'triangle',\n};\n\nexport const TEMPERMENT_TYPES = {\n  EQUAL: 'equal',\n  JUST: 'just',\n  MEANTONE: 'meantone',\n  PYTHAGOREAN: 'pythagorean',\n};\n","export default function(semitones) {\n  const increments = [];\n  for(let i = 1; i < semitones; i++) {\n    if (findIncrementsOfSemitone(semitones, i)) {\n      increments.push(i);\n    }\n  }\n  return increments;\n}\n\nfunction findIncrementsOfSemitone(semitones, increment) {\n  const allSemitones = [...Array(semitones).keys()];\n  const semitoneIndexes = [];\n  for(let i = 0; i < semitones; i++) {\n    const semitoneIndex = (i * increment) % semitones;\n    if (semitoneIndexes[semitoneIndex] !== undefined) {\n      return false;\n    } else {\n      semitoneIndexes[semitoneIndex] = semitoneIndex;\n    }\n  }\n  return semitoneIndexes;\n}\n","import {round} from '@danehansen/math';\nimport {PITCH_NAMES, DEFAULT_SEMITONES} from '../constants';\n\nexport default function(semitones, transposition) {\n  return [...Array(semitones).keys()].map(function(i) {\n    const nameIndexFloat = (i / semitones * DEFAULT_SEMITONES + transposition) % DEFAULT_SEMITONES;\n    const nameIndex = Math.floor(nameIndexFloat);\n    const prefix = PITCH_NAMES[nameIndex];\n    const remainder = nameIndexFloat % 1;\n    if (!remainder) {\n      return prefix;\n    }\n    return `${prefix}${String(round(remainder, 0.001)).slice(1,5)}`;\n  })\n}\n","export default function(frequency, transposition, semitones) {\n  return frequency * Math.pow(Math.pow(2, 1 / semitones), transposition);\n}\n","import transposeFrequency from './transposeFrequency';\nimport {MIN_FREQ} from '../constants';\n\nexport default function(semitones, rootFrequency) {\n  const frequencies = [];\n  for (let i = 0; i < semitones; i++) {\n    let frequency = transposeFrequency(rootFrequency, i, semitones);\n    while(frequency / 2 > MIN_FREQ) {\n      frequency /= 2;\n    }\n    frequencies.push(frequency);\n  }\n  return frequencies;\n}\n","export default function(semitones, pitchSkip) {\n  const sequence = []\n  for (let i = 0; i < semitones; i++) {\n    sequence.push((i * pitchSkip) % semitones);\n  }\n  return sequence;\n}\n","import {CHORD_NAMES} from '../constants';\n\nexport default function(semitones) {\n  return [...Array(semitones).keys()].map(function(i) {\n    const {length} = CHORD_NAMES;\n    const nameIndex = (i / semitones * length) % length;\n    if (!(nameIndex % 1)) {\n      return CHORD_NAMES[nameIndex];\n    }\n    return null;\n  })\n}\n","export default function(pitchNames, pitchSkip) {\n  const sorted = pitchNames.map(function(pitchName, index) {\n    return pitchNames[(index * pitchSkip) % pitchNames.length];\n  })\n  return sorted;\n}\n","// import ImageDataHandler from './image-data-handler';\n\nfunction rotate(angle, x, y, ctx, func) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const dx = x - cos * x - sin * -y;\n  const dy = y - sin * x - cos * y;\n  func.call(ctx, cos, sin, -sin, cos, dx, dy);\n}\n\n/**\n* a helper for canvas manipulation, to store a reference to the element as well as it's context.\nalso adds some helpful method defaults. also has some drawing utilities.\n* @param {HTMLCanvasElement} [element = document.createElement('canvas')] - put HTMLCanvasElement if this is your\n* final render canvas\n* @param {Integer} [width = element.offsetWidth] - width of area\n* @param {Integer} [height = element.offsetHeight] - height of area\n* @param {Float} [devicePixelRatio = window.devicePixelRatio] - actual pixels to css pixel\n*/\nexport default class Canvas {\n  /* *******************\n  * initializing methods\n  *********************/\n\n  constructor(element = document.createElement('canvas'), width = element.offsetWidth, height = element.offsetHeight, devicePixelRatio = window.devicePixelRatio) { // eslint-disable-line max-len\n    this._element = element;\n    this._context = this._element.getContext('2d');\n    this.resize(width, height, devicePixelRatio);\n  }\n\n  /**\n    * sets width/height properties as well as scaling\n    * @param {Integer} [width = this.width] - width of area of canvas\n    * @param {Integer} [height = this.height] - height of area of canvas\n    * @param {Float} [devicePixelRatio = window.devicePixelRatio] - actual pixels to css pixel\n    * @returns {void}\n  */\n  // eslint-disable complexity\n  resize = (width, height, devicePixelRatio = window.devicePixelRatio) => {\n    // allow for case to call with no params when devicePixelRatio is changed\n    // allow for case to call with no params when dom element is resized\n    // otherwise width and height are defined\n    // this method will erase the canvas and reset any clipping, fillStyle, lineWidth, strokeStyle, etc...\n    if (!width || !height) {\n      const isMounted = !!this._element.parentNode;\n      width = isMounted ? this._element.offsetWidth : this._width;\n      height = isMounted ? this._element.offsetHeight : this._height;\n    }\n    this._devicePixelRatio = devicePixelRatio;\n    this._width = width;\n    this._height = height;\n    this._element.width = width * this._devicePixelRatio;\n    this._element.height = height * this._devicePixelRatio;\n    this._imageDataHandler = null;\n    this._context.scale(this._devicePixelRatio, this._devicePixelRatio);\n  }\n  // eslint-enable complexity\n\n  /* ******\n  * getters\n  ********/\n\n  /**\n    * get the instance's HTMLCanvasElement\n    * @readonly\n    * @type {HTMLCanvasElement}\n  */\n  get element() {\n    return this._element;\n  }\n\n  /**\n    * get the instance's height\n    * @readonly\n    * @type {Integer}\n  */\n  get height() {\n    return this._height;\n  }\n\n  /**\n    * get the instance's ImageDataHandler reflecting the current state\n    * @readonly\n    * @type {ImageDataHandler}\n  */\n  get imageDataHandler() {\n    if (!this._imageDataHandler) {\n      const width = this._width * this._devicePixelRatio;\n      const height = this._height * this._devicePixelRatio;\n      // this._imageDataHandler = new ImageDataHandler(this._context, 0, 0, width, height);\n    }\n    return this._imageDataHandler;\n  }\n\n  /**\n    * get the instance's width\n    * @readonly\n    * @type {Integer}\n  */\n  get width() {\n    return this._width;\n  }\n\n  /* ******\n  * setters\n  ********/\n\n  /**\n    * set the fill color of the context.\n    * @param {String} str - new value for fillStyle\n    * @type {String}\n  */\n  set fillStyle(str) {\n    this._context.fillStyle = str;\n  }\n\n  /**\n    * set the globalCompositeOperation of the context.\n    * @param {String} str - new value for globalCompositeOperation\n    * @type {String}\n  */\n  set globalCompositeOperation(str) {\n    this._context.globalCompositeOperation = str;\n  }\n\n  /**\n    * set the alpha the context.\n    * @param {Float} num - new value for globalAlpha\n    * @type {Float}\n  */\n  set globalAlpha(num) {\n    this._context.globalAlpha = num;\n  }\n\n  /**\n    * set the stroke width of the context.\n    * @param {Float} num - new value for lineWidth\n    * @type {Float}\n  */\n  set lineWidth(num) {\n    this._context.lineWidth = num;\n  }\n\n  /**\n    * sets the stroke color of the context.\n    * @param {String} str - new value for strokeStyle\n    * @type {String}\n  */\n  set strokeStyle(str) {\n    this._context.strokeStyle = str;\n  }\n\n  /* **************\n  * drawing methods\n  ****************/\n\n  /**\n    * draws an arc on the context\n    * @param {Float} x - center point's x position\n    * @param {Float} y - center point's y position\n    * @param {Float} radius - arc's radius\n    * @param {Float} [startAngle = 0] - angle to begin arc\n    * @param {Float} [endAngle = Math.PI * 2] - angle to end arc\n    * @param {Boolean} [anticlockwise = false] - draws anticlockwise if true\n    * @returns {void}\n  */\n  arc = (x, y, radius, startAngle = 0, endAngle = Math.PI * 2, anticlockwise = false) => {\n    this._context.arc(x, y, radius, startAngle, endAngle, anticlockwise);\n  }\n\n  /**\n    * begins a drawing path on the context\n    * @returns {void}\n  */\n  beginPath = () => {\n    this._context.beginPath();\n  }\n\n  /**\n    * draws an bezier curve on the context\n    * @returns {void}\n  */\n  bezierCurveTo = (...args) => {\n    this._context.bezierCurveTo(...args);\n  }\n\n  /**\n    * clears a rectangle on the context. also nulls the _imageDataHandler value if one exists.\n    * @param {Float} [x = 0] - rectangle's x position\n    * @param {Float} [y = 0] - rectangle's y position\n    * @param {Float} [width = this.width] - rectangle's width\n    * @param {Float} [height = this.height] - rectangle's height\n    * @returns {void}\n  */\n  clearRect = (x = 0, y = 0, width = this.width, height = this.height) => {\n    this._context.clearRect(x, y, width, height);\n    this._imageDataHandler = null;\n  }\n\n  /**\n    * creates a clipping path on the context for future drawing calls.\n    * @returns {void}\n  */\n  clip = (...args) => {\n    this._context.clip(...args);\n  }\n\n  /**\n    * closes a path on the context\n    * @returns {void}\n  */\n  closePath = () => {\n    this._context.closePath();\n  }\n\n  // eslint-disable valid-jsdoc\n  /**\n    * draws an Image or canvas element into the context. also nulls the _imageDataHandler value if one exists.\n    * method overloading to reflect CanvasRenderingContext2D.drawImage.\n    * @param {Canvas|Image|HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} source - where to take pixels from\n    * @param {Float} [dx = 0] - x coordinate of source's destination\n    * @param {Float} [dy = 0] - y coordinate of source's destination\n    * @param {Float} [dWidth = image.width] - width of destination\n    * @param {Float} [dHeight = image.height] - height of destination\n    * @returns {void}\n  */\n  /**\n    * draws an Image or canvas element into the context. also nulls the _imageDataHandler value if one exists.\n    * method overloading to reflect CanvasRenderingContext2D.drawImage.\n    * @param {Canvas|Image|HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} source - where to take pixels from\n    * @param {Float} sx - x coordinate of where to pull from source\n    * @param {Float} sy - y coordinate of where to pull from source\n    * @param {Float} sWidth - width of area to pull from source\n    * @param {Float} sHeight - height of area to pull from source\n    * @param {Float} dx - x coordinate of source's destination\n    * @param {Float} dy - y coordinate of source's destination\n    * @param {Float} dWidth - width of destination\n    * @param {Float} dHeight - height of destination\n    * @returns {void}\n  */\n  drawImage = (source, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight) => { // eslint-disable-line max-params\n    // sx, sy, sWidth, sHeight on images do not get scaled against devicePixelRatio\n    const hasSource = typeof dx === 'number';\n    const isCanvas = source instanceof Canvas;\n    if (hasSource) {\n      if (isCanvas) {\n        sx *= this._devicePixelRatio;\n        sy *= this._devicePixelRatio;\n        sWidth *= this._devicePixelRatio;\n        sHeight *= this._devicePixelRatio;\n        this._context.drawImage(source.element, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);\n      } else {\n        this._context.drawImage(source, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);\n      }\n    } else if (isCanvas) {\n      sWidth = sWidth || source.width;\n      sHeight = sHeight || source.height;\n      this._drawImageDest(source.element, sx, sy, sWidth, sHeight);\n    } else {\n      this._drawImageDest(source, sx, sy, sWidth, sHeight);\n    }\n    this._imageDataHandler = null;\n  }\n  // eslint-enable valid-jsdoc\n\n  _drawImageDest = (source, dx = 0, dy = 0, dWidth = source.width, dHeight = source.height) => {\n    this._context.drawImage(source, dx, dy, dWidth, dHeight);\n  }\n\n  /**\n    * fills a path on the context. also nulls the _imageDataHandler value if one exists.\n    * @returns {void}\n  */\n  fill = (...args) => {\n    this._context.fill(...args);\n    this._imageDataHandler = null;\n  }\n\n  /**\n    * draws a filled rectangle on the context. also nulls the _imageDataHandler value if one exists.\n    * @param {Float} [x = 0] - rectangle's x position\n    * @param {Float} [y = 0] - rectangle's y position\n    * @param {Float} [width = this.width] - rectangle's width\n    * @param {Float} [height = this.height] - rectangle's height\n    * @returns {void}\n  */\n  fillRect = (x = 0, y = 0, width = this.width, height = this.height) => {\n    this._context.fillRect(x, y, width, height);\n    this._imageDataHandler = null;\n  }\n\n  /**\n    * draws a line to a point on the context.\n    * @returns {void}\n  */\n  lineTo = (...args) => {\n    this._context.lineTo(...args);\n  }\n\n  /**\n    * moves to a point on the context.\n    * @returns {void}\n  */\n  moveTo = (...args) => {\n    this._context.moveTo(...args);\n  }\n\n  /**\n    * draws a quadratic curve to a point on the context.\n    * @returns {void}\n  */\n  quadraticCurveTo = (...args) => {\n    this._context.quadraticCurveTo(...args);\n  }\n\n  /**\n    * draws a rectangle on the context.\n    * @param {Float} [x = 0] - rectangle's x position\n    * @param {Float} [y = 0] - rectangle's y position\n    * @param {Float} [width = this.width] - rectangle's width\n    * @param {Float} [height = this.height] - rectangle's height\n    * @returns {void}\n  */\n  rect = (x = 0, y = 0, width = this.width, height = this.height) => {\n    this._context.rect(x, y, width, height);\n  }\n\n  // scale: no scale method! use resize instead!\n\n  /**\n    * strokes the context's current path.\n    * @returns {void}\n  */\n  stroke = (...args) => {\n    this._context.stroke(...args);\n    this._imageDataHandler = null;\n  }\n\n  /* *********************\n  * transformation methods\n  ***********************/\n\n  /**\n    * resets all transforms on the context to zero.\n    * @returns {void}\n  */\n  resetTransform = () => {\n    this._context.resetTransform();\n    // if canvas was scaled it would otherwise be undone\n    this._context.scale(this._devicePixelRatio, this._devicePixelRatio);\n  }\n\n  /**\n    * restores context to a saved state of popped off of a stack.\n    * @returns {void}\n  */\n  restore = () => {\n    this._context.restore();\n  }\n\n  /**\n    * cumulatively rotates the context around x/y coordinates.\n    * @param {Float} angle - amount to rotate\n    * @param {Float} [x = this.width / 2] - center x position\n    * @param {Float} [y = this.height / 2] - center y position\n    * @returns {void}\n  */\n  rotate = (angle, x = 0.5 * this.width, y = 0.5 * this.height) => {\n    if (!angle) {\n      return;\n    }\n    rotate(angle, x, y, this._context, this._context.transform);\n  }\n\n  /**\n    * pushes a saved state of the curent context onto a stack.\n    * @returns {void}\n  */\n  save = () => {\n    this._context.save();\n  }\n\n  /**\n    * resets the context's rotation to a new amount around x/y coordinates.\n    * @param {Float} angle - amount to rotate\n    * @param {Float} [x = this.width / 2] - center x position\n    * @param {Float} [y = this.height / 2] - center y position\n    * @returns {void}\n  */\n  setRotate = (angle, x = 0.5 * this.width, y = 0.5 * this.height) => {\n    rotate(angle, x, y, this._context, this.setTransform);\n  }\n\n  /**\n    * resets the context's transform to new values.\n    * @param {Float} xScale - horizontal scale\n    * @param {Float} xSkew - horizontal skew\n    * @param {Float} ySkew - verical skew\n    * @param {Float} yScale - vertical movement\n    * @param {Float} dx - horizontal movement\n    * @param {Float} dy - vertical movement\n    * @returns {void}\n  */\n  setTransform = (xScale, xSkew, ySkew, yScale, dx, dy) => {\n    xScale *= this._devicePixelRatio;\n    xSkew *= this._devicePixelRatio;\n    ySkew *= this._devicePixelRatio;\n    yScale *= this._devicePixelRatio;\n    dx *= this._devicePixelRatio;\n    dy *= this._devicePixelRatio;\n    this._context.setTransform(xScale, xSkew, ySkew, yScale, dx, dy);\n  }\n\n  /**\n    * sets the context's grid to coordinates.\n    * @param {Float} dx - horizontal movement\n    * @param {Float} dy - vertical movement\n    * @returns {void}\n  */\n  setTranslate = (dx, dy) => {\n    this.setTransform(1, 0, 0, 1, dx, dy);\n  }\n\n  /**\n    * cumulatively moves the context's grid by coordinates.\n    * @param {Float} dx - horizontal movement\n    * @param {Float} dy - vertical movement\n    * @returns {void}\n  */\n  translate = (dx, dy) => {\n    this._context.translate(dx, dy);\n  }\n\n  /* ***********\n  * misc methods\n  *************/\n\n  // eslint-disable valid-jsdoc\n  /**\n    * creates a blank ImageData based on provided width/height.\n    * method overloading to reflect CanvasRenderingContext2D.createImageData.\n    * @param {Number} width - a width amount\n    * @param {Number} height - a height amount\n    * @returns {void}\n  */\n  /**\n    * creates a blank ImageData based on a provided ImageData's dimensions.\n    * method overloading to reflect CanvasRenderingContext2D.createImageData.\n    * @param {ImageData} imageData - an existing ImageData instance\n    * @returns {void}\n  */\n  // eslint-enable valid-jsdoc\n  createImageData = (imageDataOrWidth, height) => {\n    return this._context.createImageData(imageDataOrWidth, height);\n  }\n\n  /* *************\n  * static methods\n  ***************/\n\n  /**\n    * returns Path2D of a path approximately through an array of points.\n    * @param {Array} points - array of points\n    * @param {Path2D} [path = new Path2D()] - Path2D instance to add instructions to\n    * @returns {void}\n  */\n  static quadraticThrough(points, path = new Path2D()) {\n    const { length } = points;\n    let lastPoint;\n    let nextPoint;\n    for (let i = 0; i < length - 1; i++) {\n      lastPoint = nextPoint || points[0];\n      nextPoint = points[i + 1];\n      if (i === 0) {\n        path.moveTo(lastPoint.x, lastPoint.y);\n      } else if (i < length - 2) {\n        const avgX = (lastPoint.x + nextPoint.x) / 2;\n        const avgY = (lastPoint.y + nextPoint.y) / 2;\n        path.quadraticCurveTo(lastPoint.x, lastPoint.y, avgX, avgY);\n      } else {\n        path.quadraticCurveTo(lastPoint.x, lastPoint.y, nextPoint.x, nextPoint.y);\n      }\n    }\n    return path;\n  }\n}\n","import {modulo} from '@danehansen/math';\n\nexport function toRadians(degrees) {\n  return degrees * Math.PI / 180;\n}\n\nexport function toDegrees(radians) {\n  return radians * 180 / Math.PI;\n}\n\nexport function toRadianDirection(degrees) {\n  const radians = toRadians(-degrees);\n  const circ = Math.PI * 2;\n  const offset = radians + Math.PI * 0.5;\n  return modulo(offset, circ);\n}\n\nexport function toDegreeDirection(radians) {\n  const degrees = toDegrees(-radians);\n  return modulo(degrees + 90, 360);\n}\n","// const MAX_INT = 16;\n// const TOLERANCE = 0.5 / MAX_INT;\n\n// export default function(fA2small, fE3large) {\n//   const numeratorA2small = fA2small;\n//   let denominatorE3large = fE3large;\n//   // const isSwapped = fE3large === numerator;\n//   while(denominatorE3large < numeratorA2small) {\n//     // console.log('a')\n//   \tdenominatorE3large *= 2;\n//   }\n//   while(denominatorE3large / 2 > numeratorA2small) {\n//     // console.log('b')\n//   \tdenominatorE3large /= 2;\n//   }\n//\n//   console.log('HERE', numeratorA2small, denominatorE3large);\n//   let closestRatio = TOLERANCE * 5;\n//   let closestNumeratorA2small = MAX_INT;\n//   let closestDenominatorE3large = MAX_INT;\n//   for (let n = 1; n <= MAX_INT; n++) {\n// \t\tfor (let d = 1; d <= MAX_INT; d++) {\n//      \tlet difference = findDifference(numeratorA2small / denominatorE3large, n / d);\n//       const differenceIsSmall = difference < TOLERANCE;\n//       const differenceIsSmallest = difference < closestRatio;\n//       if (differenceIsSmall || differenceIsSmallest) {\n//         console.log(differenceIsSmall, differenceIsSmallest, difference, TOLERANCE)\n//       // if (difference < TOLERANCE || difference < closestRatio) {\n//       // if (difference < closestRatio) {\n//         if ((n + d) <= (closestNumeratorA2small + closestDenominatorE3large)) {\n//           closestRatio = difference;\n//           closestNumeratorA2small = n;\n//           closestDenominatorE3large = d;\n//           console.log(n + d, closestNumeratorA2small + closestDenominatorE3large, difference, TOLERANCE);\n//         }\n//       }\n//   \t}\n//   }\n//   return [closestNumeratorA2small, closestDenominatorE3large];\n// }\n\nfunction findDifference(a, b) {\n  return Math.abs(a - b);\n}\n\nexport default function(fRoot, fComparison) {\n  // const numerators = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16];\n  // const denominators = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16];\n\n  const numerators = [15,9,5,5,3,25];\n  const denominators = [8,8,3,4,2,18];\n\n  while(fRoot > fComparison) {\n  \tfComparison *= 2;\n  }\n  while(fComparison / 2 > fRoot) {\n   \tfComparison /= 2;\n  }\n\n  let lowestDifference = 20;\n  let lowestDifferenceNumerator = 20;\n  let lowestDifferenceDenominator = 20;\n\n  for (let i = 0; i < numerators.length; i++) {\n    for (let j = 0; j < denominators.length; j++) {\n      const newPitch = fRoot * (numerators[i] / denominators[j]);\n      const difference = findDifference(newPitch, fComparison);\n      if (difference < lowestDifference) {\n        // console.log('a', fRoot, fComparison, newPitch, difference);\n        lowestDifference = difference;\n        lowestDifferenceNumerator = denominators[j];\n        lowestDifferenceDenominator = numerators[i];\n      }\n\n      const newPitch2 = (fComparison / 2) * (numerators[i] / denominators[j]);\n      const difference2 = findDifference(newPitch2, fRoot);\n      if (difference2 < lowestDifference) {\n        // console.log('b', fRoot, fComparison, newPitch2, difference2);\n        lowestDifference = difference2;\n        lowestDifferenceNumerator = numerators[i];\n        lowestDifferenceDenominator = denominators[j];\n      }\n    }\n  }\n\n  return [lowestDifferenceNumerator, lowestDifferenceDenominator];\n}\n","import styles from './Display.module.scss';\nimport classnames from 'classnames';\nimport React from 'react';\nimport Canvas from './canvas';\nimport {toRadianDirection} from '../../util/math';\nimport findInterval from '../../util/findInterval';\nimport PropTypes from 'prop-types';\n\nfunction flipRadiansVertically(radians) {\n  return Math.atan2(-Math.sin(radians), Math.cos(radians));\n}\n\nexport default class Display extends React.Component {\n  static propTypes = {\n    activePitches: PropTypes.arrayOf(PropTypes.number).isRequired,\n    baseFrequencies: PropTypes.arrayOf(PropTypes.number).isRequired,\n    diameter: PropTypes.number.isRequired,\n    pitchSequence: PropTypes.arrayOf(PropTypes.number).isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this._rootNode = React.createRef();\n  }\n\n  componentDidMount() {\n    const {current} = this._rootNode;\n    const {diameter} = this.props;\n    this._root = new Canvas(current);\n    this._root.globalCompositeOperation = 'copy';\n    this._buffer = new Canvas(undefined, diameter, diameter);\n\n    this._drawSlices();\n    this._root.drawImage(this._buffer);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) {\n      this._buffer.clearRect();\n      this._drawSlices();\n      this._connectPitches();\n      this._root.drawImage(this._buffer);\n    }\n  }\n\n  render() {\n    const {className} = this.props;\n    return <canvas className={classnames(styles.root, className)} ref={this._rootNode} />;\n  }\n\n  _drawSlices() {\n    const {activePitches, diameter, pitchSequence} = this.props;\n    const semitones = pitchSequence.length;\n    const halfSlice = Math.PI / semitones;\n    const colors = findColors(semitones);\n\n    for (let i = 0; i < semitones; i++) {\n      const pitch = pitchSequence[i];\n      const degrees = pitch / semitones * 360;\n      const color = colors[i];\n      const isActive = activePitches.indexOf(pitchSequence.indexOf(i)) >= 0;\n      const radians = toRadianDirection(degrees);\n\n      fillSlice(this._buffer, color, diameter, radians - halfSlice, radians + halfSlice, isActive ? 1 : 0.95, isActive ? 0.12 : 0.1);\n    }\n  }\n\n  _connectPitches() {\n    const {activePitches, baseFrequencies, diameter, pitchSequence} = this.props;\n    const colors = findColors(pitchSequence.length);\n    for (let i = 0; i < activePitches.length; i++) {\n      const pitchA = activePitches[i];\n      const degreesA = 360 / pitchSequence.length * pitchSequence.indexOf(pitchA);\n      const frequencyA = baseFrequencies[pitchSequence.indexOf(pitchA)];\n      for (let j = i + 1; j < activePitches.length; j++) {\n        const pitchB = activePitches[j];\n        const degreesB = 360 / pitchSequence.length * pitchSequence.indexOf(pitchB);\n        const frequencyB = baseFrequencies[pitchSequence.indexOf(pitchB)];\n        connectPitches(toRadianDirection(degreesA), toRadianDirection(degreesB), diameter, this._buffer, 0.4, frequencyA, frequencyB, colors[i], colors[j]);\n      }\n    }\n  }\n}\n\nfunction fillSlice(canvas, color, diameter, startRadians, endRadians, outerRadius, holeRadius) {\n  const center = diameter / 2;\n\n  // clockwise straight edge\n  let cos = Math.cos(startRadians);\n  let sin = Math.sin(startRadians);\n  canvas.beginPath();\n  canvas.fillStyle = color;\n  canvas.moveTo(center + cos * center * holeRadius, center + sin * -center * holeRadius);\n  canvas.lineTo(center + cos * center * outerRadius, center + sin * -center * outerRadius);\n\n  // outer arc\n  canvas.arc(center, center, center * outerRadius, flipRadiansVertically(startRadians), flipRadiansVertically(endRadians), true);\n\n  // anticlockwise straight edge\n  cos = Math.cos(endRadians);\n  sin = Math.sin(endRadians);\n  canvas.moveTo(center + cos * center * outerRadius, center + sin * -center * outerRadius);\n  canvas.lineTo(center + cos * center * holeRadius, center + sin * -center * holeRadius);\n\n  // inner arc\n  canvas.arc(center, center, center * holeRadius, flipRadiansVertically(endRadians), flipRadiansVertically(startRadians), false);\n\n  canvas.fill();\n}\n\nfunction findColors(semitones) {\n  const colors = [];\n  const buttonSlice = Math.PI * 2 / semitones;\n  for(let i = 0; i < semitones; i++) {\n    colors.push(directionalColor(i * buttonSlice));\n  }\n  return colors;\n}\n\nfunction directionalColor(direction) {\n  const colorSlice = Math.PI * 2 / 3;\n  const cosR = Math.cos(direction);\n  const sinR = Math.sin(direction);\n  const cosG = Math.cos(direction - colorSlice);\n  const sinG = Math.sin(direction - colorSlice);\n  const cosB = Math.cos(direction + colorSlice);\n  const sinB = Math.sin(direction + colorSlice);\n\n  const r = Math.round(cosR * 255 * 0.5 + 255 * 0.5);\n  const g = Math.round(cosG * 255 * 0.5 + 255 * 0.5);\n  const b = Math.round(cosB * 255 * 0.5 + 255 * 0.5);\n\n  return `rgb(${r}, ${g}, ${b})`;\n}\n\nfunction connectPitches(radianA, radianB, diameter, canvas, radius, frequencyA, frequencyB, colorA, colorB) {\n  const center = diameter / 2;\n\n  const cosA = Math.cos(radianA);\n  const sinA = Math.sin(-radianA);\n\n  const cosB = Math.cos(radianB);\n  const sinB = Math.sin(-radianB);\n\n  const pointA = {\n    x: center + cosA * center * radius,\n    y: center + sinA * center * radius,\n  };\n\n  const pointB = {\n    x: center + cosB * center * radius,\n    y: center + sinB * center * radius,\n  };\n\n  const interval = findInterval(frequencyA, frequencyB);\n  if (interval) {\n    canvas.lineWidth = 1;\n    canvas.globalCompositeOperation = \"lighten\";\n\n    // canvas.globalCompositeOperation = \"lighter\";\n    // canvas.globalCompositeOperation = \"multiply\";\n    // canvas.globalCompositeOperation = \"screen\";\n    // canvas.globalCompositeOperation = \"overlay\";\n    // canvas.globalCompositeOperation = \"darken\";\n\n    // canvas.globalCompositeOperation = \"color-dodge\";\n    // canvas.globalCompositeOperation = \"color-burn\";\n    // canvas.globalCompositeOperation = \"hard-light\";\n    // canvas.globalCompositeOperation = \"soft-light\";\n    // canvas.globalCompositeOperation = \"difference\";\n    // canvas.globalCompositeOperation = \"exclusion\";\n    // canvas.globalCompositeOperation = \"hue\";\n    // canvas.globalCompositeOperation = \"saturation\";\n    // canvas.globalCompositeOperation = \"color\";\n    // canvas.globalCompositeOperation = \"luminosity\";\n    const xDiff = pointB.x - pointA.x;\n    const yDiff = pointB.y - pointA.y;\n    const diff = Math.sqrt(Math.pow(xDiff, 2) + Math.pow(yDiff, 2));\n    const radiusA = diff / interval[0] / 2;\n    const radiusB = diff / interval[1] / 2;\n\n    canvas.strokeStyle = colorA;\n    for (let i = 0; i < interval[0]; i++) {\n      canvas.beginPath();\n      const centerX = pointA.x + xDiff / interval[0] * (i + 0.5);\n      const centerY = pointA.y + yDiff / interval[0] * (i + 0.5);\n      canvas.arc(centerX, centerY, radiusA, 0, Math.PI * 2);\n      canvas.stroke();\n    }\n\n    canvas.strokeStyle = colorB;\n    for (let i = 0; i < interval[1]; i++) {\n      canvas.beginPath();\n      const centerX = pointA.x + xDiff / interval[1] * (i + 0.5);\n      const centerY = pointA.y + yDiff / interval[1] * (i + 0.5);\n      canvas.arc(centerX, centerY, radiusB, 0, Math.PI * 2);\n      canvas.stroke();\n    }\n  }\n\n  canvas.globalCompositeOperation = \"source-over\";\n  canvas.strokeStyle = \"white\";\n  canvas.lineWidth = 2;\n  canvas.beginPath();\n  canvas.moveTo(pointA.x, pointA.y);\n  canvas.lineTo(pointB.x, pointB.y);\n  canvas.stroke();\n}\n","import styles from './Menu.module.scss';\nimport {MIN_FREQ, MAX_FREQ, TEMPERMENT_TYPES, OSCILLATOR_TYPES, DEFAULT_SEMITONES, PITCH_NAMES} from '../../constants';\n\nfunction findIncrementLabel(increment, semitones) {\n  let str = String(increment);\n  if (increment === 1) {\n    str += ` (chromatic)`;\n  } else if (increment === semitones - 1) {\n    str += ` (reverse chromatic)`;\n  } else if (semitones === 12 && increment === 7) {\n    str += ` (circle of fifths)`;\n  }\n  return str;\n}\n\nexport default function Menu({\n    a4,\n    setA4,\n    oscillator,\n    setOscillator,\n    pitchSkip,\n    setPitchSkip,\n    semitones,\n    setSemitones,\n    transposition,\n    setTransposition,\n    pitchSkipOptions,\n  }) {\n\n  function onOscillatorChange({ target: { value }}) {\n    setOscillator(value);\n  }\n\n  return (\n    <form className={styles.root}>\n      <div className={styles.property}>\n        <h2 className={styles.title}>Oscillator</h2>\n        <label className={styles.label}>\n          <input className={styles.input} type=\"radio\" checked={oscillator === OSCILLATOR_TYPES.SINE} value={OSCILLATOR_TYPES.SINE} onChange={onOscillatorChange} />\n          <div className={styles.labelText}>{OSCILLATOR_TYPES.SINE}</div>\n        </label>\n        <label className={styles.label}>\n          <input className={styles.input} type=\"radio\" checked={oscillator === OSCILLATOR_TYPES.SQUARE} value={OSCILLATOR_TYPES.SQUARE} onChange={onOscillatorChange} />\n          <div className={styles.labelText}>{OSCILLATOR_TYPES.SQUARE}</div>\n        </label>\n        <label className={styles.label}>\n          <input className={styles.input} type=\"radio\" checked={oscillator === OSCILLATOR_TYPES.SAWTOOTH} value={OSCILLATOR_TYPES.SAWTOOTH} onChange={onOscillatorChange} />\n          <div className={styles.labelText}>{OSCILLATOR_TYPES.SAWTOOTH}</div>\n        </label>\n        <label className={styles.label}>\n          <input className={styles.input} type=\"radio\" checked={oscillator === OSCILLATOR_TYPES.TRIANGLE} value={OSCILLATOR_TYPES.TRIANGLE} onChange={onOscillatorChange} />\n          <div className={styles.labelText}>{OSCILLATOR_TYPES.TRIANGLE}</div>\n        </label>\n      </div>\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>Semitones</h2>\n        <label className={styles.label}>\n          <input className={styles.input} type=\"range\" min={1} max={120} value={semitones} step=\"1\" onChange={function({target: {value}}){setSemitones(parseInt(value))}} />\n        </label>\n      </div>\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>Transposition</h2>\n          {PITCH_NAMES.map(function(name, index) {\n            return <label className={styles.label} key={name}>\n              <input className={styles.input} type=\"radio\" value={index} name=\"transposition\" checked={transposition === index} onChange={function({target:{value}}){setTransposition(parseInt(value))}} />\n              <div className={styles.labelText}>{name}</div>\n            </label>\n          })}\n      </div>\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>Pitch Skip</h2>\n        {pitchSkipOptions.map(function(num) {\n          return <label className={styles.label} key={num}>\n            <input className={styles.input} type=\"radio\" value={num} name=\"pitchSkip\" checked={pitchSkip === num} onChange={function({target:{value}}){setPitchSkip(parseInt(value))}} />\n            <div className={styles.labelText}>{findIncrementLabel(num, semitones)}</div>\n          </label>\n        })}\n      </div>\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>A4</h2>\n        <label className={styles.label}>\n          <input\n            className={styles.input}\n            type=\"number\"\n            min={MIN_FREQ}\n            max={MAX_FREQ}\n            value={a4}\n            step=\"1\"\n            onChange={function({target:{value}}){setA4(parseInt(value))}}\n          />\n        </label>\n      </div>\n    </form>\n  );\n}\n","import styles from './PitchLabel.module.scss';\nimport classnames from 'classnames';\nimport convertIndexToRadians from '../../util/convertIndexToRadians';\nimport {toRadianDirection} from '../../util/math';\n\nexport default function PitchLabel({pitchNamesSorted, diameter}) {\n  const semitones = pitchNamesSorted.length;\n\n  return <div className={styles.root}>{pitchNamesSorted.map(function(name, index) {\n    const degrees = 360 / semitones * index;\n    const isSmall = name.length > 1;\n    let transform;\n    let transformOrigin;\n    const radius = -0.475;\n\n    if (isSmall) {\n      transform = `translate(0%, -50%) rotate(${degrees}deg) translate(0%, 50%) translateY(${diameter * radius}px) rotate(${90}deg)`;\n      transformOrigin = `0 50%`;\n    } else {\n      transform = `translate(-50%, 0) rotate(${degrees}deg) translateY(${diameter * radius}px) `;\n      transformOrigin = `50% 0`;\n    }\n\n    return <div\n      className={classnames(styles.button, isSmall && styles.small)}\n      key={index}\n      style={{transform, transformOrigin}}\n    >{name}</div>\n  })}</div>\n}\n","import styles from './ChordLabel.module.scss';\nimport convertIndexToRadians from '../../util/convertIndexToRadians';\nimport {toRadianDirection} from '../../util/math';\n\nexport default function ChordLabel({chordNamesSorted, diameter}) {\n  const semitones = chordNamesSorted.length;\n\n  return <div className={styles.root}>{chordNamesSorted.map(function(name, index) {\n    if (!name) {\n      return null;\n    }\n    const degrees = 360 / semitones * index;\n\n    return <div\n      className={styles.button}\n      key={index}\n      style={{\n        transform: `translate(-50%, -50%) rotate(${degrees}deg) translateY(${diameter * -0.22}px)`,\n      }}\n    >{name}</div>\n  })}</div>\n}\n","import {useRef} from 'react';\nimport {modulo} from '@danehansen/math';\nimport {toDegreeDirection} from '../../util/math';\nimport styles from './TouchPad.module.scss';\n\nexport default function TouchPad({\n  pitchSequence,\n  callback,\n  diameter,\n}) {\n  const rootNode = useRef(null);\n\n  function onTouchMove(evt) {\n    // console.log('onTouchMove');\n    anyTouch(evt);\n  }\n\n  function onTouchStart(evt) {\n    // console.log('onTouchStart');\n    anyTouch(evt);\n  }\n\n  function onTouchEnd(evt) {\n    const {targetTouches} = evt;\n    // console.log('onTouchEnd', targetTouches[0]);\n    anyTouch(evt);\n  }\n\n  function onTouchCancel(evt) {\n    // console.log('onTouchCancel');\n    anyTouch(evt);\n  }\n\n  function anyTouch(evt) {\n    const {targetTouches} = evt;\n\n    if (!targetTouches) {\n      callback([]);\n    }\n    const rect = rootNode.current.getBoundingClientRect();\n    const halfSlice = Math.PI / pitchSequence.length;\n    const pitches = []\n    for (let i = 0; i < targetTouches.length; i++) {\n      const {clientX, clientY} = targetTouches[i];\n      const x = clientX - rect.x - diameter * 0.5;\n      const y = -(clientY - rect.y - diameter * 0.5);\n      const length = Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));\n\n      if (length <= diameter / 2) {\n        const rad = modulo(Math.atan2(y, x), Math.PI * 2);\n        const degrees = toDegreeDirection(rad - halfSlice);\n        const index = Math.floor(degrees / 360 * pitchSequence.length);\n        pitches.push(pitchSequence[index]);\n      }\n    }\n    callback(pitches);\n  }\n\n  return <div\n    ref={rootNode}\n    className={styles.root}\n    onTouchMove={onTouchMove}\n    onTouchStart={onTouchStart}\n    onTouchEnd={onTouchEnd}\n    onTouchCancel={onTouchCancel}\n  />;\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst PLACEHOLDER_WINDOW = {\n  addEventListener() {},\n  innerHeight: 0,\n  innerWidth: 0,\n  removeEventListener() {},\n};\n\nexport default class ResizeListener extends React.Component {\n  static propTypes = {\n    children: PropTypes.func.isRequired,\n    win: PropTypes.object,\n  };\n\n  static defaultProps = {\n    win: typeof window !== 'undefined' ? window : PLACEHOLDER_WINDOW,\n  };\n\n  constructor(props) {\n    super(props);\n    const { win } = props;\n    this.state = {\n      innerHeight: win.innerHeight,\n      innerWidth: win.innerWidth,\n    };\n    win.addEventListener('resize', this._onResize);\n  }\n\n  componentWillUnmount() {\n    const { win } = this.props;\n    win.removeEventListener('resize', this._onResize);\n  }\n\n  _onResize = () => {\n    const { win } = this.props;\n    this.setState({\n      innerHeight: win.innerHeight,\n      innerWidth: win.innerWidth,\n    });\n  };\n\n  render() {\n    const { innerHeight, innerWidth } = this.state;\n    const { children } = this.props;\n    return children(innerWidth, innerHeight);\n  }\n}\n","import {MAX_FREQ} from '../constants';\n\nlet frequencies;\nlet currentOscillators;\nlet audioCtx;\nlet gainNode;\n\nexport function initializaAudio(baseFrequencies) {\n  if (audioCtx) {\n    audioCtx.close();\n  }\n  audioCtx = new (window.AudioContext || window.webkitAudioContext)();\n  gainNode = audioCtx.createGain();\n\n  gainNode.connect(audioCtx.destination);\n\n  // TODO: figure out this gain value\n  gainNode.gain.value = 0.1;\n\n  currentOscillators = [];\n  frequencies = [];\n  frequencies = baseFrequencies.map(function(frequency) {\n    return findAudibleOctaves(frequency);\n  })\n}\n\nfunction findAudibleOctaves(frequency) {\n  const frequencies = [];\n  while(frequency < MAX_FREQ) {\n    frequencies.push(frequency);\n    frequency *= 2;\n  }\n  return frequencies;\n}\n\nfunction startNote(index, type) {\n  const oscillators = [];\n  currentOscillators[index] = oscillators;\n  for(const frequency of frequencies[index]) {\n    const oscillator = audioCtx.createOscillator();\n    oscillator.frequency.value = frequency;\n    oscillator.type = type;\n    oscillator.connect(gainNode);\n    oscillator.start();\n    oscillators.push(oscillator);\n  }\n}\n\nfunction stopNote(index) {\n  for(const oscillator of currentOscillators[index]) {\n    oscillator.stop();\n  }\n  currentOscillators[index] = null;\n}\n\nexport function toggleNote(note, isPlaying, type) {\n  if (isPlaying && !currentOscillators[note]) {\n    startNote(note, type);\n  } else if (!isPlaying && currentOscillators[note]) {\n    stopNote(note);\n  }\n}\n","import styles from './App.module.scss';\nimport {useState, useEffect} from 'react';\nimport {OSCILLATOR_TYPES, DEFAULT_SEMITONES, CHORD_NAMES} from '../constants';\nimport findPitchSkipOptions from '../util/findPitchSkipOptions';\nimport findPitchNames from '../util/findPitchNames';\nimport transposeFrequency from '../util/transposeFrequency';\nimport findBaseFrequencies from '../util/findBaseFrequencies';\nimport findPitchSequence from '../util/findPitchSequence';\nimport findChordNames from '../util/findChordNames';\nimport sortPitchNames from '../util/sortPitchNames';\nimport Display from './Display/Display';\nimport Menu from './Menu/Menu';\nimport PitchLabel from './PitchLabel/PitchLabel';\nimport ChordLabel from './ChordLabel/ChordLabel';\nimport TouchPad from './TouchPad/TouchPad';\nimport ResizeListener from './ResizeListener/ResizeListener';\nimport {initializaAudio, toggleNote} from '../util/shepardTone'\n\nexport default function App() {\n  const [a4, setA4] = useState(440);\n  const [oscillator, setOscillator] = useState(OSCILLATOR_TYPES.SINE);\n  const [semitones, setSemitones] = useState(DEFAULT_SEMITONES);\n  const [transposition, setTransposition] = useState(3);\n\n  const [pitchNames, setPitchNames] = useState(findPitchNames(semitones, transposition));\n  useEffect(function() {\n    setPitchNames(findPitchNames(semitones, transposition));\n  }, [semitones, transposition]);\n\n  const [pitchSkipOptions, setPitchSkipOptions] = useState(findPitchSkipOptions(semitones));\n  useEffect(function() {\n    setPitchSkipOptions(findPitchSkipOptions(semitones));\n  }, [semitones]);\n\n  const [pitchSkip, setPitchSkip] = useState(pitchSkipOptions[0]);\n  useEffect(function() {\n    setPitchSkip(pitchSkipOptions[0]);\n  }, [pitchSkipOptions]);\n\n  const [rootFrequency, setRootFrequency] = useState(transposeFrequency(a4, transposition, DEFAULT_SEMITONES));\n  useEffect(function() {\n    setRootFrequency(transposeFrequency(a4, transposition, DEFAULT_SEMITONES));\n  }, [transposition, a4]);\n\n  const [baseFrequencies, setBaseFrequencies] = useState(findBaseFrequencies(semitones, rootFrequency));\n  useEffect(function() {\n    setBaseFrequencies(findBaseFrequencies(semitones, rootFrequency));\n  }, [semitones, rootFrequency]);\n\n  const [pitchSequence, setPitchSequence] = useState(findPitchSequence(semitones, pitchSkip));\n  useEffect(function() {\n    setPitchSequence(findPitchSequence(semitones, pitchSkip));\n  }, [semitones, pitchSkip]);\n\n  const [pitchNamesSorted, setPitchNamesSorted] = useState(sortPitchNames(pitchNames, transposition, pitchSkip));\n  useEffect(function() {\n    setPitchNamesSorted(sortPitchNames(pitchNames, pitchSkip));\n  }, [pitchNames, pitchSkip]);\n\n  const [chordNamesSorted, setChordNamesSorted] = useState(sortPitchNames(findChordNames(semitones), pitchSkip));\n  useEffect(function(){\n    setChordNamesSorted(sortPitchNames(findChordNames(semitones), pitchSkip));\n  }, [semitones, pitchSkip]);\n\n  const [activePitches, setActivePitches] = useState([]);\n\n  const [hasInitializedAudio, setHasInitializedAudio] = useState(false);\n  function onInitialClick() {\n    initializaAudio(baseFrequencies);\n    setHasInitializedAudio(true);\n  }\n\n  const [isMenuOpen, setMenuOpen] = useState(false);\n  function onMenuButtonClick() {\n    if (isMenuOpen) {\n      initializaAudio(baseFrequencies);\n    }\n    setMenuOpen(!isMenuOpen);\n  }\n\n  function onTouchCallback(pitches) {\n    for(let i = 0; i < semitones; i++) {\n      if (pitches.indexOf(i) >= 0) {\n        toggleNote(i, true, oscillator)\n      } else {\n        toggleNote(i, false, oscillator)\n      }\n    }\n    setActivePitches(pitches);\n  }\n\n  return (\n    <div className={styles.root} onClick={hasInitializedAudio ? null : onInitialClick}>\n      <div className={styles.contentHolder}>\n      </div>\n      <ResizeListener>\n        {function(innerWidth, innerHeight) {\n          const smallest = Math.min(innerWidth, innerHeight);\n          return <div className={styles.wheelHolder} style={{width: `${smallest}px`, height: `${smallest}px`}}>\n            <Display\n              activePitches={activePitches}\n              baseFrequencies={baseFrequencies}\n              diameter={smallest}\n              pitchSequence={pitchSequence}\n            />\n            <PitchLabel pitchNamesSorted={pitchNamesSorted} diameter={smallest} />\n            <ChordLabel chordNamesSorted={chordNamesSorted} diameter={smallest} />\n            {hasInitializedAudio &&\n              <TouchPad\n                callback={onTouchCallback}\n                diameter={smallest}\n                pitchSequence={pitchSequence}\n              />\n            }\n          </div>\n        }}\n      </ResizeListener>\n\n      {isMenuOpen && <div className={styles.menuHolder}><Menu\n        a4={a4}\n        setA4={setA4}\n        oscillator={oscillator}\n        setOscillator={setOscillator}\n        pitchSkip={pitchSkip}\n        setPitchSkip={setPitchSkip}\n        semitones={semitones}\n        setSemitones={setSemitones}\n        transposition={transposition}\n        setTransposition={setTransposition}\n        pitchSkipOptions={pitchSkipOptions}\n      /></div>}\n\n      <button className={styles.menuButton} onClick={onMenuButtonClick}>{isMenuOpen ? 'close menu' : 'open menu'}</button>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/reset.module.scss';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}