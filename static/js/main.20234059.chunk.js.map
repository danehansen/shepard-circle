{"version":3,"sources":["App/Menu/Menu.module.scss","App/PitchLabel/PitchLabel.module.scss","App/ChordLabel/ChordLabel.module.scss","App/Display/Display.module.scss","App/TouchPad/TouchPad.module.scss","App/Display/canvas.js","util/math.js","util/constants.js","App/Display/findColors.js","App/Display/fillSlice.js","util/music.js","util/findIntervalRatio.js","App/Display/drawInterval.js","App/Display/Display.js","App/Menu/Menu.js","App/PitchLabel/PitchLabel.js","App/ChordLabel/ChordLabel.js","App/TouchPad/TouchPad.js","App/FirstTouch/FirstTouch.js","util/findPitchSkipOptions.js","util/findPitchNames.js","util/findBaseFrequencies.js","util/findPitchSequence.js","util/sortPitchNames.js","util/shepardTone.js","util/hooks.js","App/App.js","util/findChordNames.js","reportWebVitals.js","index.js","App/App.module.scss"],"names":["module","exports","rotate","angle","x","y","ctx","func","cos","Math","sin","dx","dy","call","Canvas","element","document","createElement","width","offsetWidth","height","offsetHeight","devicePixelRatio","window","resize","isMounted","_element","parentNode","_width","_height","_devicePixelRatio","_imageDataHandler","_context","scale","arc","radius","startAngle","endAngle","PI","anticlockwise","beginPath","bezierCurveTo","clearRect","clip","closePath","drawImage","source","sx","sy","sWidth","sHeight","dWidth","dHeight","isCanvas","_drawImageDest","fill","fillRect","lineTo","moveTo","quadraticCurveTo","rect","stroke","resetTransform","restore","transform","save","setRotate","setTransform","xScale","xSkew","ySkew","yScale","setTranslate","translate","createImageData","imageDataOrWidth","this","getContext","str","fillStyle","globalCompositeOperation","num","globalAlpha","lineWidth","strokeStyle","points","lastPoint","nextPoint","path","Path2D","length","i","avgX","avgY","toRadianDirection","degrees","circ","offset","toRadians","modulo","toDegreeDirection","radians","toDegrees","EQ_FREQUENCIES","RADIANS_IN_CIRCLE","MODES","name","chords","OSCILLATOR_TYPES","findDirectionalColor","direction","colorSlice","cosR","cosG","cosB","r","round","g","b","flipRadiansVertically","atan2","fillSlice","canvas","color","diameter","startRadians","endRadians","outerRadius","holeRadius","isInKey","center","isCircle","SEMITONES","PITCH_NAMES","transposeFrequency","frequency","cents","pow","A4","415","427","428","429","430","430.54","432","435","439","440","452","466","DEFAULT","findIntervalRatio","fRoot","fComparison","fA","fB","log2","abs","drawInterval","radianA","radianB","frequencyA","frequencyB","colorA","colorB","pointA","pointB","interval","xDiff","yDiff","diff","sqrt","radiusA","radiusB","centerX","centerY","Display","className","activePitches","baseFrequencies","mode","pitchSequence","rootNode","useRef","useState","root","setRoot","buffer","setBuffer","useEffect","current","undefined","semitones","colors","buttonSlice","push","console","log","findColors","halfSlice","isActive","indexOf","drawSlices","pitchA","degreesA","j","pitchB","degreesB","connectPitches","classnames","styles","ref","findIncrementLabel","increment","String","Menu","a4","setA4","eq","setEq","setMode","oscillator","setOscillator","pitchSkip","setPitchSkip","setSemitones","transposition","setTransposition","pitchSkipOptions","onOscillatorChange","value","target","onEQChange","index","values","property","title","label","input","type","checked","onChange","labelText","reset","onClick","verticalRangeHolder","map","verticalRange","min","max","step","bind","wide","parseInt","modeObj","PitchLabel","pitchNamesSorted","chordNamesSorted","transformOrigin","isSmall","button","small","deemphesized","style","ChordLabel","TouchPad","callback","anyTouch","evt","targetTouches","getBoundingClientRect","pitches","clientX","clientY","floor","onTouchMove","onTouchStart","onTouchEnd","onTouchCancel","FirstTouch","component","Component","rest","hasCalledCallback","setHasCalledCallback","findPitchSkipOptions","increments","findIncrementsOfSemitone","semitoneIndexes","semitoneIndex","findPitchNames","Array","keys","nameIndexFloat","nameIndex","prefix","remainder","slice","findBaseFrequencies","rootFrequency","frequencies","findPitchSequence","sequence","sortPitchNames","pitchNames","pitchName","currentOscillators","audioContext","gainNode","headNode","initializaAudio","close","AudioContext","webkitAudioContext","createGain","connect","destination","gain","eqNode","createBiquadFilter","findAudibleOctaves","toggleNote","note","isPlaying","oscillators","oscillatorNode","createOscillator","start","startNote","stop","stopNote","WIN","PLACEHOLDER_WINDOW","addEventListener","innerHeight","innerWidth","removeEventListener","App","urlParams","queryString","parse","location","search","parseNumbers","arrayFormat","useURLParams","key","def","changeParams","history","pushState","origin","pathname","stringify","isEqual","setPitchNames","setPitchSkipOptions","_ps","_eq","setRootFrequency","setBaseFrequencies","setPitchSequence","setPitchNamesSorted","setChordNamesSorted","chordNames","modeIndex","findChordNames","setActivePitches","win","setInnerHeight","setInnerWidth","onResize","useViewportDimensions","isMenuOpen","setMenuOpen","contentHolder","wheelHolder","newPitches","menuHolder","menuButton","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.20234059.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Menu_root__3QA5H\",\"property\":\"Menu_property__qoOWz\",\"title\":\"Menu_title__tE_9H\",\"reset\":\"Menu_reset__uN5da\",\"label\":\"Menu_label__3hKMT\",\"wide\":\"Menu_wide__2sfIP\",\"labelText\":\"Menu_labelText__2uoMn\",\"input\":\"Menu_input__17q9X\",\"verticalRangeHolder\":\"Menu_verticalRangeHolder__2TdXL\",\"verticalRange\":\"Menu_verticalRange__3aZoM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PitchLabel_root__3-xxj\",\"button\":\"PitchLabel_button__29U3k\",\"small\":\"PitchLabel_small__3x-Zk\",\"deemphesized\":\"PitchLabel_deemphesized__Gd1GB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ChordLabel_root__U_GCi\",\"button\":\"ChordLabel_button__3bTYZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Display_root__ig8ld\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TouchPad_root__22wzt\"};","// import ImageDataHandler from './image-data-handler';\n\nfunction rotate(angle, x, y, ctx, func) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const dx = x - cos * x - sin * -y;\n  const dy = y - sin * x - cos * y;\n  func.call(ctx, cos, sin, -sin, cos, dx, dy);\n}\n\n/**\n* a helper for canvas manipulation, to store a reference to the element as well as it's context.\nalso adds some helpful method defaults. also has some drawing utilities.\n* @param {HTMLCanvasElement} [element = document.createElement('canvas')] - put HTMLCanvasElement if this is your\n* final render canvas\n* @param {Integer} [width = element.offsetWidth] - width of area\n* @param {Integer} [height = element.offsetHeight] - height of area\n* @param {Float} [devicePixelRatio = window.devicePixelRatio] - actual pixels to css pixel\n*/\nexport default class Canvas {\n  /* *******************\n  * initializing methods\n  *********************/\n\n  constructor(element = document.createElement('canvas'), width = element.offsetWidth, height = element.offsetHeight, devicePixelRatio = window.devicePixelRatio) { // eslint-disable-line max-len\n    this._element = element;\n    this._context = this._element.getContext('2d');\n    this.resize(width, height, devicePixelRatio);\n  }\n\n  /**\n    * sets width/height properties as well as scaling\n    * @param {Integer} [width = this.width] - width of area of canvas\n    * @param {Integer} [height = this.height] - height of area of canvas\n    * @param {Float} [devicePixelRatio = window.devicePixelRatio] - actual pixels to css pixel\n    * @returns {void}\n  */\n  // eslint-disable complexity\n  resize = (width, height, devicePixelRatio = window.devicePixelRatio) => {\n    // allow for case to call with no params when devicePixelRatio is changed\n    // allow for case to call with no params when dom element is resized\n    // otherwise width and height are defined\n    // this method will erase the canvas and reset any clipping, fillStyle, lineWidth, strokeStyle, etc...\n    if (!width || !height) {\n      const isMounted = !!this._element.parentNode;\n      width = isMounted ? this._element.offsetWidth : this._width;\n      height = isMounted ? this._element.offsetHeight : this._height;\n    }\n    this._devicePixelRatio = devicePixelRatio;\n    this._width = width;\n    this._height = height;\n    this._element.width = width * this._devicePixelRatio;\n    this._element.height = height * this._devicePixelRatio;\n    this._imageDataHandler = null;\n    this._context.scale(this._devicePixelRatio, this._devicePixelRatio);\n  }\n  // eslint-enable complexity\n\n  /* ******\n  * getters\n  ********/\n\n  /**\n    * get the instance's HTMLCanvasElement\n    * @readonly\n    * @type {HTMLCanvasElement}\n  */\n  get element() {\n    return this._element;\n  }\n\n  /**\n    * get the instance's height\n    * @readonly\n    * @type {Integer}\n  */\n  get height() {\n    return this._height;\n  }\n\n  /**\n    * get the instance's ImageDataHandler reflecting the current state\n    * @readonly\n    * @type {ImageDataHandler}\n  */\n  get imageDataHandler() {\n    // if (!this._imageDataHandler) {\n      // const width = this._width * this._devicePixelRatio;\n      // const height = this._height * this._devicePixelRatio;\n      // this._imageDataHandler = new ImageDataHandler(this._context, 0, 0, width, height);\n    // }\n    return this._imageDataHandler;\n  }\n\n  /**\n    * get the instance's width\n    * @readonly\n    * @type {Integer}\n  */\n  get width() {\n    return this._width;\n  }\n\n  /* ******\n  * setters\n  ********/\n\n  /**\n    * set the fill color of the context.\n    * @param {String} str - new value for fillStyle\n    * @type {String}\n  */\n  set fillStyle(str) {\n    this._context.fillStyle = str;\n  }\n\n  /**\n    * set the globalCompositeOperation of the context.\n    * @param {String} str - new value for globalCompositeOperation\n    * @type {String}\n  */\n  set globalCompositeOperation(str) {\n    this._context.globalCompositeOperation = str;\n  }\n\n  /**\n    * set the alpha the context.\n    * @param {Float} num - new value for globalAlpha\n    * @type {Float}\n  */\n  set globalAlpha(num) {\n    this._context.globalAlpha = num;\n  }\n\n  /**\n    * set the stroke width of the context.\n    * @param {Float} num - new value for lineWidth\n    * @type {Float}\n  */\n  set lineWidth(num) {\n    this._context.lineWidth = num;\n  }\n\n  /**\n    * sets the stroke color of the context.\n    * @param {String} str - new value for strokeStyle\n    * @type {String}\n  */\n  set strokeStyle(str) {\n    this._context.strokeStyle = str;\n  }\n\n  /* **************\n  * drawing methods\n  ****************/\n\n  /**\n    * draws an arc on the context\n    * @param {Float} x - center point's x position\n    * @param {Float} y - center point's y position\n    * @param {Float} radius - arc's radius\n    * @param {Float} [startAngle = 0] - angle to begin arc\n    * @param {Float} [endAngle = Math.PI * 2] - angle to end arc\n    * @param {Boolean} [anticlockwise = false] - draws anticlockwise if true\n    * @returns {void}\n  */\n  arc = (x, y, radius, startAngle = 0, endAngle = Math.PI * 2, anticlockwise = false) => {\n    this._context.arc(x, y, radius, startAngle, endAngle, anticlockwise);\n  }\n\n  /**\n    * begins a drawing path on the context\n    * @returns {void}\n  */\n  beginPath = () => {\n    this._context.beginPath();\n  }\n\n  /**\n    * draws an bezier curve on the context\n    * @returns {void}\n  */\n  bezierCurveTo = (...args) => {\n    this._context.bezierCurveTo(...args);\n  }\n\n  /**\n    * clears a rectangle on the context. also nulls the _imageDataHandler value if one exists.\n    * @param {Float} [x = 0] - rectangle's x position\n    * @param {Float} [y = 0] - rectangle's y position\n    * @param {Float} [width = this.width] - rectangle's width\n    * @param {Float} [height = this.height] - rectangle's height\n    * @returns {void}\n  */\n  clearRect = (x = 0, y = 0, width = this.width, height = this.height) => {\n    this._context.clearRect(x, y, width, height);\n    this._imageDataHandler = null;\n  }\n\n  /**\n    * creates a clipping path on the context for future drawing calls.\n    * @returns {void}\n  */\n  clip = (...args) => {\n    this._context.clip(...args);\n  }\n\n  /**\n    * closes a path on the context\n    * @returns {void}\n  */\n  closePath = () => {\n    this._context.closePath();\n  }\n\n  // eslint-disable valid-jsdoc\n  /**\n    * draws an Image or canvas element into the context. also nulls the _imageDataHandler value if one exists.\n    * method overloading to reflect CanvasRenderingContext2D.drawImage.\n    * @param {Canvas|Image|HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} source - where to take pixels from\n    * @param {Float} [dx = 0] - x coordinate of source's destination\n    * @param {Float} [dy = 0] - y coordinate of source's destination\n    * @param {Float} [dWidth = image.width] - width of destination\n    * @param {Float} [dHeight = image.height] - height of destination\n    * @returns {void}\n  */\n  /**\n    * draws an Image or canvas element into the context. also nulls the _imageDataHandler value if one exists.\n    * method overloading to reflect CanvasRenderingContext2D.drawImage.\n    * @param {Canvas|Image|HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} source - where to take pixels from\n    * @param {Float} sx - x coordinate of where to pull from source\n    * @param {Float} sy - y coordinate of where to pull from source\n    * @param {Float} sWidth - width of area to pull from source\n    * @param {Float} sHeight - height of area to pull from source\n    * @param {Float} dx - x coordinate of source's destination\n    * @param {Float} dy - y coordinate of source's destination\n    * @param {Float} dWidth - width of destination\n    * @param {Float} dHeight - height of destination\n    * @returns {void}\n  */\n  drawImage = (source, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight) => { // eslint-disable-line max-params\n    // sx, sy, sWidth, sHeight on images do not get scaled against devicePixelRatio\n    const hasSource = typeof dx === 'number';\n    const isCanvas = source instanceof Canvas;\n    if (hasSource) {\n      if (isCanvas) {\n        sx *= this._devicePixelRatio;\n        sy *= this._devicePixelRatio;\n        sWidth *= this._devicePixelRatio;\n        sHeight *= this._devicePixelRatio;\n        this._context.drawImage(source.element, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);\n      } else {\n        this._context.drawImage(source, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);\n      }\n    } else if (isCanvas) {\n      sWidth = sWidth || source.width;\n      sHeight = sHeight || source.height;\n      this._drawImageDest(source.element, sx, sy, sWidth, sHeight);\n    } else {\n      this._drawImageDest(source, sx, sy, sWidth, sHeight);\n    }\n    this._imageDataHandler = null;\n  }\n  // eslint-enable valid-jsdoc\n\n  _drawImageDest = (source, dx = 0, dy = 0, dWidth = source.width, dHeight = source.height) => {\n    this._context.drawImage(source, dx, dy, dWidth, dHeight);\n  }\n\n  /**\n    * fills a path on the context. also nulls the _imageDataHandler value if one exists.\n    * @returns {void}\n  */\n  fill = (...args) => {\n    this._context.fill(...args);\n    this._imageDataHandler = null;\n  }\n\n  /**\n    * draws a filled rectangle on the context. also nulls the _imageDataHandler value if one exists.\n    * @param {Float} [x = 0] - rectangle's x position\n    * @param {Float} [y = 0] - rectangle's y position\n    * @param {Float} [width = this.width] - rectangle's width\n    * @param {Float} [height = this.height] - rectangle's height\n    * @returns {void}\n  */\n  fillRect = (x = 0, y = 0, width = this.width, height = this.height) => {\n    this._context.fillRect(x, y, width, height);\n    this._imageDataHandler = null;\n  }\n\n  /**\n    * draws a line to a point on the context.\n    * @returns {void}\n  */\n  lineTo = (...args) => {\n    this._context.lineTo(...args);\n  }\n\n  /**\n    * moves to a point on the context.\n    * @returns {void}\n  */\n  moveTo = (...args) => {\n    this._context.moveTo(...args);\n  }\n\n  /**\n    * draws a quadratic curve to a point on the context.\n    * @returns {void}\n  */\n  quadraticCurveTo = (...args) => {\n    this._context.quadraticCurveTo(...args);\n  }\n\n  /**\n    * draws a rectangle on the context.\n    * @param {Float} [x = 0] - rectangle's x position\n    * @param {Float} [y = 0] - rectangle's y position\n    * @param {Float} [width = this.width] - rectangle's width\n    * @param {Float} [height = this.height] - rectangle's height\n    * @returns {void}\n  */\n  rect = (x = 0, y = 0, width = this.width, height = this.height) => {\n    this._context.rect(x, y, width, height);\n  }\n\n  // scale: no scale method! use resize instead!\n\n  /**\n    * strokes the context's current path.\n    * @returns {void}\n  */\n  stroke = (...args) => {\n    this._context.stroke(...args);\n    this._imageDataHandler = null;\n  }\n\n  /* *********************\n  * transformation methods\n  ***********************/\n\n  /**\n    * resets all transforms on the context to zero.\n    * @returns {void}\n  */\n  resetTransform = () => {\n    this._context.resetTransform();\n    // if canvas was scaled it would otherwise be undone\n    this._context.scale(this._devicePixelRatio, this._devicePixelRatio);\n  }\n\n  /**\n    * restores context to a saved state of popped off of a stack.\n    * @returns {void}\n  */\n  restore = () => {\n    this._context.restore();\n  }\n\n  /**\n    * cumulatively rotates the context around x/y coordinates.\n    * @param {Float} angle - amount to rotate\n    * @param {Float} [x = this.width / 2] - center x position\n    * @param {Float} [y = this.height / 2] - center y position\n    * @returns {void}\n  */\n  rotate = (angle, x = 0.5 * this.width, y = 0.5 * this.height) => {\n    if (!angle) {\n      return;\n    }\n    rotate(angle, x, y, this._context, this._context.transform);\n  }\n\n  /**\n    * pushes a saved state of the curent context onto a stack.\n    * @returns {void}\n  */\n  save = () => {\n    this._context.save();\n  }\n\n  /**\n    * resets the context's rotation to a new amount around x/y coordinates.\n    * @param {Float} angle - amount to rotate\n    * @param {Float} [x = this.width / 2] - center x position\n    * @param {Float} [y = this.height / 2] - center y position\n    * @returns {void}\n  */\n  setRotate = (angle, x = 0.5 * this.width, y = 0.5 * this.height) => {\n    rotate(angle, x, y, this._context, this.setTransform);\n  }\n\n  /**\n    * resets the context's transform to new values.\n    * @param {Float} xScale - horizontal scale\n    * @param {Float} xSkew - horizontal skew\n    * @param {Float} ySkew - verical skew\n    * @param {Float} yScale - vertical movement\n    * @param {Float} dx - horizontal movement\n    * @param {Float} dy - vertical movement\n    * @returns {void}\n  */\n  setTransform = (xScale, xSkew, ySkew, yScale, dx, dy) => {\n    xScale *= this._devicePixelRatio;\n    xSkew *= this._devicePixelRatio;\n    ySkew *= this._devicePixelRatio;\n    yScale *= this._devicePixelRatio;\n    dx *= this._devicePixelRatio;\n    dy *= this._devicePixelRatio;\n    this._context.setTransform(xScale, xSkew, ySkew, yScale, dx, dy);\n  }\n\n  /**\n    * sets the context's grid to coordinates.\n    * @param {Float} dx - horizontal movement\n    * @param {Float} dy - vertical movement\n    * @returns {void}\n  */\n  setTranslate = (dx, dy) => {\n    this.setTransform(1, 0, 0, 1, dx, dy);\n  }\n\n  /**\n    * cumulatively moves the context's grid by coordinates.\n    * @param {Float} dx - horizontal movement\n    * @param {Float} dy - vertical movement\n    * @returns {void}\n  */\n  translate = (dx, dy) => {\n    this._context.translate(dx, dy);\n  }\n\n  /* ***********\n  * misc methods\n  *************/\n\n  // eslint-disable valid-jsdoc\n  /**\n    * creates a blank ImageData based on provided width/height.\n    * method overloading to reflect CanvasRenderingContext2D.createImageData.\n    * @param {Number} width - a width amount\n    * @param {Number} height - a height amount\n    * @returns {void}\n  */\n  /**\n    * creates a blank ImageData based on a provided ImageData's dimensions.\n    * method overloading to reflect CanvasRenderingContext2D.createImageData.\n    * @param {ImageData} imageData - an existing ImageData instance\n    * @returns {void}\n  */\n  // eslint-enable valid-jsdoc\n  createImageData = (imageDataOrWidth, height) => {\n    return this._context.createImageData(imageDataOrWidth, height);\n  }\n\n  /* *************\n  * static methods\n  ***************/\n\n  /**\n    * returns Path2D of a path approximately through an array of points.\n    * @param {Array} points - array of points\n    * @param {Path2D} [path = new Path2D()] - Path2D instance to add instructions to\n    * @returns {void}\n  */\n  static quadraticThrough(points, path = new Path2D()) {\n    const { length } = points;\n    let lastPoint;\n    let nextPoint;\n    for (let i = 0; i < length - 1; i++) {\n      lastPoint = nextPoint || points[0];\n      nextPoint = points[i + 1];\n      if (i === 0) {\n        path.moveTo(lastPoint.x, lastPoint.y);\n      } else if (i < length - 2) {\n        const avgX = (lastPoint.x + nextPoint.x) / 2;\n        const avgY = (lastPoint.y + nextPoint.y) / 2;\n        path.quadraticCurveTo(lastPoint.x, lastPoint.y, avgX, avgY);\n      } else {\n        path.quadraticCurveTo(lastPoint.x, lastPoint.y, nextPoint.x, nextPoint.y);\n      }\n    }\n    return path;\n  }\n}\n","import {modulo} from '@danehansen/math';\n\nexport function toRadians(degrees) {\n  return degrees * Math.PI / 180;\n}\n\nexport function toDegrees(radians) {\n  return radians * 180 / Math.PI;\n}\n\nexport function toRadianDirection(degrees) {\n  const circ = Math.PI * 2;\n  const radians = toRadians(-degrees);\n  const offset = radians + circ * 0.25;\n  return modulo(offset, circ);\n}\n\nexport function toDegreeDirection(radians) {\n  const degrees = toDegrees(-radians);\n  return modulo(degrees + 90, 360);\n}\n","export const DEFAULT_TRANSPOSITION = 300;\nexport const EQ_FREQUENCIES = [32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384];\nexport const RADIANS_IN_CIRCLE = Math.PI * 2;\n\nexport const MODES = [\n  {\n    name: 'I ionian (major)',\n    chords: ['I', null, 'ii', null, 'iii', 'IV', null, 'V', null, 'vi', null, 'viiº'],\n  },\n  {\n    name: 'II dorian',\n    chords: ['i', null, 'ii', 'III', null, 'IV', null, 'v', null, 'viº', 'VII', null],\n  },\n  {\n    name: 'III phrygian',\n    chords: ['i', 'II', null, 'III', null, 'iv', null, 'vº', 'VI', null, 'vii', null],\n  },\n  {\n    name: 'IV lydian',\n    chords: ['I', null, 'II', null, 'iii', null, 'ivº ', 'V', null, 'vi', null, 'vii'],\n  },\n  {\n    name: 'V mixolydian',\n    chords: ['I', null, 'ii', null, 'iiiº', 'IV', null, 'v', null, 'vi', 'VII', null],\n  },\n  {\n    name: 'VI aeolian (minor)',\n    chords: ['i', null, 'iiº', 'III', null, 'iv', null, 'v', 'VI', null, 'VII', null],\n  },\n  {\n    name: 'VII locrian',\n    chords: ['iº', 'II', null, 'iii', null, 'iv', 'V',  null, 'VI', null, 'vii', null],\n  },\n  {\n    name: 'major pentatonic',\n    chords: ['I', null, 'ii', null, 'iii', null, null, 'V', null, 'vi', null, null],\n  },\n  {\n    name: 'minor pentatonic',\n    chords: ['i', null, null, 'III', null, 'iv', null, 'v', null, null, 'VII', null],\n  },\n  {\n    name: 'blues major',\n    chords: ['I', null, 'ii', null, null, 'IV', null, 'v', null, 'vi', null, null],\n  },\n  {\n    name: 'blues minor',\n    chords: ['i', null, null, 'III', null, 'iv', null, null, 'VI', null, 'vii', null],\n  },\n  {\n    name: 'egyptian',\n    chords: ['i', null, 'ii', null, null, 'IV', null, 'v', null, null, 'VII', null],\n  },\n];\n\nexport const OSCILLATOR_TYPES = {\n  SINE: 'sine',\n  SQUARE: 'square',\n  SAWTOOTH: 'sawtooth',\n  TRIANGLE: 'triangle',\n};\n\nexport const TEMPERMENT_TYPES = {\n  EQUAL: 'equal',\n  JUST: 'just',\n  MEANTONE: 'meantone',\n  PYTHAGOREAN: 'pythagorean',\n};\n","import {toRadianDirection} from '../../util/math';\nimport {RADIANS_IN_CIRCLE} from '../../util/constants';\n\nfunction findDirectionalColor(direction) {\n  direction -= RADIANS_IN_CIRCLE * 0.25;\n  const colorSlice = RADIANS_IN_CIRCLE / 3;\n  const cosR = Math.cos(-direction);\n  const cosG = Math.cos(-direction - colorSlice);\n  const cosB = Math.cos(-direction + colorSlice);\n\n  const r = Math.round(cosR * 255 * 0.5 + 255 * 0.5);\n  const g = Math.round(cosG * 255 * 0.5 + 255 * 0.5);\n  const b = Math.round(cosB * 255 * 0.5 + 255 * 0.5);\n\n  return {r, g, b};\n}\n\nexport default function findColors(semitones, pitchSequence) {\n  const colors = [];\n  const buttonSlice = 360 / semitones;\n  for(let i = 0; i < semitones; i++) {\n    colors.push(findDirectionalColor(toRadianDirection(i * buttonSlice)));\n  }\n  console.log({semitones, pitchSequence, colors})\n  return colors;\n}\n","import {modulo} from '@danehansen/math';\nimport {RADIANS_IN_CIRCLE} from '../../util/constants';\n\nfunction flipRadiansVertically(radians) {\n  return Math.atan2(-Math.sin(radians), Math.cos(radians));\n}\n\nexport default function fillSlice(canvas, color, diameter, startRadians, endRadians, outerRadius, holeRadius, isInKey) {\n  const center = diameter / 2;\n  const isCircle = modulo(startRadians, RADIANS_IN_CIRCLE) === modulo(endRadians, RADIANS_IN_CIRCLE);\n\n  canvas.beginPath();\n  canvas.fillStyle =`rgb(${color.r}, ${color.g}, ${color.b})`;\n\n  if (isCircle) {\n    canvas.arc(center, center, center * outerRadius, 0, RADIANS_IN_CIRCLE);\n  } else {\n    // clockwise straight edge\n    let cos = Math.cos(startRadians);\n    let sin = Math.sin(startRadians);\n    canvas.moveTo(center + cos * center * holeRadius, center + sin * -center * holeRadius);\n    canvas.lineTo(center + cos * center * outerRadius, center + sin * -center * outerRadius);\n\n    // outer arc\n    canvas.arc(center, center, center * outerRadius, flipRadiansVertically(startRadians), flipRadiansVertically(endRadians), true);\n\n    // anticlockwise straight edge\n    cos = Math.cos(endRadians);\n    sin = Math.sin(endRadians);\n    canvas.moveTo(center + cos * center * outerRadius, center + sin * -center * outerRadius);\n    canvas.lineTo(center + cos * center * holeRadius, center + sin * -center * holeRadius);\n\n    // inner arc\n    canvas.arc(center, center, center * holeRadius, flipRadiansVertically(endRadians), flipRadiansVertically(startRadians), false);\n  }\n\n  canvas.fill();\n\n  if (isCircle) {\n    canvas.beginPath();\n    canvas.globalCompositeOperation = 'destination-out';\n    canvas.arc(center, center, center * holeRadius, 0, RADIANS_IN_CIRCLE);\n    canvas.fill();\n    canvas.globalCompositeOperation = 'source-over';\n  }\n}\n","export const MIN_FREQ = 20;\nexport const MAX_FREQ = 20000;\nexport const SEMITONES = 12;\nexport const PITCH_NAMES = ['A', 'A♯/B♭', 'B', 'C', 'C♯/D♭', 'D', 'D♯/E♭', 'E', 'F', 'F♯/G♭', 'G', 'G♯/A♭'];\n\nexport function findInterval(fA, fB) {\n  const cents = SEMITONES * 100 * Math.log2(fB / fA);\n  return cents;\n}\n\nexport function transposeFrequency(frequency, cents) {\n  return frequency * Math.pow(Math.pow(2, 1 / SEMITONES), (cents / 100));\n}\n\nexport const A4 = {\n  415: 'baroque',\n  427: 'classical',\n  428: 'classical',\n  429: 'classical',\n  430: 'classical',\n  430.54: 'scientific',\n  432: '“frequency of the universe”',\n  435: 'diapson normal',\n  439: 'new philharmonic',\n  440: 'stuttgart',\n  452: 'old philharmonic',\n  466: 'chorton',\n  DEFAULT: 440,\n};\n","import {findInterval, SEMITONES} from './music';\n\nexport default function findIntervalRatio(fRoot, fComparison) {\n  const tolerance = 1;\n  const cents = findInterval(fRoot, fComparison) % (SEMITONES * 100);\n\n  if (Math.abs(cents - 100) < tolerance || Math.abs(cents + 1100) < tolerance) {\n    return [16, 15];\n  }\n  if (Math.abs(cents - 1100) < tolerance || Math.abs(cents + 100) < tolerance) {\n    return [15, 16];\n  }\n\n  if (Math.abs(cents - 200) < tolerance || Math.abs(cents + 1000) < tolerance) {\n    return [9, 8];\n  }\n  if (Math.abs(cents - 1000) < tolerance || Math.abs(cents + 200) < tolerance) {\n    return [8, 9];\n  }\n\n  if (Math.abs(cents - 300) < tolerance || Math.abs(cents + 900) < tolerance) {\n    return [5, 3];\n  }\n  if (Math.abs(cents - 900) < tolerance || Math.abs(cents + 300) < tolerance) {\n    return [3, 5];\n  }\n\n  if (Math.abs(cents - 400) < tolerance || Math.abs(cents + 800) < tolerance) {\n    return [5, 4];\n  }\n  if (Math.abs(cents - 800) < tolerance || Math.abs(cents + 400) < tolerance) {\n    return [4, 5];\n  }\n\n  if (Math.abs(cents - 500) < tolerance || Math.abs(cents + 700) < tolerance) {\n    return [3, 2];\n  }\n  if (Math.abs(cents - 700) < tolerance || Math.abs(cents + 500) < tolerance) {\n    return [2, 3];\n  }\n\n  if (Math.abs(cents - 600) < tolerance || Math.abs(cents + 600) < tolerance) {\n    return [13, 9];\n  }\n}\n","import findIntervalRatio from '../../util/findIntervalRatio';\nimport {RADIANS_IN_CIRCLE} from '../../util/constants';\n\nexport default function drawInterval(radianA, radianB, diameter, canvas, radius, frequencyA, frequencyB, colorA, colorB) {\n  const center = diameter / 2;\n\n  const cosA = Math.cos(radianA);\n  const sinA = Math.sin(-radianA);\n\n  const cosB = Math.cos(radianB);\n  const sinB = Math.sin(-radianB);\n\n  const pointA = {\n    x: center + cosA * center * radius,\n    y: center + sinA * center * radius,\n  };\n\n  const pointB = {\n    x: center + cosB * center * radius,\n    y: center + sinB * center * radius,\n  };\n\n  const interval = findIntervalRatio(frequencyA, frequencyB);\n  if (interval) {\n    canvas.lineWidth = 1;\n    const xDiff = pointB.x - pointA.x;\n    const yDiff = pointB.y - pointA.y;\n    const diff = Math.sqrt(Math.pow(xDiff, 2) + Math.pow(yDiff, 2));\n    const radiusA = diff / interval[0] / 2;\n    const radiusB = diff / interval[1] / 2;\n\n    canvas.strokeStyle = `rgb(${colorA.r}, ${colorA.g}, ${colorA.b})`;\n    for (let i = 0; i < interval[0]; i++) {\n      canvas.beginPath();\n      const centerX = pointA.x + xDiff / interval[0] * (i + 0.5);\n      const centerY = pointA.y + yDiff / interval[0] * (i + 0.5);\n      canvas.arc(centerX, centerY, radiusA, 0, RADIANS_IN_CIRCLE);\n      canvas.stroke();\n    }\n\n    canvas.strokeStyle = `rgb(${colorB.r}, ${colorB.g}, ${colorB.b})`;\n    for (let i = 0; i < interval[1]; i++) {\n      canvas.beginPath();\n      const centerX = pointA.x + xDiff / interval[1] * (i + 0.5);\n      const centerY = pointA.y + yDiff / interval[1] * (i + 0.5);\n      canvas.arc(centerX, centerY, radiusB, 0, RADIANS_IN_CIRCLE);\n      canvas.stroke();\n    }\n  }\n\n  canvas.globalCompositeOperation = \"source-over\";\n  canvas.strokeStyle = \"white\";\n  canvas.lineWidth = 2;\n  canvas.beginPath();\n  canvas.moveTo(pointA.x, pointA.y);\n  canvas.lineTo(pointB.x, pointB.y);\n  canvas.stroke();\n}\n","import styles from './Display.module.scss';\nimport classnames from 'classnames';\nimport React from 'react';\nimport Canvas from './canvas';\nimport {toRadianDirection} from '../../util/math';\nimport {MODES, RADIANS_IN_CIRCLE} from '../../util/constants';\nimport {useState, useEffect, useRef} from 'react';\nimport findColors from './findColors';\nimport fillSlice from './fillSlice';\nimport drawInterval from './drawInterval';\n\nexport default function Display({className, activePitches, baseFrequencies, diameter, mode, pitchSequence}) {\n  const rootNode = useRef();\n\n  const [root, setRoot] = useState(null);\n  const [buffer, setBuffer] = useState(null);\n  useEffect(() => {\n    if (!rootNode.current) {\n      return;\n    }\n    setRoot(new Canvas(rootNode.current));\n    setBuffer(new Canvas(undefined, diameter, diameter));\n  }, [rootNode, diameter]);\n\n  useEffect(() => {\n    if (!root) {\n      return;\n    }\n    root.resize(diameter, diameter);\n    buffer.resize(diameter, diameter);\n  }, [root, buffer, diameter]);\n\n  useEffect(() => {\n    if (!root) {\n      return;\n    }\n\n    const semitones = pitchSequence.length;\n    const colors = findColors(semitones, pitchSequence);\n\n    function connectPitches() {\n      for (let i = 0; i < activePitches.length; i++) {\n        const pitchA = activePitches[i];\n        const degreesA = 360 / semitones * pitchSequence.indexOf(pitchA);\n        const frequencyA = baseFrequencies[pitchSequence.indexOf(pitchA)];\n        for (let j = i + 1; j < activePitches.length; j++) {\n          const pitchB = activePitches[j];\n          const degreesB = 360 / semitones * pitchSequence.indexOf(pitchB);\n          const frequencyB = baseFrequencies[pitchSequence.indexOf(pitchB)];\n          const colorA = colors[pitchA];\n          const colorB = colors[pitchB]\n          drawInterval(toRadianDirection(degreesA), toRadianDirection(degreesB), diameter, buffer, 0.4, frequencyA, frequencyB, colorA, colorB);\n        }\n      }\n    }\n\n    function drawSlices() {\n      const halfSlice = RADIANS_IN_CIRCLE / semitones / 2;\n      const {chords} = MODES[mode];\n\n      for (let i = 0; i < semitones; i++) {\n        const pitch = pitchSequence[i];\n        const degrees = pitch / semitones * 360;\n        const color = colors[i];\n        const isActive = activePitches.indexOf(i) >= 0;\n        const radians = toRadianDirection(degrees);\n        const isInKey = !!chords[i];\n\n        fillSlice(buffer, color, diameter, radians - halfSlice, radians + halfSlice, isActive ? 1 : 0.95, isActive ? 0.12 : 0.1, isInKey);\n      }\n    }\n\n    root.clearRect();\n    buffer.clearRect();\n    drawSlices();\n    connectPitches();\n    root.drawImage(buffer);\n  }, [activePitches, baseFrequencies, diameter, mode, pitchSequence, buffer, root]);\n\n  return <canvas className={classnames(styles.root, className)} ref={rootNode} />;\n}\n","import styles from './Menu.module.scss';\nimport {OSCILLATOR_TYPES, MODES} from '../../util/constants';\nimport {A4, SEMITONES, PITCH_NAMES} from '../../util/music';\nimport classnames from 'classnames';\n\nfunction findIncrementLabel(increment, semitones) {\n  let str = String(increment);\n  if (increment === 1) {\n    str += ` (chromatic)`;\n  } else if (increment === semitones - 1) {\n    str += ` (reverse chromatic)`;\n  } else if (semitones === SEMITONES && increment === 7) {\n    str += ` (circle of fifths)`;\n  }\n  return str;\n}\n\nexport default function Menu({\n    a4,\n    setA4,\n    eq,\n    setEq,\n    mode,\n    setMode,\n    oscillator,\n    setOscillator,\n    pitchSkip,\n    setPitchSkip,\n    semitones,\n    setSemitones,\n    transposition,\n    setTransposition,\n    pitchSkipOptions,\n  }) {\n\n  function onOscillatorChange({ target: { value }}) {\n    setOscillator(value);\n  }\n\n  function onEQChange(index, {target: {value}}) {\n    const values = [...eq]\n    values[index] = value;\n    setEq(values);\n  }\n\n  return (\n    <form className={styles.root}>\n      <div className={styles.property}>\n        <h2 className={styles.title}>Oscillator</h2>\n        <label className={styles.label}>\n          <input className={styles.input} type=\"radio\" checked={oscillator === OSCILLATOR_TYPES.SINE} value={OSCILLATOR_TYPES.SINE} onChange={onOscillatorChange} />\n          <div className={styles.labelText}>{OSCILLATOR_TYPES.SINE}</div>\n        </label>\n        <label className={styles.label}>\n          <input className={styles.input} type=\"radio\" checked={oscillator === OSCILLATOR_TYPES.SQUARE} value={OSCILLATOR_TYPES.SQUARE} onChange={onOscillatorChange} />\n          <div className={styles.labelText}>{OSCILLATOR_TYPES.SQUARE}</div>\n        </label>\n        <label className={styles.label}>\n          <input className={styles.input} type=\"radio\" checked={oscillator === OSCILLATOR_TYPES.SAWTOOTH} value={OSCILLATOR_TYPES.SAWTOOTH} onChange={onOscillatorChange} />\n          <div className={styles.labelText}>{OSCILLATOR_TYPES.SAWTOOTH}</div>\n        </label>\n        <label className={styles.label}>\n          <input className={styles.input} type=\"radio\" checked={oscillator === OSCILLATOR_TYPES.TRIANGLE} value={OSCILLATOR_TYPES.TRIANGLE} onChange={onOscillatorChange} />\n          <div className={styles.labelText}>{OSCILLATOR_TYPES.TRIANGLE}</div>\n        </label>\n      </div>\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>EQ<button className={styles.reset} onClick={function(){setEq([0,0,0,0,0,0,0,0,0,0])}}>reset</button></h2>\n        <div className={styles.verticalRangeHolder}>\n          {eq.map(function(value, i) {\n            return <input\n              key={i} className={styles.verticalRange} type=\"range\" min=\"-1\" max={1 * 0.27} step=\"0.01\" value={value} onChange={onEQChange.bind(null, i)} />\n          })}\n        </div>\n      </div>\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>Semitones<button className={styles.reset} onClick={function(){setSemitones(SEMITONES)}}>reset</button></h2>\n        <label className={classnames(styles.label, styles.wide)}>\n          <input className={styles.input} type=\"range\" min={1} max={120} value={semitones} step=\"1\" onChange={function({target: {value}}){setSemitones(parseInt(value))}} />\n          <div className={styles.labelText}>{semitones}</div>\n        </label>\n      </div>\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>Transposition</h2>\n          {PITCH_NAMES.map(function(name, index) {\n            return <label className={styles.label} key={name}>\n              <input className={styles.input} type=\"radio\" value={index * 100} name=\"transposition\" checked={transposition === index * 100} onChange={function({target:{value}}){setTransposition(parseInt(value))}} />\n              <div className={styles.labelText}>{name}</div>\n            </label>\n          })}\n      </div>\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>Mode</h2>\n          {MODES.map(function(modeObj, index) {\n            return <label className={styles.label} key={modeObj.name}>\n              <input className={styles.input} type=\"radio\" value={index} name=\"mode\" checked={mode === index} onChange={function({target:{value}}){setMode(parseInt(value))}} />\n              <div className={styles.labelText}>{modeObj.name}</div>\n            </label>\n          })}\n      </div>\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>Pitch Skip</h2>\n        {pitchSkipOptions.map(function(num) {\n          return <label className={styles.label} key={num}>\n            <input className={styles.input} type=\"radio\" value={num} name=\"pitchSkip\" checked={pitchSkip === num} onChange={function({target:{value}}){setPitchSkip(parseInt(value))}} />\n            <div className={styles.labelText}>{findIncrementLabel(num, semitones)}</div>\n          </label>\n        })}\n      </div>\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>A4<button className={styles.reset} onClick={function(){setA4(A4.DEFAULT)}}>reset</button></h2>\n        <label className={classnames(styles.label, styles.wide)}>\n          <input\n            className={styles.input}\n            type=\"range\"\n            min={390}\n            max={490}\n            value={a4}\n            step=\"1\"\n            onChange={function({target:{value}}){setA4(parseInt(value))}}\n          />\n          <div className={styles.labelText}>{a4}{A4[a4] && ` (${A4[a4]})`}</div>\n        </label>\n      </div>\n    </form>\n  );\n}\n","import styles from './PitchLabel.module.scss';\nimport classnames from 'classnames';\n\nexport default function PitchLabel({pitchNamesSorted, diameter, chordNamesSorted}) {\n  const semitones = pitchNamesSorted.length;\n\n  return <div className={styles.root}>{pitchNamesSorted.map(function(name, index) {\n    const degrees = 360 / semitones * index;\n    const isSmall = name.length > 1;\n    let transform;\n    let transformOrigin;\n    const radius = -0.475;\n\n    if (isSmall) {\n      transform = `translate(0%, -50%) rotate(${degrees}deg) translate(0%, 50%) translateY(${diameter * radius}px) rotate(${90}deg)`;\n      transformOrigin = `0 50%`;\n    } else {\n      transform = `translate(-50%, 0) rotate(${degrees}deg) translateY(${diameter * radius}px) `;\n      transformOrigin = `50% 0`;\n    }\n\n    return <div\n      className={classnames(styles.button, isSmall && styles.small, !chordNamesSorted[index] && styles.deemphesized)}\n      key={index}\n      style={{transform, transformOrigin}}\n    >{name}</div>\n  })}</div>\n}\n","import styles from './ChordLabel.module.scss';\n\nexport default function ChordLabel({chordNamesSorted, diameter}) {\n  const semitones = chordNamesSorted.length;\n\n  return <div className={styles.root}>{chordNamesSorted.map(function(name, index) {\n    if (!name) {\n      return null;\n    }\n    const degrees = 360 / semitones * index;\n\n    return <div\n      className={styles.button}\n      key={index}\n      style={{\n        transform: `translate(-50%, -50%) rotate(${degrees}deg) translateY(${diameter * -0.22}px)`,\n      }}\n    >{name}</div>\n  })}</div>\n}\n","import {useRef} from 'react';\nimport {modulo} from '@danehansen/math';\nimport {toDegreeDirection} from '../../util/math';\nimport styles from './TouchPad.module.scss';\nimport {RADIANS_IN_CIRCLE} from '../../util/constants';\n\nexport default function TouchPad({\n  pitchSequence,\n  callback,\n  diameter,\n}) {\n  const rootNode = useRef();\n\n  function onTouchMove(evt) {\n    anyTouch(evt);\n  }\n\n  function onTouchStart(evt) {\n    anyTouch(evt);\n  }\n\n  function onTouchEnd(evt) {\n    anyTouch(evt);\n  }\n\n  function onTouchCancel(evt) {\n    anyTouch(evt);\n  }\n\n  function anyTouch(evt) {\n    const {targetTouches} = evt;\n\n    if (!targetTouches) {\n      callback([]);\n    }\n    const rect = rootNode.current.getBoundingClientRect();\n    const halfSlice = RADIANS_IN_CIRCLE / pitchSequence.length / 2;\n    const pitches = []\n    for (let i = 0; i < targetTouches.length; i++) {\n      const {clientX, clientY} = targetTouches[i];\n      const x = clientX - rect.x - diameter * 0.5;\n      const y = -(clientY - rect.y - diameter * 0.5);\n      const length = Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));\n\n      if (length <= diameter / 2) {\n        const rad = modulo(Math.atan2(y, x), RADIANS_IN_CIRCLE);\n        const degrees = toDegreeDirection(rad - halfSlice);\n        const index = Math.floor(degrees / 360 * pitchSequence.length);\n        pitches.push(pitchSequence[index]);\n      }\n    }\n    callback(pitches);\n  }\n\n  return <div\n    ref={rootNode}\n    className={styles.root}\n    onTouchMove={onTouchMove}\n    onTouchStart={onTouchStart}\n    onTouchEnd={onTouchEnd}\n    onTouchCancel={onTouchCancel}\n  />;\n}\n","import {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function FirstTouch({component: Component = 'div', callback, ...rest}) {\n  const [hasCalledCallback, setHasCalledCallback] = useState(false);\n\n  function onClick() {\n    setHasCalledCallback(true);\n    callback();\n  }\n\n  return <Component onClick={hasCalledCallback ? null : onClick} {...rest}></Component>;\n}\n\nFirstTouch.propTypes = {\n  component: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  callback: PropTypes.func.isRequired,\n};\n","export default function findPitchSkipOptions(semitones) {\n  const increments = [1];\n  for(let i = 2; i < semitones; i++) {\n    if (findIncrementsOfSemitone(semitones, i)) {\n      increments.push(i);\n    }\n  }\n  return increments;\n}\n\nfunction findIncrementsOfSemitone(semitones, increment) {\n  const semitoneIndexes = [];\n  for(let i = 0; i < semitones; i++) {\n    const semitoneIndex = (i * increment) % semitones;\n    if (semitoneIndexes[semitoneIndex] !== undefined) {\n      return false;\n    } else {\n      semitoneIndexes[semitoneIndex] = semitoneIndex;\n    }\n  }\n  return semitoneIndexes;\n}\n","import {round} from '@danehansen/math';\nimport {PITCH_NAMES, SEMITONES} from './music';\n\nexport default function findPitchNames(semitones, transposition) {\n  return [...Array(semitones).keys()].map(function(i) {\n    const nameIndexFloat = (i / semitones * SEMITONES + (transposition / 100)) % SEMITONES;\n    const nameIndex = Math.floor(nameIndexFloat);\n    const prefix = PITCH_NAMES[nameIndex];\n    const remainder = nameIndexFloat % 1;\n    if (!remainder) {\n      return prefix;\n    }\n    return `${prefix}${String(round(remainder, 0.001)).slice(1,5)}`;\n  })\n}\n","import {MIN_FREQ, SEMITONES, transposeFrequency} from './music';\n\nexport default function findBaseFrequencies(semitones, rootFrequency) {\n  const frequencies = [];\n  for (let i = 0; i < semitones; i++) {\n    let frequency = transposeFrequency(rootFrequency, i * 100 * (SEMITONES / semitones));\n    while(frequency / 2 > MIN_FREQ) {\n      frequency /= 2;\n    }\n    frequencies.push(frequency);\n  }\n  return frequencies;\n}\n","export default function findPitchSequence(semitones, pitchSkip) {\n  const sequence = []\n  for (let i = 0; i < semitones; i++) {\n    sequence.push((i * pitchSkip) % semitones);\n  }\n  return sequence;\n}\n","export default function sortPitchNames(pitchNames, pitchSkip) {\n  const sorted = pitchNames.map(function(pitchName, index) {\n    return pitchNames[(index * pitchSkip) % pitchNames.length];\n  })\n  return sorted;\n}\n","import {MAX_FREQ} from './music';\nimport {EQ_FREQUENCIES} from './constants';\n\nlet frequencies;\nlet currentOscillators;\nlet audioContext;\nlet gainNode;\nlet headNode;\n\nexport function initializaAudio(baseFrequencies, eq) {\n  if (audioContext) {\n    audioContext.close();\n  }\n  audioContext = new (window.AudioContext || window.webkitAudioContext)();\n  gainNode = audioContext.createGain();\n  gainNode.connect(audioContext.destination);\n\n  // TODO: figure out this gain value\n  gainNode.gain.value = 0.1;\n\n  headNode = gainNode;\n  for(let i = 0; i < eq.length; i++) {\n    const eqNode = audioContext.createBiquadFilter();\n\n    if (i === 0) {\n      eqNode.type = 'lowshelf'\n    } else if (i === eq.length - 1) {\n      eqNode.type = 'highshelf'\n    } else {\n      eqNode.type = 'peaking'\n      // eqNode.Q.value = 1; // 0.0001 to 1000\n    }\n    eqNode.frequency.value = EQ_FREQUENCIES[i];\n    eqNode.gain.value = eq[i] * 40;\n    eqNode.connect(headNode)\n    headNode = eqNode;\n  }\n  gainNode.connect(headNode);\n\n  currentOscillators = [];\n  frequencies = baseFrequencies.map(function(frequency) {\n    return findAudibleOctaves(frequency);\n  })\n}\n\nfunction findAudibleOctaves(frequency) {\n  const frequencies = [];\n  while(frequency < MAX_FREQ) {\n    frequencies.push(frequency);\n    frequency *= 2;\n  }\n  return frequencies;\n}\n\nfunction startNote(index, type) {\n  const oscillators = [];\n  currentOscillators[index] = oscillators;\n  for(const frequency of frequencies[index]) {\n    const oscillatorNode = audioContext.createOscillator();\n    oscillatorNode.frequency.value = frequency;\n    oscillatorNode.type = type;\n    oscillatorNode.connect(headNode);\n    oscillatorNode.start();\n    oscillators.push(oscillatorNode);\n  }\n}\n\nfunction stopNote(index) {\n  for(const oscillator of currentOscillators[index]) {\n    oscillator.stop();\n  }\n  currentOscillators[index] = null;\n}\n\nexport function toggleNote(note, isPlaying, type) {\n  if (!currentOscillators) {\n    return;\n  }\n  if (isPlaying && !currentOscillators[note]) {\n    startNote(note, type);\n  } else if (!isPlaying && currentOscillators[note]) {\n    stopNote(note);\n  }\n}\n","import {useState, useEffect} from 'react';\n\nconst WIN = typeof window !== 'undefined' ? window : null;\n\nconst PLACEHOLDER_WINDOW = {\n  addEventListener() {},\n  innerHeight: 0,\n  innerWidth: 0,\n  removeEventListener() {},\n};\n\nexport function useViewportDimensions(win = WIN || PLACEHOLDER_WINDOW) {\n  const [innerHeight, setInnerHeight] = useState(win.innerHeight);\n  const [innerWidth, setInnerWidth] = useState(win.innerWidth);\n\n  useEffect(() => {\n    function onResize() {\n      setInnerHeight(win.innerHeight);\n      setInnerWidth(win.innerWidth);\n    }\n\n    win.addEventListener('resize', onResize);\n    return () => {\n      win.removeEventListener('resize', onResize);\n    }\n  }, [win]);\n\n  return [innerWidth, innerHeight];\n}\n","import styles from './App.module.scss';\nimport Display from './Display/Display';\nimport Menu from './Menu/Menu';\nimport PitchLabel from './PitchLabel/PitchLabel';\nimport ChordLabel from './ChordLabel/ChordLabel';\nimport TouchPad from './TouchPad/TouchPad';\nimport FirstTouch from './FirstTouch/FirstTouch';\nimport {OSCILLATOR_TYPES, DEFAULT_TRANSPOSITION, EQ_FREQUENCIES} from '../util/constants';\nimport {A4, SEMITONES, transposeFrequency} from '../util/music';\nimport {useState, useEffect} from 'react';\nimport findPitchSkipOptions from '../util/findPitchSkipOptions';\nimport findPitchNames from '../util/findPitchNames';\nimport findBaseFrequencies from '../util/findBaseFrequencies';\nimport findPitchSequence from '../util/findPitchSequence';\nimport findChordNames from '../util/findChordNames';\nimport sortPitchNames from '../util/sortPitchNames';\nimport {initializaAudio, toggleNote} from '../util/shepardTone';\nimport queryString from 'query-string';\nimport {isEqual} from 'lodash';\nimport {useViewportDimensions} from '../util/hooks';\n// import {random} from '@danehansen/math';\n\nexport default function App() {\n  const urlParams = queryString.parse(window.location.search, {parseNumbers: true, arrayFormat: 'comma'});\n  function useURLParams(key, value, def) {\n    useEffect(() => {\n      function changeParams() {\n        window.history.pushState(null, null, `${window.location.origin}${window.location.pathname}?${queryString.stringify(urlParams, {arrayFormat: 'comma'})}`);\n      }\n\n      if (!isEqual(urlParams[key], value)) {\n        if (isEqual(def, value) && urlParams[key] !== undefined) {\n          delete urlParams[key];\n          changeParams();\n        } else if (!isEqual(def, value)) {\n          urlParams[key] = value;\n          changeParams();\n        }\n      }\n    }, [value, key, def]);\n  }\n\n  const [a4, setA4] = useState(urlParams.a4 || A4.DEFAULT);\n  useURLParams('a4', a4, A4.DEFAULT);\n\n  const [oscillator, setOscillator] = useState(urlParams.oscillator || OSCILLATOR_TYPES.SINE);\n  useURLParams('oscillator', oscillator, OSCILLATOR_TYPES.SINE);\n\n  const [semitones, setSemitones] = useState(urlParams.semitones || SEMITONES);\n  useURLParams('semitones', semitones, SEMITONES);\n\n  const [transposition, setTransposition] = useState(urlParams.transposition !== undefined ? urlParams.transposition : DEFAULT_TRANSPOSITION);\n  useURLParams('transposition', transposition, DEFAULT_TRANSPOSITION);\n\n  const [pitchNames, setPitchNames] = useState(findPitchNames(semitones, transposition));\n  useEffect(() => {\n    setPitchNames(findPitchNames(semitones, transposition));\n  }, [semitones, transposition]);\n\n  const [pitchSkipOptions, setPitchSkipOptions] = useState(findPitchSkipOptions(semitones));\n  useEffect(() => {\n    setPitchSkipOptions(findPitchSkipOptions(semitones));\n  }, [semitones]);\n\n  const _ps = urlParams.pitchSkip ? urlParams.pitchSkip : pitchSkipOptions[0];\n  const [pitchSkip, setPitchSkip] = useState(_ps);\n  useEffect(() => {\n    if (pitchSkipOptions.indexOf(pitchSkip) < 0) {\n      setPitchSkip(pitchSkipOptions[0]);\n    }\n  }, [pitchSkipOptions, pitchSkip]);\n  useURLParams('pitchSkip', pitchSkip, _ps);\n\n  const _eq = [];\n  for (let i = 0; i < EQ_FREQUENCIES.length; i++) {\n    _eq.push(0);\n  }\n  const [eq, setEq] = useState(urlParams.eq || _eq);\n  useURLParams('eq', eq, _eq);\n\n  const [rootFrequency, setRootFrequency] = useState(transposeFrequency(a4, transposition));\n  useEffect(() => {\n    setRootFrequency(transposeFrequency(a4, transposition));\n  }, [transposition, a4]);\n\n  const [baseFrequencies, setBaseFrequencies] = useState(findBaseFrequencies(semitones, rootFrequency));\n  useEffect(() => {\n    setBaseFrequencies(findBaseFrequencies(semitones, rootFrequency));\n  }, [semitones, rootFrequency]);\n\n  const [pitchSequence, setPitchSequence] = useState(findPitchSequence(semitones, pitchSkip));\n  useEffect(() => {\n    setPitchSequence(findPitchSequence(semitones, pitchSkip));\n  }, [semitones, pitchSkip]);\n\n  const [pitchNamesSorted, setPitchNamesSorted] = useState(sortPitchNames(pitchNames, pitchSkip));\n  useEffect(() => {\n    setPitchNamesSorted(sortPitchNames(pitchNames, pitchSkip));\n  }, [pitchNames, pitchSkip]);\n\n  const [mode, setMode] = useState(urlParams.mode || 0);\n  useURLParams('mode', mode, 0);\n\n  const [chordNamesSorted, setChordNamesSorted] = useState([]);\n  useEffect(() => {\n    const chordNames = findChordNames(semitones, mode);\n    setChordNamesSorted(sortPitchNames(chordNames, pitchSkip));\n  }, [semitones, pitchSkip, mode]);\n\n  const [activePitches, setActivePitches] = useState([]);\n\n  const diameter = Math.min(...useViewportDimensions());\n\n  const [isMenuOpen, setMenuOpen] = useState(false);\n  function onMenuButtonClick() {\n    if (isMenuOpen) {\n      initializaAudio(baseFrequencies, eq);\n    }\n    setMenuOpen(!isMenuOpen);\n  }\n\n  function onTouchCallback(pitches) {\n\n    const randomPitches = [];\n    // if (pitches.length) {\n    //   const numRandomPitches = random(1, 3, true);\n    //   for (let i = 0; i < numRandomPitches; i++) {\n    //     let randomPitch;\n    //     do {\n    //       randomPitch = random(0, 12, true);\n    //     } while (pitches.indexOf(randomPitch) >= 0)\n    //     randomPitches.push(randomPitch);\n    //   }\n    // }\n\n    const newPitches = [...pitches, ...randomPitches]\n\n    for(let i = 0; i < semitones; i++) {\n      if (newPitches.indexOf(i) >= 0) {\n        toggleNote(i, true, oscillator)\n      } else {\n        toggleNote(i, false, oscillator)\n      }\n    }\n\n    setActivePitches(newPitches);\n  }\n\n  return (\n    <FirstTouch className={styles.root} callback={ initializaAudio.bind(null, baseFrequencies, eq)}>\n      <div className={styles.contentHolder}>\n      </div>\n      <div className={styles.wheelHolder} style={{width: `${diameter}px`, height: `${diameter}px`}}>\n        <Display\n          activePitches={activePitches}\n          baseFrequencies={baseFrequencies}\n          diameter={diameter}\n          pitchSequence={pitchSequence}\n          mode={mode}\n        />\n        <PitchLabel pitchNamesSorted={pitchNamesSorted} diameter={diameter} chordNamesSorted={chordNamesSorted} />\n        <ChordLabel chordNamesSorted={chordNamesSorted} diameter={diameter} />\n        <TouchPad\n          callback={onTouchCallback}\n          diameter={diameter}\n          pitchSequence={pitchSequence}\n        />\n      </div>\n\n      {isMenuOpen && <div className={styles.menuHolder}><Menu\n        a4={a4}\n        setA4={setA4}\n        eq={eq}\n        setEq={setEq}\n        mode={mode}\n        setMode={setMode}\n        oscillator={oscillator}\n        setOscillator={setOscillator}\n        pitchSkip={pitchSkip}\n        setPitchSkip={setPitchSkip}\n        semitones={semitones}\n        setSemitones={setSemitones}\n        transposition={transposition}\n        setTransposition={setTransposition}\n        pitchSkipOptions={pitchSkipOptions}\n      /></div>}\n\n      <button className={styles.menuButton} onClick={onMenuButtonClick}>{isMenuOpen ? 'x' : 'menu'}</button>\n    </FirstTouch>\n  );\n}\n","import {MODES} from './constants';\n\nexport default function findChordNames(semitones, modeIndex) {\n  const {chords} = MODES[modeIndex]\n  const {length} = chords;\n  return chords.map(function(name, index) {\n    const nameIndex = (index / semitones * length) % length;\n    if (!(nameIndex % 1)) {\n      return chords[nameIndex];\n    }\n    return null;\n  })\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/reset.module.scss';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__nWMuC\",\"menuHolder\":\"App_menuHolder__243kY\",\"menuButton\":\"App_menuButton__3IBp4\",\"contentHolder\":\"App_contentHolder__3Zpi7\",\"wheelHolder\":\"App_wheelHolder__1I76D\"};"],"sourceRoot":""}