{"version":3,"sources":["App/Menu/Menu.module.scss","App/VirtualFingers/VirtualFingers.module.scss","App/App.module.scss","App/PitchLabel/PitchLabel.module.scss","App/MatchingChords/MatchingChords.module.scss","App/Label/Label.module.scss","App/Button/Button.module.scss","App/ChordLabel/ChordLabel.module.scss","App/MultiTouchButtonGroup/MultiTouchButtonGroup.module.scss","App/Display/Display.module.scss","App/Input/Input.module.scss","App/TouchPad/TouchPad.module.scss","App/Display/canvas.js","util/music.js","util/constants.js","App/Display/findColors.js","App/Display/fillSlice.js","util/findIntervalRatio.js","App/Display/drawInterval.js","App/Display/Display.js","App/Input/Input.js","App/Label/Label.js","App/Button/Button.js","App/Menu/Menu.js","App/PitchLabel/PitchLabel.js","App/ChordLabel/ChordLabel.js","util/hooks.js","App/TouchPad/TouchPad.js","App/FirstTouch/FirstTouch.js","App/MatchingChords/MatchingChords.js","App/MultiTouchButtonGroup/MultiTouchButtonGroup.js","App/VirtualFingers/VirtualFingers.js","util/findPitchSkipOptions.js","util/findAllPitchNames.js","util/shepardTone.js","util/findBestPitchNames.js","util/findPitchNames.js","util/findBaseFrequency.js","util/findBaseFrequencies.js","util/findPitchSequence.js","util/findChordNames.js","util/sortPitchNames.js","util/findChords.js","util/replaceState.js","App/App.js","reportWebVitals.js","index.js"],"names":["module","exports","rotate","angle","x","y","ctx","func","cos","Math","sin","dx","dy","call","Canvas","element","document","createElement","width","offsetWidth","height","offsetHeight","devicePixelRatio","window","resize","isMounted","_element","parentNode","_width","_height","_devicePixelRatio","_imageDataHandler","_context","scale","arc","radius","startAngle","endAngle","PI","anticlockwise","beginPath","bezierCurveTo","clearRect","clip","closePath","drawImage","source","sx","sy","sWidth","sHeight","dWidth","dHeight","isCanvas","_drawImageDest","fill","fillRect","lineTo","moveTo","quadraticCurveTo","rect","stroke","resetTransform","restore","transform","save","setRotate","setTransform","xScale","xSkew","ySkew","yScale","setTranslate","translate","createImageData","imageDataOrWidth","this","getContext","str","fillStyle","globalCompositeOperation","num","globalAlpha","lineWidth","strokeStyle","points","lastPoint","nextPoint","path","Path2D","length","i","avgX","avgY","HUMAN_MAX_FREQ","STANDARD_SEMITONES","STANDARD_A4","CENTS_PER_STANDARD_SEMITONE","CENTS_PER_OCTAVE","transposeFrequency","frequency","cents","pow","IS_TOUCH_SCREEN","DEGREES_IN_CIRCLE","RADIANS_IN_CIRCLE","VIRTUAL_FINGER_UNITS","EQ_FREQUENCIES","push","A4","415","427","428","429","430","430.54","432","435","439","MODES","name","chords","useModeForNaming","OSCILLATOR_TYPES","SINE","SQUARE","TRIANGLE","CHORD_TYPES","suffix","textTransform","additionalPitches","findDirectionalColor","radians","colorSlice","cosR","cosG","cosB","r","round","g","b","flipRadiansVertically","atan2","fillSlice","canvas","color","diameter","startRadians","endRadians","outerRadius","holeRadius","isInKey","center","isCircle","modulo","findIntervalRatio","fRoot","fComparison","fA","fB","log2","abs","drawInterval","radianA","radianB","frequencyA","frequencyB","colorA","colorB","pointA","pointB","interval","xDiff","yDiff","diff","sqrt","radiusA","radiusB","centerX","centerY","Display","className","soundingPitchClasses","baseFrequencies","modeIndex","pitchSequence","rootNode","useRef","useState","root","setRoot","buffer","setBuffer","useEffect","current","undefined","semitones","colors","buttonSlice","toRadianDirection","findColors","halfSlice","degrees","isActive","indexOf","drawSlices","pitchClassA","sequenceIndexA","degreesA","j","pitchClassB","sequenceIndexB","degreesB","connectPitches","classnames","styles","ref","Input","rest","Label","children","text","wide","Button","href","component","Component","target","findIncrementLabel","increment","Menu","a4","setA4","allPitchNames","eq","setEq","setModeIndex","oscillatorType","setOscillatorType","pitchSkip","setPitchSkip","setSemitones","transposition","setTransposition","pitchSkipOptions","onOscillatorChange","value","onEQChange","index","values","property","title","Object","map","type","checked","onChange","reset","onClick","evt","preventDefault","verticalRangeHolder","verticalRange","min","max","step","bind","columns","parseInt","modeObj","valueText","keys","issue","PitchLabel","pitchNamesSorted","chordNamesSorted","transformOrigin","hasAccidental","isSmall","button","small","deemphesized","style","ChordLabel","WIN","PLACEHOLDER_WINDOW","addEventListener","innerHeight","innerWidth","removeEventListener","useViewportDimensions","win","setInnerHeight","setInnerWidth","onResize","useBoundingClientRect","top","bottom","left","right","setRect","getBoundingClientRect","TouchPad","setManualPitchClasses","togglePitchClass","isToggling","rootRef","pointerIsDown","setPointerIsDown","rootRect","findPitchIndex","clientX","clientY","rad","toDegreeDirection","floor","handle","pitchClasses","isTouchEvent","test","targetTouches","touch","listeners","onTouchStart","onTouchEnd","onTouchCancel","onTouchMove","onMouseUp","onMouseDown","onMouseMove","FirstTouch","callback","hasCalledCallback","setHasCalledCallback","onMouseEnter","onMouseLeave","onMouseOver","onMouseOut","MatchingChords","pitchNames","chordHolders","fingersNeeded","chordIndex","rootPitch","CHORD_TYPE","chord","chordHolder","MultiTouchButtonGroup","setActiveButtons","activeChildren","killTouches","STEPS","CENTS","VirtualFingers","hasMode","toggleVirtualFinger","setManualVirtualFingers","soundingVirtualFingers","halfStepIndexes","setHalfStepIndexes","stepIndexes","setStepIndexes","soundingVirtualStepIndexes","soundingVirtualHalfstepIndexes","forEach","units","virtualFingers","semitoneNodes","fraction","numerator","denominator","stepNodes","semitoneListeners","stepListeners","activeButtons","row","findPitchSkipOptions","increments","findIncrementsOfSemitone","semitoneIndexes","semitoneIndex","audioContext","headNode","PITCH_NAMES","m","findAllPitchNames","allNames","array","letters","lastLetterIndex","makeArrayWithNakedLettersInKeySpots","pitchName","lastPitchName","nextPitchName","Array","isArray","findIndex","node","addAccidentalsToKeySpots","hasFlats","join","hasSharps","fillInEmptySpots","findBestPitchNames","lowestNumOfIncidentals","Number","MAX_VALUE","lowestNames","t","names","incidentals","countKeyIncidentals","match","findPitchNames","nameIndexFloat","nameIndex","prefix","remainder","String","slice","findBaseFrequency","findBaseFrequencies","rootFrequency","frequencies","findPitchSequence","sequence","findChordNames","twelveChordsInMode","semitonesChordsInMode","sortPitchNames","currentOscillators","initializaAudio","close","gainNode","AudioContext","webkitAudioContext","createGain","connect","destination","gain","eqNode","createBiquadFilter","oscillator","stop","disconnect","findAudibleOctaves","findInversionsOfChord","pitches","results","pitch","sortOnFingersNeeded","chordA","chordB","sortOnChordsIndex","sortOnName","findFingersNeeded","correctPitches","replaceState","throttle","queryString","history","location","origin","pathname","App","params","arrayFormat","parseNumbers","urlParams","parse","search","useURLParams","key","def","changeParams","stringify","isEqual","setAllPitchNames","setPitchNames","setPitchSkipOptions","_ps","_eq","setRootFrequency","setBaseFrequencies","setPitchSequence","setPitchNamesSorted","setChordNamesSorted","manualPitchClasses","toggledPitchClasses","setToggledPitchClasses","manualVirtualFingers","toggledVirtualFingers","setToggledVirtualFingers","setSoundingPitchClasses","setSoundingVirtualFingers","newSoundingVirtualFingers","unionWith","newSoundingPitchClasses","virtualPitchClasses","virtualFinger","isSteps","RegExp","pitchClass","virtualFingerFraction","pitchClassFraction","steps","halfSteps","totalFraction","virtualPitchClass","oldOscillators","newOscillators","nonExistingOscillators","allFrequencies","baseFrequency","leftoverOscillators","pop","setValueAtTime","createOscillator","start","playPitchClasses","setActiveChords","chordTypes","matchingChords","kLimit","inversions","convertPitchToCents","iLimit","jLimit","k","rootCent","additionalCents","inversion","cent","convertCentsToPitch","obj","sort","findChords","activeChords","isMenuOpen","setMenuOpen","setIsToggling","contentHolder","newToggledVirtualFingers","splice","wheelHolder","newToggledPitchClasses","toggleLabel","menuHolder","menuButton","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"wGACAA,EAAOC,QAAU,CAAC,KAAO,mBAAmB,SAAW,uBAAuB,MAAQ,oBAAoB,MAAQ,oBAAoB,QAAU,sBAAsB,UAAY,wBAAwB,oBAAsB,kCAAkC,cAAgB,4BAA4B,MAAQ,sB,qBCAtTD,EAAOC,QAAU,CAAC,IAAM,4BAA4B,OAAS,+BAA+B,YAAc,sC,gBCA1GD,EAAOC,QAAU,CAAC,KAAO,kBAAkB,WAAa,wBAAwB,WAAa,wBAAwB,cAAgB,2BAA2B,IAAM,iBAAiB,OAAS,oBAAoB,YAAc,yBAAyB,YAAc,2B,kBCAzQD,EAAOC,QAAU,CAAC,KAAO,yBAAyB,OAAS,2BAA2B,cAAgB,kCAAkC,MAAQ,0BAA0B,aAAe,mC,iBCAzLD,EAAOC,QAAU,CAAC,KAAO,6BAA6B,YAAc,oCAAoC,eAAiB,uCAAuC,MAAQ,8BAA8B,eAAiB,uCAAuC,eAAiB,uCAAuC,eAAiB,uCAAuC,eAAiB,yC,iBCA/XD,EAAOC,QAAU,CAAC,KAAO,oBAAoB,KAAO,oBAAoB,KAAO,sB,kBCA/ED,EAAOC,QAAU,CAAC,KAAO,qBAAqB,SAAW,2B,gBCAzDD,EAAOC,QAAU,CAAC,KAAO,yBAAyB,OAAS,6B,gBCA3DD,EAAOC,QAAU,CAAC,YAAc,6C,mBCAhCD,EAAOC,QAAU,CAAC,KAAO,wB,kBCAzBD,EAAOC,QAAU,CAAC,KAAO,sB,gBCAzBD,EAAOC,QAAU,CAAC,KAAO,yB,uMCCzB,SAASC,EAAOC,EAAOC,EAAGC,EAAGC,EAAKC,GAChC,IAAMC,EAAMC,KAAKD,IAAIL,GACfO,EAAMD,KAAKC,IAAIP,GACfQ,EAAKP,EAAII,EAAMJ,EAAIM,GAAOL,EAC1BO,EAAKP,EAAIK,EAAMN,EAAII,EAAMH,EAC/BE,EAAKM,KAAKP,EAAKE,EAAKE,GAAMA,EAAKF,EAAKG,EAAIC,G,IAYrBE,E,WAKnB,aAAiK,IAAD,OAApJC,EAAoJ,uDAA1IC,SAASC,cAAc,UAAWC,EAAwG,uDAAhGH,EAAQI,YAAaC,EAA2E,uDAAlEL,EAAQM,aAAcC,EAA4C,uDAAzBC,OAAOD,iBAAkB,yBAchKE,OAAS,SAACN,EAAOE,GAAwD,IAAhDE,EAA+C,uDAA5BC,OAAOD,iBAKjD,IAAKJ,IAAUE,EAAQ,CACrB,IAAMK,IAAc,EAAKC,SAASC,WAClCT,EAAQO,EAAY,EAAKC,SAASP,YAAc,EAAKS,OACrDR,EAASK,EAAY,EAAKC,SAASL,aAAe,EAAKQ,QAEzD,EAAKC,kBAAoBR,EACzB,EAAKM,OAASV,EACd,EAAKW,QAAUT,EACf,EAAKM,SAASR,MAAQA,EAAQ,EAAKY,kBACnC,EAAKJ,SAASN,OAASA,EAAS,EAAKU,kBACrC,EAAKC,kBAAoB,KACzB,EAAKC,SAASC,MAAM,EAAKH,kBAAmB,EAAKA,oBA9B6G,KA8IhKI,IAAM,SAAC9B,EAAGC,EAAG8B,GAA2E,IAAnEC,EAAkE,uDAArD,EAAGC,EAAkD,uDAA7B,EAAV5B,KAAK6B,GAAQC,EAA0B,wDACrF,EAAKP,SAASE,IAAI9B,EAAGC,EAAG8B,EAAQC,EAAYC,EAAUE,IA/IwG,KAsJhKC,UAAY,WACV,EAAKR,SAASQ,aAvJgJ,KA8JhKC,cAAgB,WAAc,IAAD,GAC3B,IAAKT,UAASS,cAAd,oBA/J8J,KA0KhKC,UAAY,WAA6D,IAA5DtC,EAA2D,uDAAvD,EAAGC,EAAoD,uDAAhD,EAAGa,EAA6C,uDAArC,EAAKA,MAAOE,EAAyB,uDAAhB,EAAKA,OAC3D,EAAKY,SAASU,UAAUtC,EAAGC,EAAGa,EAAOE,GACrC,EAAKW,kBAAoB,MA5KqI,KAmLhKY,KAAO,WAAc,IAAD,GAClB,IAAKX,UAASW,KAAd,oBApL8J,KA2LhKC,UAAY,WACV,EAAKZ,SAASY,aA5LgJ,KAwNhKC,UAAY,SAACC,EAAQC,EAAIC,EAAIC,EAAQC,EAASvC,EAAIC,EAAIuC,EAAQC,GAE5D,IACMC,EAAWP,aAAkBhC,EADH,kBAAPH,EAGnB0C,GACFN,GAAM,EAAKjB,kBACXkB,GAAM,EAAKlB,kBACXmB,GAAU,EAAKnB,kBACfoB,GAAW,EAAKpB,kBAChB,EAAKE,SAASa,UAAUC,EAAO/B,QAASgC,EAAIC,EAAIC,EAAQC,EAASvC,EAAIC,EAAIuC,EAAQC,IAEjF,EAAKpB,SAASa,UAAUC,EAAQC,EAAIC,EAAIC,EAAQC,EAASvC,EAAIC,EAAIuC,EAAQC,GAElEC,GACTJ,EAASA,GAAUH,EAAO5B,MAC1BgC,EAAUA,GAAWJ,EAAO1B,OAC5B,EAAKkC,eAAeR,EAAO/B,QAASgC,EAAIC,EAAIC,EAAQC,IAEpD,EAAKI,eAAeR,EAAQC,EAAIC,EAAIC,EAAQC,GAE9C,EAAKnB,kBAAoB,MA7OqI,KAiPhKuB,eAAiB,SAACR,GAA4E,IAApEnC,EAAmE,uDAA9D,EAAGC,EAA2D,uDAAtD,EAAGuC,EAAmD,uDAA1CL,EAAO5B,MAAOkC,EAA4B,uDAAlBN,EAAO1B,OAChF,EAAKY,SAASa,UAAUC,EAAQnC,EAAIC,EAAIuC,EAAQC,IAlP8G,KAyPhKG,KAAO,WAAc,IAAD,GAClB,IAAKvB,UAASuB,KAAd,mBACA,EAAKxB,kBAAoB,MA3PqI,KAsQhKyB,SAAW,WAA6D,IAA5DpD,EAA2D,uDAAvD,EAAGC,EAAoD,uDAAhD,EAAGa,EAA6C,uDAArC,EAAKA,MAAOE,EAAyB,uDAAhB,EAAKA,OAC1D,EAAKY,SAASwB,SAASpD,EAAGC,EAAGa,EAAOE,GACpC,EAAKW,kBAAoB,MAxQqI,KA+QhK0B,OAAS,WAAc,IAAD,GACpB,IAAKzB,UAASyB,OAAd,oBAhR8J,KAuRhKC,OAAS,WAAc,IAAD,GACpB,IAAK1B,UAAS0B,OAAd,oBAxR8J,KA+RhKC,iBAAmB,WAAc,IAAD,GAC9B,IAAK3B,UAAS2B,iBAAd,oBAhS8J,KA2ShKC,KAAO,WAA6D,IAA5DxD,EAA2D,uDAAvD,EAAGC,EAAoD,uDAAhD,EAAGa,EAA6C,uDAArC,EAAKA,MAAOE,EAAyB,uDAAhB,EAAKA,OACtD,EAAKY,SAAS4B,KAAKxD,EAAGC,EAAGa,EAAOE,IA5S8H,KAqThKyC,OAAS,WAAc,IAAD,GACpB,IAAK7B,UAAS6B,OAAd,mBACA,EAAK9B,kBAAoB,MAvTqI,KAkUhK+B,eAAiB,WACf,EAAK9B,SAAS8B,iBAEd,EAAK9B,SAASC,MAAM,EAAKH,kBAAmB,EAAKA,oBArU6G,KA4UhKiC,QAAU,WACR,EAAK/B,SAAS+B,WA7UgJ,KAuVhK7D,OAAS,SAACC,GAAwD,IAAjDC,EAAgD,uDAA5C,GAAM,EAAKc,MAAOb,EAA0B,uDAAtB,GAAM,EAAKe,OAC/CjB,GAGLD,EAAOC,EAAOC,EAAGC,EAAG,EAAK2B,SAAU,EAAKA,SAASgC,YA3V6G,KAkWhKC,KAAO,WACL,EAAKjC,SAASiC,QAnWgJ,KA6WhKC,UAAY,SAAC/D,GAAwD,IAAjDC,EAAgD,uDAA5C,GAAM,EAAKc,MAAOb,EAA0B,uDAAtB,GAAM,EAAKe,OACvDlB,EAAOC,EAAOC,EAAGC,EAAG,EAAK2B,SAAU,EAAKmC,eA9WsH,KA2XhKA,aAAe,SAACC,EAAQC,EAAOC,EAAOC,EAAQ5D,EAAIC,GAChDwD,GAAU,EAAKtC,kBACfuC,GAAS,EAAKvC,kBACdwC,GAAS,EAAKxC,kBACdyC,GAAU,EAAKzC,kBACfnB,GAAM,EAAKmB,kBACXlB,GAAM,EAAKkB,kBACX,EAAKE,SAASmC,aAAaC,EAAQC,EAAOC,EAAOC,EAAQ5D,EAAIC,IAlYiG,KA2YhK4D,aAAe,SAAC7D,EAAIC,GAClB,EAAKuD,aAAa,EAAG,EAAG,EAAG,EAAGxD,EAAIC,IA5Y4H,KAqZhK6D,UAAY,SAAC9D,EAAIC,GACf,EAAKoB,SAASyC,UAAU9D,EAAIC,IAtZkI,KA4ahK8D,gBAAkB,SAACC,EAAkBvD,GACnC,OAAO,EAAKY,SAAS0C,gBAAgBC,EAAkBvD,IA5avDwD,KAAKlD,SAAWX,EAChB6D,KAAK5C,SAAW4C,KAAKlD,SAASmD,WAAW,MACzCD,KAAKpD,OAAON,EAAOE,EAAQE,G,yCAwC7B,WACE,OAAOsD,KAAKlD,W,kBAQd,WACE,OAAOkD,KAAK/C,U,4BAQd,WAME,OAAO+C,KAAK7C,oB,iBAQd,WACE,OAAO6C,KAAKhD,S,qBAYd,SAAckD,GACZF,KAAK5C,SAAS+C,UAAYD,I,oCAQ5B,SAA6BA,GAC3BF,KAAK5C,SAASgD,yBAA2BF,I,uBAQ3C,SAAgBG,GACdL,KAAK5C,SAASkD,YAAcD,I,qBAQ9B,SAAcA,GACZL,KAAK5C,SAASmD,UAAYF,I,uBAQ5B,SAAgBH,GACdF,KAAK5C,SAASoD,YAAcN,K,+BA6T9B,SAAwBO,GAItB,IAJoD,IAEhDC,EACAC,EAH0BC,EAAqB,uDAAd,IAAIC,OACjCC,EAAWL,EAAXK,OAGCC,EAAI,EAAGA,EAAID,EAAS,EAAGC,IAG9B,GAFAL,EAAYC,GAAaF,EAAO,GAChCE,EAAYF,EAAOM,EAAI,GACb,IAANA,EACFH,EAAK9B,OAAO4B,EAAUlF,EAAGkF,EAAUjF,QAC9B,GAAIsF,EAAID,EAAS,EAAG,CACzB,IAAME,GAAQN,EAAUlF,EAAImF,EAAUnF,GAAK,EACrCyF,GAAQP,EAAUjF,EAAIkF,EAAUlF,GAAK,EAC3CmF,EAAK7B,iBAAiB2B,EAAUlF,EAAGkF,EAAUjF,EAAGuF,EAAMC,QAEtDL,EAAK7B,iBAAiB2B,EAAUlF,EAAGkF,EAAUjF,EAAGkF,EAAUnF,EAAGmF,EAAUlF,GAG3E,OAAOmF,M,oBCjeEM,EAAiB,IACjBC,EAAqB,GACrBC,EAAc,IACdC,EAA8B,IAC9BC,EAAmBH,KAOzB,SAASI,EAAmBC,EAAWC,GAC5C,OAAOD,EAAY3F,KAAK6F,IAAI7F,KAAK6F,IAAI,EAAG,oBAA0BD,EAAQJ,GCD5E,I,aAXaM,GAAkB,iBAAkBhF,QAEpCiF,EAAoB,IACpBC,EAA8B,EAAVhG,KAAK6B,GACzBoE,EACJ,QADIA,EAEJ,QAGIC,EAAiB,GAC1BP,EAAY,EACVA,EAAYN,IAChBM,GAAa,IDbe,ICcOA,GAAaN,GAC9Ca,EAAeC,KAAKR,GAIjB,IAAMS,GAAE,GACbC,IAAK,UACLC,IAAK,YACLC,IAAK,YACLC,IAAK,YACLC,IAAK,YACLC,OAAQ,aACRC,IAAK,wCACLC,IAAK,iBACLC,IAAK,oBATQ,cAUZtB,EAAc,aAVF,cAWb,IAAK,oBAXQ,cAYb,IAAK,WAZQ,GAeFuB,EAAQ,CACnB,CACEC,KAAM,SACNC,OAAQ,GACRC,iBAAkB,GAEpB,CACEF,KAAM,mBACNC,OAAQ,CAAC,IAAK,KAAM,KAAM,KAAM,MAAO,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,YAE5E,CACED,KAAM,YACNC,OAAQ,CAAC,IAAK,KAAM,KAAM,MAAO,KAAM,KAAM,KAAM,IAAK,KAAM,SAAO,MAAO,OAE9E,CACED,KAAM,eACNC,OAAQ,CAAC,IAAK,KAAM,KAAM,MAAO,KAAM,KAAM,KAAM,QAAM,KAAM,KAAM,MAAO,OAE9E,CACED,KAAM,YACNC,OAAQ,CAAC,IAAK,KAAM,KAAM,KAAM,MAAO,KAAM,UAAQ,IAAK,KAAM,KAAM,KAAM,QAE9E,CACED,KAAM,eACNC,OAAQ,CAAC,IAAK,KAAM,KAAM,KAAM,UAAQ,KAAM,KAAM,IAAK,KAAM,KAAM,MAAO,OAE9E,CACED,KAAM,qBACNC,OAAQ,CAAC,IAAK,KAAM,SAAO,MAAO,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,MAAO,OAE9E,CACED,KAAM,cACNC,OAAQ,CAAC,QAAM,KAAM,KAAM,MAAO,KAAM,KAAM,IAAM,KAAM,KAAM,KAAM,MAAO,OAE/E,CACED,KAAM,mBACNC,OAAQ,CAAC,IAAK,KAAM,KAAM,KAAM,MAAO,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,MAC1EC,iBAAkB,GAEpB,CACEF,KAAM,mBACNC,OAAQ,CAAC,IAAK,KAAM,KAAM,MAAO,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,MAAO,MAC3EC,iBAAkB,GAEpB,CACEF,KAAM,cACNC,OAAQ,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,MACzEC,iBAAkB,GAEpB,CACEF,KAAM,cACNC,OAAQ,CAAC,IAAK,KAAM,KAAM,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,MAC5EC,iBAAkB,IAITC,EAAmB,CAC9BC,KAAM,OACNC,OAAQ,SAERC,SAAU,YAWCC,EAAc,CACzB,CACEP,KAAM,QACNQ,OAAQ,GACRC,cAAe,cACfC,kBAAmB,CAAC,IAAK,MAE3B,CACEV,KAAM,QACNQ,OAAQ,GACRC,cAAe,cACfC,kBAAmB,CAAC,IAAK,MAE3B,CACEV,KAAM,YACNQ,OAAQ,IACRC,cAAe,cACfC,kBAAmB,CAAC,IAAK,MAE3B,CACEV,KAAM,aACNQ,OAAQ,OACRC,cAAe,cACfC,kBAAmB,CAAC,IAAK,MAE3B,CACEV,KAAM,cACNQ,OAAQ,oCACRC,cAAe,cACfC,kBAAmB,CAAC,IAAK,IAAK,MAEhC,CACEV,KAAM,cACNQ,OAAQ,oCACRC,cAAe,cACfC,kBAAmB,CAAC,IAAK,IAAK,MAEhC,CACEV,KAAM,mBACNQ,OAAQ,oCACRC,cAAe,cACfC,kBAAmB,CAAC,IAAK,IAAK,MAEhC,CACEV,KAAM,gBACNQ,OAAQ,0CACRC,cAAe,cACfC,kBAAmB,CAAC,IAAK,IAAK,OAEhC,CACEV,KAAM,gBACNQ,OAAQ,oCACRC,cAAe,cACfC,kBAAmB,CAAC,IAAK,IAAK,MAEhC,CACEV,KAAM,oBACNQ,OAAQ,yCAAG,6CACXC,cAAe,cACfC,kBAAmB,CAAC,IAAK,IAAK,MAEhC,CACEV,KAAM,sBACNQ,OAAQ,qCACRC,cAAe,cACfC,kBAAmB,CAAC,IAAK,IAAK,OAEhC,CACEV,KAAM,qBACNQ,OAAQ,4CAAG,uCACXC,cAAe,cACfC,kBAAmB,CAAC,IAAK,IAAK,MAEhC,CACEV,KAAM,0BACNQ,OAAQ,wCACRC,cAAe,cACfC,kBAAmB,CAAC,IAAK,IAAK,OCpL3B,SAASC,EAAqBC,GACnCA,GAA+B,IAApB3B,EACX,IAAM4B,EAAa5B,EAAoB,EACjC6B,EAAO7H,KAAKD,KAAK4H,GACjBG,EAAO9H,KAAKD,KAAK4H,EAAUC,GAC3BG,EAAO/H,KAAKD,KAAK4H,EAAUC,GAMjC,MAAO,CAACI,EAJEhI,KAAKiI,MAAa,IAAPJ,EAAa,GAAM,OAI7BK,EAHDlI,KAAKiI,MAAa,IAAPH,EAAa,GAAM,OAG1BK,EAFJnI,KAAKiI,MAAa,IAAPF,EAAa,GAAM,QCT1C,SAASK,EAAsBT,GAC7B,OAAO3H,KAAKqI,OAAOrI,KAAKC,IAAI0H,GAAU3H,KAAKD,IAAI4H,IAGlC,SAASW,EAAUC,EAAQC,EAAOC,EAAUC,EAAcC,EAAYC,EAAaC,EAAYC,GAC5G,IAAMC,EAASN,EAAW,EACpBO,EAAWC,iBAAOP,EAAc1C,KAAuBiD,iBAAON,EAAY3C,GAKhF,GAHAuC,EAAOxG,YACPwG,EAAOjE,UAA6B,kBAAVkE,EAAP,cAAmCA,EAAMR,EAAzC,aAA+CQ,EAAMN,EAArD,aAA2DM,EAAML,EAAjE,KAAwEK,EAEvFQ,EACFT,EAAO9G,IAAIsH,EAAQA,EAAQA,EAASH,EAAa,EAAG5C,OAC/C,CAEL,IAAIjG,EAAMC,KAAKD,IAAI2I,GACfzI,EAAMD,KAAKC,IAAIyI,GACnBH,EAAOtF,OAAO8F,EAAShJ,EAAMgJ,EAASF,EAAYE,EAAS9I,GAAO8I,EAASF,GAC3EN,EAAOvF,OAAO+F,EAAShJ,EAAMgJ,EAASH,EAAaG,EAAS9I,GAAO8I,EAASH,GAG5EL,EAAO9G,IAAIsH,EAAQA,EAAQA,EAASH,EAAaR,EAAsBM,GAAeN,EAAsBO,IAAa,GAGzH5I,EAAMC,KAAKD,IAAI4I,GACf1I,EAAMD,KAAKC,IAAI0I,GACfJ,EAAOtF,OAAO8F,EAAShJ,EAAMgJ,EAASH,EAAaG,EAAS9I,GAAO8I,EAASH,GAC5EL,EAAOvF,OAAO+F,EAAShJ,EAAMgJ,EAASF,EAAYE,EAAS9I,GAAO8I,EAASF,GAG3EN,EAAO9G,IAAIsH,EAAQA,EAAQA,EAASF,EAAYT,EAAsBO,GAAaP,EAAsBM,IAAe,GAG1HH,EAAOzF,OAEHkG,IACFT,EAAOxG,YACPwG,EAAOhE,yBAA2B,kBAClCgE,EAAO9G,IAAIsH,EAAQA,EAAQA,EAASF,EAAY,EAAG7C,GACnDuC,EAAOzF,OACPyF,EAAOhE,yBAA2B,eCzCvB,SAAS2E,EAAkBC,EAAOC,GAC/C,IJK2BC,EAAIC,EIJzB1D,GJIqByD,EIJAF,EJIIG,EIJGF,EJKpB3D,EAAmBzF,KAAKuJ,KAAKD,EAAKD,GILC5D,GAEjD,OAAIzF,KAAKwJ,IAAI5D,EAAQ,KAHH,GAGuB5F,KAAKwJ,IAAI5D,EAAQ,MAHxC,EAIT,CAAC,GAAI,IAEV5F,KAAKwJ,IAAI5D,EAAQ,MANH,GAMwB5F,KAAKwJ,IAAI5D,EAAQ,KANzC,EAOT,CAAC,GAAI,IAGV5F,KAAKwJ,IAAI5D,EAAQ,KAVH,GAUuB5F,KAAKwJ,IAAI5D,EAAQ,KAVxC,EAWT,CAAC,EAAG,GAET5F,KAAKwJ,IAAI5D,EAAQ,KAbH,GAawB5F,KAAKwJ,IAAI5D,EAAQ,KAbzC,EAcT,CAAC,EAAG,GAGT5F,KAAKwJ,IAAI5D,EAAQ,KAjBH,GAiBuB5F,KAAKwJ,IAAI5D,EAAQ,KAjBxC,EAkBT,CAAC,EAAG,GAET5F,KAAKwJ,IAAI5D,EAAQ,KApBH,GAoBuB5F,KAAKwJ,IAAI5D,EAAQ,KApBxC,EAqBT,CAAC,EAAG,GAGT5F,KAAKwJ,IAAI5D,EAAQ,KAxBH,GAwBuB5F,KAAKwJ,IAAI5D,EAAQ,KAxBxC,EAyBT,CAAC,EAAG,GAET5F,KAAKwJ,IAAI5D,EAAQ,KA3BH,GA2BuB5F,KAAKwJ,IAAI5D,EAAQ,KA3BxC,EA4BT,CAAC,EAAG,GAGT5F,KAAKwJ,IAAI5D,EAAQ,KA/BH,GA+BuB5F,KAAKwJ,IAAI5D,EAAQ,KA/BxC,EAgCT,CAAC,EAAG,GAET5F,KAAKwJ,IAAI5D,EAAQ,KAlCH,GAkCuB5F,KAAKwJ,IAAI5D,EAAQ,KAlCxC,EAmCT,CAAC,EAAG,GAGT5F,KAAKwJ,IAAI5D,EAAQ,KAtCH,GAsCuB5F,KAAKwJ,IAAI5D,EAAQ,KAtCxC,EAuCT,CAAC,GAAI,GAGV5F,KAAKwJ,IAAI5D,EAAQ,MA1CH,GA0CwB5F,KAAKwJ,IAAI5D,EAAQ,MA1CzC,GA0C8D5F,KAAKwJ,IAAI5D,GA1CvE,EA2CT,CAAC,EAAG,QADb,EC1Ca,SAAS6D,EAAaC,EAASC,EAASlB,EAAUF,EAAQ7G,EAAQkI,EAAYC,EAAYC,EAAQC,GAC/G,IAAMhB,EAASN,EAAW,EAQpBuB,EAAS,CACbrK,EAAGoJ,EAPQ/I,KAAKD,IAAI2J,GAODX,EAASrH,EAC5B9B,EAAGmJ,EAPQ/I,KAAKC,KAAKyJ,GAOFX,EAASrH,GAGxBuI,EAAS,CACbtK,EAAGoJ,EATQ/I,KAAKD,IAAI4J,GASDZ,EAASrH,EAC5B9B,EAAGmJ,EATQ/I,KAAKC,KAAK0J,GASFZ,EAASrH,GAGxBwI,EAAWhB,EAAkBU,EAAYC,GAC/C,GAAIK,EAAU,CACZ3B,EAAO7D,UAAY,EACnB,IAAMyF,EAAQF,EAAOtK,EAAIqK,EAAOrK,EAC1ByK,EAAQH,EAAOrK,EAAIoK,EAAOpK,EAC1ByK,EAAOrK,KAAKsK,KAAKtK,KAAK6F,IAAIsE,EAAO,GAAKnK,KAAK6F,IAAIuE,EAAO,IACtDG,EAAUF,EAAOH,EAAS,GAAK,EAC/BM,EAAUH,EAAOH,EAAS,GAAK,EAErC3B,EAAO5D,YAAgC,kBAAXmF,EAAP,cAAoCA,EAAO9B,EAA3C,aAAiD8B,EAAO5B,EAAxD,aAA8D4B,EAAO3B,EAArE,KAA4E4B,EACjG,IAAK,IAAI7E,EAAI,EAAGA,EAAIgF,EAAS,GAAIhF,IAAK,CACpCqD,EAAOxG,YACP,IAAM0I,EAAUT,EAAOrK,EAAIwK,EAAQD,EAAS,IAAMhF,EAAI,IAChDwF,EAAUV,EAAOpK,EAAIwK,EAAQF,EAAS,IAAMhF,EAAI,IACtDqD,EAAO9G,IAAIgJ,EAASC,EAASH,EAAS,EAAGvE,GACzCuC,EAAOnF,SAGTmF,EAAO5D,YAAgC,kBAAXoF,EAAP,cAAoCA,EAAO/B,EAA3C,aAAiD+B,EAAO7B,EAAxD,aAA8D6B,EAAO5B,EAArE,KAA4E4B,EACjG,IAAK,IAAI7E,EAAI,EAAGA,EAAIgF,EAAS,GAAIhF,IAAK,CACpCqD,EAAOxG,YACP,IAAM0I,EAAUT,EAAOrK,EAAIwK,EAAQD,EAAS,IAAMhF,EAAI,IAChDwF,EAAUV,EAAOpK,EAAIwK,EAAQF,EAAS,IAAMhF,EAAI,IACtDqD,EAAO9G,IAAIgJ,EAASC,EAASF,EAAS,EAAGxE,GACzCuC,EAAOnF,UAIXmF,EAAOhE,yBAA2B,cAClCgE,EAAO5D,YAAc,QACrB4D,EAAO7D,UAAY,EACnB6D,EAAOxG,YACPwG,EAAOtF,OAAO+G,EAAOrK,EAAGqK,EAAOpK,GAC/B2I,EAAOvF,OAAOiH,EAAOtK,EAAGsK,EAAOrK,GAC/B2I,EAAOnF,SC7CM,SAASuH,EAAT,GAA0G,IAAxFC,EAAuF,EAAvFA,UAAWC,EAA4E,EAA5EA,qBAAsBC,EAAsD,EAAtDA,gBAAiBrC,EAAqC,EAArCA,SAAUsC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,cAChGC,EAAWC,mBADqG,EAG9FC,mBAAS,MAHqF,mBAG/GC,EAH+G,KAGzGC,EAHyG,OAI1FF,mBAAS,MAJiF,mBAI/GG,EAJ+G,KAIvGC,EAJuG,KAsEtH,OAjEAC,qBAAU,WACHP,EAASQ,UAGdJ,EAAQ,IAAIhL,EAAO4K,EAASQ,QAAShD,EAAUA,IAC/C8C,EAAU,IAAIlL,OAAOqL,EAAWjD,EAAUA,OACzC,CAACwC,EAAUxC,IAEd+C,qBAAU,WACHJ,IAGLA,EAAKrK,OAAO0H,EAAUA,GACtB6C,EAAOvK,OAAO0H,EAAUA,MACvB,CAAC2C,EAAME,EAAQ7C,IAElB+C,qBAAU,WACR,GAAKJ,EAAL,CAIA,IAAMO,EAAYX,EAAc/F,OAC1B2G,EJrBK,SAAoBD,GAGjC,IAFA,IAAMC,EAAS,GACTC,EAAc9F,EAAoB4F,EAChCzG,EAAI,EAAGA,EAAIyG,EAAWzG,IAC5B0G,EAAOzF,KAAKuB,EAAqBoE,4BAAkB5G,EAAI2G,KAEzD,OAAOD,EIeUG,CAAWJ,GAoC1BP,EAAKnJ,YACLqJ,EAAOrJ,YAjBP,WAIE,IAHA,IAAM+J,EAAYhG,EAAoB2F,EAAY,EAC3C3E,EAAUF,EAAMiE,GAAhB/D,OAEE9B,EAAI,EAAGA,EAAIyG,EAAWzG,IAAK,CAClC,IACM+G,EADQjB,EAAc9F,GACJyG,EAAY5F,EAC9ByC,EAAQoD,EAAO1G,GACfgH,EAAWrB,EAAqBsB,QAAQjH,IAAM,EAC9CyC,EAAUmE,4BAAkBG,GAChBjF,EAAO9B,GAEzBoD,EAAUgD,EAAQ9C,EAAOC,EAAUd,EAAUqE,EAAWrE,EAAUqE,EAAWE,EAAW,EAAI,IAAMA,EAAW,IAAO,KAMxHE,GApCA,WACE,IAAK,IAAIlH,EAAI,EAAGA,EAAI2F,EAAqB5F,OAAQC,IAK/C,IAJA,IAAMmH,EAAcxB,EAAqB3F,GACnCoH,EAAiBtB,EAAcmB,QAAQE,GACvCE,EAAWxG,EAAoB4F,EAAYW,EAC3C1C,EAAakB,EAAgBwB,GAC1BE,EAAItH,EAAI,EAAGsH,EAAI3B,EAAqB5F,OAAQuH,IAAK,CACxD,IAAMC,EAAc5B,EAAqB2B,GACnCE,EAAiB1B,EAAcmB,QAAQM,GACvCE,EAAW5G,EAAoB4F,EAAYe,EAC3C7C,EAAaiB,EAAgB4B,GAC7B5C,EAAS8B,EAAOU,GAChBvC,EAAS6B,EAAOc,GACtBjD,EAAaqC,4BAAkBS,GAAWT,4BAAkBa,GAAWlE,EAAU6C,EAAQ,GAAK1B,EAAYC,EAAYC,EAAQC,IAwBpI6C,GACAxB,EAAKhJ,UAAUkJ,MACd,CAACT,EAAsBC,EAAiBrC,EAAUsC,EAAWC,EAAeM,EAAQF,IAEhF,wBAAQR,UAAWiC,IAAWC,IAAO1B,KAAMR,GAAYmC,IAAK9B,I,oDC9EtD,SAAS+B,EAAT,GAAsC,IAAtBpC,EAAqB,EAArBA,UAAcqC,EAAO,6BAClD,OAAO,mCAAOrC,UAAWiC,IAAWC,IAAO1B,KAAMR,IAAgBqC,I,sBCDpD,SAASC,GAAT,GAA4D,IAA5CtC,EAA2C,EAA3CA,UAAWuC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,KAASJ,EAAO,sDACxE,OAAO,gDAAOrC,UAAWiC,IAAWC,KAAO1B,KAAMR,EAAWyC,GAAQP,KAAOO,OAAWJ,GAA/E,cACJE,IACEC,GAAQ,qBAAKxC,UAAWkC,KAAOM,KAAvB,SAA8BA,Q,wBCH9B,SAASE,GAAT,GAQX,IAPF1C,EAOC,EAPDA,UACA2C,EAMC,EANDA,KACArB,EAKC,EALDA,SAKC,IAHDsB,UAAUC,OAGT,MAHqBF,EAAO,IAAM,SAGlC,MAFDG,cAEC,MAFQH,GAAQ,SAEhB,EADEN,EACF,oEACD,OAAO,cAACQ,EAAD,aAAW7C,UAAWiC,IAAWC,KAAO1B,KAAMR,EAAWsB,GAAYY,KAAOZ,UAAWwB,OAAQA,EAAQH,KAAMA,GAAUN,ICLhI,SAASU,GAAmBC,EAAWjC,GACrC,GAAkB,IAAdiC,EACF,MAAO,YACF,GAAIA,IAAcjC,EAAY,EACnC,MAAO,gBAET,GAAIA,EAAYrG,IAAuB,EAAG,CACxC,GAAkB,IAAdsI,EACF,MAAO,mBACF,GAAIA,IAAcjC,EAAY,EACnC,MAAO,oBAGX,MAAM,QAAN,OAAeiC,EAAY,GAGd,SAASC,GAAT,GAiBT,IAhBFC,EAgBC,EAhBDA,GACAC,EAeC,EAfDA,MACAC,EAcC,EAdDA,cACAC,EAaC,EAbDA,GACAC,EAYC,EAZDA,MACAnD,EAWC,EAXDA,UACAoD,EAUC,EAVDA,aACAC,EASC,EATDA,eACAC,EAQC,EARDA,kBACAC,EAOC,EAPDA,UACAC,EAMC,EANDA,aACA5C,EAKC,EALDA,UACA6C,EAIC,EAJDA,aACAC,EAGC,EAHDA,cACAC,EAEC,EAFDA,iBACAC,EACC,EADDA,iBAGF,SAASC,EAAT,GAAmD,IAAXC,EAAU,EAApBnB,OAAUmB,MACtCR,EAAkBQ,GAGpB,SAASC,EAAWC,EAApB,GAA+C,IAAVF,EAAS,EAAlBnB,OAASmB,MAC7BG,EAAM,YAAOf,GACnBe,EAAOD,GAASF,EAChBX,EAAMc,GAGR,OACE,uBAAMpE,UAAWkC,IAAO1B,KAAxB,UACE,sBAAKR,UAAWkC,IAAOmC,SAAvB,UACE,oBAAIrE,UAAWkC,IAAOoC,MAAtB,wBACCC,OAAOH,OAAO9H,GAAkBkI,KAAI,SAACP,GACpC,OAAO,cAAC3B,GAAD,CAAmBE,KAAMyB,EAAzB,SACL,cAAC7B,EAAD,CAAOqC,KAAK,QAAQC,QAASlB,IAAmBS,EAAOA,MAAOA,EAAOU,SAAUX,KAD9DC,SAMvB,sBAAKjE,UAAWkC,IAAOmC,SAAvB,UACE,qBAAIrE,UAAWkC,IAAOoC,MAAtB,eAA+B,cAAC5B,GAAD,CAAQ1C,UAAWkC,IAAO0C,MAAOC,QAAS,SAACC,GAASA,EAAIC,iBAAkBzB,EAAMhI,EAAekJ,KAAI,kBAAM,OAAzG,sBAC/B,qBAAKxE,UAAWkC,IAAO8C,oBAAvB,SACG3B,EAAGmB,KAAI,SAACP,EAAO3J,GACd,OAAO,cAAC8H,EAAD,CACGpC,UAAWkC,IAAO+C,cAAeR,KAAK,QAAQS,IAAI,KAAKC,IAAK,IAAUC,KAAK,OAAOnB,MAAOA,EAAOU,SAAUT,EAAWmB,KAAK,KAAM/K,IAAnIA,WAKb,sBAAK0F,UAAWkC,IAAOmC,SAAvB,UACE,oBAAIrE,UAAWkC,IAAOoC,MAAtB,2BACA,qBAAKtE,UAAWkC,IAAOoD,QAAvB,SACGlC,EAAcoB,KAAI,SAACrI,EAAMgI,GACxB,OAAO,cAAC7B,GAAD,CAAOE,KAAMrG,EAAb,SACL,cAACiG,EAAD,CAAOqC,KAAK,QAAQR,MAAOE,EAAQvJ,EAA6BuB,KAAK,gBAAgBuI,QAASb,IAAkBM,EAAQvJ,EAA6B+J,SAAU,YAAuB,IAAbV,EAAY,EAApBnB,OAAQmB,MAAaH,EAAiByB,SAAStB,QADnL9H,WAOrC,sBAAK6D,UAAWkC,IAAOmC,SAAvB,UACE,oBAAIrE,UAAWkC,IAAOoC,MAAtB,kBACA,qBAAKtE,UAAWkC,IAAOoD,QAAvB,SACGpJ,EAAMsI,KAAI,SAACgB,EAASrB,GACnB,OAAO,cAAC7B,GAAD,CAAOE,KAAMgD,EAAQrJ,KAArB,SACL,cAACiG,EAAD,CAAOqC,KAAK,QAAQR,MAAOE,EAAOhI,KAAK,OAAOuI,QAASvE,IAAcgE,EAAOQ,SAAU,YAAuB,IAAbV,EAAY,EAApBnB,OAAQmB,MAAaV,EAAagC,SAAStB,QAD9FuB,EAAQrJ,cAOrD,sBAAK6D,UAAWkC,IAAOmC,SAAvB,UACE,qBAAIrE,UAAWkC,IAAOoC,MAAtB,sBAAsC,cAAC5B,GAAD,CAAQ1C,UAAWkC,IAAO0C,MAAOC,QAAS,SAACC,GAASA,EAAIC,iBAAkBnB,EAAalJ,IAAvF,mBAA2H,qBAAKsF,UAAWkC,IAAOuD,UAAvB,SAAmC1E,OACpM,cAACuB,GAAD,CAAOG,MAAI,EAAX,SACE,cAACL,EAAD,CAAOqC,KAAK,QAAQS,IAAK,EAAGC,IAAKtK,IAAyCoJ,MAAOlD,EAAW4D,SAAU,YAAwB,IAAbV,EAAY,EAArBnB,OAASmB,MAAaL,EAAa2B,SAAStB,YAIxJ,sBAAKjE,UAAWkC,IAAOmC,SAAvB,UACE,qBAAIrE,UAAWkC,IAAOoC,MAAtB,eAA+B,cAAC5B,GAAD,CAAQ1C,UAAWkC,IAAO0C,MAAOC,QAAS,SAACC,GAASA,EAAIC,iBAAkB5B,EAAMxI,IAAhF,mBAA6G,sBAAKqF,UAAWkC,IAAOuD,UAAvB,UAAmCvC,EAAI1H,EAAG0H,IAAH,YAAe1H,EAAG0H,GAAlB,WACnL,cAACZ,GAAD,CAAOG,MAAI,EAAX,SACE,cAACL,EAAD,CACEqC,KAAK,QACLS,IAAK9P,KAAK8P,IAAL,MAAA9P,KAAI,YAAQmP,OAAOmB,KAAKlK,KAC7B2J,IAAK/P,KAAK+P,IAAL,MAAA/P,KAAI,YAAQmP,OAAOmB,KAAKlK,KAC7ByI,MAAOf,EACPyB,SAAU,YAAuB,IAAbV,EAAY,EAApBnB,OAAQmB,MAAad,EAAMoC,SAAStB,YAKtD,sBAAKjE,UAAWkC,IAAOmC,SAAvB,UACE,oBAAIrE,UAAWkC,IAAOoC,MAAtB,sBACA,qBAAKtE,UAAWkC,IAAOoD,QAAvB,SACCvB,EAAiBS,KAAI,SAAC5K,GACrB,OAAO,cAAC0I,GAAD,CAAOE,KAAMO,GAAmBnJ,EAAKmH,GAArC,SACL,cAACqB,EAAD,CAAOqC,KAAK,QAAQR,MAAOrK,EAAKuC,KAAK,YAAYuI,QAAShB,IAAc9J,EAAK+K,SAAU,YAAuB,IAAbV,EAAY,EAApBnB,OAAQmB,MAAaN,EAAa4B,SAAStB,QADzErK,WAOjE,cAAC8I,GAAD,CACE1C,UAAWkC,IAAOyD,MAClBhD,KAAK,qDAFP,6B,wBC1HS,SAASiD,GAAT,GAAqE,IAAhDC,EAA+C,EAA/CA,iBAAkBhI,EAA6B,EAA7BA,SAAUiI,EAAmB,EAAnBA,iBACxD/E,EAAY8E,EAAiBxL,OAEnC,OAAO,qBAAK2F,UAAWkC,KAAO1B,KAAvB,SAA8BqF,EAAiBrB,KAAI,SAASrI,EAAMgI,GACvE,IAGIxL,EACAoN,EAJE1E,EAAUlG,EAAoB4F,EAAYoD,EAC1C6B,EAAiC,KAAb,OAAJ7J,QAAI,IAAJA,OAAA,EAAAA,EAAM9B,SAAiC,KAAb,OAAJ8B,QAAI,IAAJA,OAAA,EAAAA,EAAM9B,QAC5C4L,GAAc,OAAJ9J,QAAI,IAAJA,OAAA,EAAAA,EAAM9B,QAAS,EAGzBvD,GAAU,KAehB,OAZImP,GACFtN,EAAS,qCAAiC0I,EAAjC,8CAA8ExD,EAAW/G,EAAzF,cAA6G,GAA7G,QACTiP,EAAe,UAEfA,EAAe,QAEbpN,EADEqN,EACO,oCAAgC3E,EAAhC,4BARWvK,mBAQ+C+G,EAA1D,QAEA,oCAAgCwD,EAAhC,2BAA0DxD,EAAW/G,EAArE,SAIN,qBACLkJ,UAAWiC,IAAWC,KAAOgE,OAAQD,GAAW/D,KAAOiE,MAAOH,GAAiB9D,KAAO8D,eAAgBF,EAAiB3B,IAAUjC,KAAOkE,cAExIC,MAAO,CAAC1N,YAAWoN,mBAHd,SAIL5J,GAFKgI,Q,wBC3BI,SAASmC,GAAT,GAAmD,IAA9BR,EAA6B,EAA7BA,iBAAkBjI,EAAW,EAAXA,SAC9CkD,EAAY+E,EAAiBzL,OAEnC,OAAO,qBAAK2F,UAAWkC,KAAO1B,KAAvB,SAA8BsF,EAAiBtB,KAAI,SAASrI,EAAMgI,GACvE,IAAKhI,EACH,OAAO,KAET,IAAMkF,EAAUlG,EAAoB4F,EAAYoD,EAEhD,OAAO,qBACLnE,UAAWkC,KAAOgE,OAElBG,MAAO,CACL1N,UAAU,gCAAD,OAAkC0I,EAAlC,4BAAwE,IAAZxD,EAA5D,QAJN,SAML1B,GAJKgI,Q,wBCZLoC,GAAwB,qBAAXrQ,OAAyBA,OAAS,KAE/CsQ,GAAqB,CACzBC,iBADyB,aAEzBC,YAAa,EACbC,WAAY,EACZC,oBAJyB,cAOpB,SAASC,KAAwD,IAAlCC,EAAiC,uDAA3BP,IAAOC,GAAoB,EAC/BjG,mBAASuG,EAAIJ,aADkB,mBAC9DA,EAD8D,KACjDK,EADiD,OAEjCxG,mBAASuG,EAAIH,YAFoB,mBAE9DA,EAF8D,KAElDK,EAFkD,KAgBrE,OAZApG,qBAAU,WACR,SAASqG,IACPF,EAAeD,EAAIJ,aACnBM,EAAcF,EAAIH,YAIpB,OADAG,EAAIL,iBAAiB,SAAUQ,GACxB,WACLH,EAAIF,oBAAoB,SAAUK,MAEnC,CAACH,IAEG,CAACH,EAAYD,GAGf,SAASQ,GAAsB/E,GACpC,IADyC,EAWjB5B,mBAVH,CACnBxL,EAAG,EACHC,EAAG,EACHa,MAAO,EACPE,OAAQ,EACRoR,IAAK,EACLC,OAAQ,EACRC,KAAM,EACNC,MAAO,IATgC,mBAWlC/O,EAXkC,KAW5BgP,EAX4B,OAYPV,KAZO,mBAYlCF,EAZkC,KAYtBD,EAZsB,KAqBzC,OAPA9F,qBAAU,WACHuB,EAAItB,SAGT0G,EAAQpF,EAAItB,QAAQ2G,2BACnB,CAACb,EAAYD,EAAavE,IAEtB5J,EC7CM,SAASkP,GAAT,GAKX,IAJFrH,EAIC,EAJDA,cACAsH,EAGC,EAHDA,sBACAC,EAEC,EAFDA,iBACAC,EACC,EADDA,WAEMC,EAAUvH,mBADf,EAEyCC,oBAAS,GAFlD,mBAEMuH,EAFN,KAEqBC,EAFrB,KAGahH,EAAaX,EAApB/F,OACD2N,EAAWd,GAAsBW,GACjChK,EAAWmK,EAASnS,MACpBuL,EAAYhG,EAAoB2F,EAAY,EAElD,SAASkH,EAAeC,EAASC,GAC/B,IAAMpT,EAAImT,EAAUF,EAASjT,EAAe,GAAX8I,EAC3B7I,IAAMmT,EAAUH,EAAShT,EAAe,GAAX6I,GAGnC,GAFezI,KAAKsK,KAAKtK,KAAK6F,IAAIlG,EAAG,GAAKK,KAAK6F,IAAIjG,EAAG,KAExC6I,EAAW,EAAG,CAC1B,IAAMuK,EAAM/J,iBAAOjJ,KAAKqI,MAAMzI,EAAGD,GAAIqG,GAC/BiG,EAAUgH,4BAAkBD,EAAMhH,GAExC,OADchM,KAAKkT,MAAMjH,EAAUlG,EAAoB4F,GAGzD,OAAO,KAGT,SAASwH,EAAOzD,GACd,IAAM0D,EAAe,GACf/D,EAAOK,EAAIL,KACXgE,EAAe,QAAQC,KAAKjE,GAGlC,OAAOA,GACL,IAAK,YACHsD,GAAiB,GACjB,MACF,IAAK,UACHA,GAAiB,GAKrB,GAAIU,EAEF,IADA,IAAME,EAAgB7D,EAAI6D,eAAiB,GAClCrO,EAAI,EAAGA,EAAIqO,EAActO,OAAQC,IAAK,CAC7C,IAAMsO,EAAQD,EAAcrO,GACtB6J,EAAQ8D,EAAeW,EAAMV,QAASU,EAAMT,SAC7B,kBAAVhE,EACTqE,EAAajN,KAAK4I,GAElB4D,GAAiB,QAIrB,GAAa,YAATtD,EAAoB,CACtB,IAAMN,EAAQ8D,EAAenD,EAAIoD,QAASpD,EAAIqD,SACzB,kBAAVhE,EACTqE,EAAajN,KAAK4I,GAElB4D,GAAiB,GAKvBL,EAAsBc,GAUxB,IAAIK,EAAY,CACdhE,QAAS+C,EARX,SAAsB9C,GACpB,IAAMX,EAAQ8D,EAAenD,EAAIoD,QAASpD,EAAIqD,SACzB,kBAAVhE,GACTwD,EAAiBxD,IAKkB,MAmBvC,OAhBE0E,EADE3N,EACO,2BACJ2N,GADI,IAEPC,aAAcP,EACdQ,WAAYR,EACZS,cAAeT,EACfU,YAAaV,IAGN,2BACJM,GADI,IAEPK,UAAWX,EACXY,YAAaZ,EACba,YAAatB,EAAgBS,EAAS,OAInC,iCACLpG,IAAK0F,EACL7H,UAAWkC,KAAO1B,MACdqI,ICrGO,SAASQ,GAAT,GAAwE,IAAD,IAAlDzG,UAAWC,OAAuC,MAA3B,MAA2B,EAApByG,EAAoB,EAApBA,SAAajH,EAAO,0CAClC9B,oBAAS,GADyB,mBAC7EgJ,EAD6E,KAC1DC,EAD0D,KAGpF,SAASjB,EAAOzD,GACd0E,GAAqB,GACrBF,IAGF,IAAIT,EAAY,GAkBhB,OAjBKU,IACHV,EAAY,CACVhE,QAAS0D,EACTW,UAAWX,EACXY,YAAaZ,EACbkB,aAAclB,EACdmB,aAAcnB,EACdoB,YAAapB,EACbqB,WAAYrB,EACZa,YAAab,EACbO,aAAcP,EACdQ,WAAYR,EACZS,cAAeT,EACfU,YAAaV,IAIV,cAAC1F,EAAD,2BAAegG,GAAexG,I,wBCzBxB,SAASwH,GAAT,GAEb,IAF4D,IAAtBzN,EAAqB,EAArBA,OAAQ0N,EAAa,EAAbA,WACxCC,EAAe,GACZzP,EAAI,EAAGA,EAAI8B,EAAO/B,OAAQC,IAAK,CAAC,IAAD,EACS8B,EAAO9B,GAA/C0P,EAD+B,EAC/BA,cAAeC,EADgB,EAChBA,WAAYC,EADI,EACJA,UAC5BC,EAAazN,EAAYuN,GAC1BF,EAAaC,KAChBD,EAAaC,GAAiB,IAEhCD,EAAaC,GAAezO,KAAK,uBAC/ByE,UAAWkC,KAAOkI,MADa,UAG/BN,EAAWI,GAAWC,EAAWvN,iBAAkBuN,EAAWxN,OAAO,0BADhErC,IAIT,OACE,qBAAK0F,UAAWkC,KAAO1B,KAAvB,SACCuJ,EAAavF,KAAI,SAAC6F,EAAa/P,GAC9B,OAAO,qBACL0F,UAAWiC,IAAWC,KAAOmI,YAAanI,KAAO,gBAAD,OAAiB5H,KAD5D,SAGL+P,GADK/P,Q,2CCjBE,SAASgQ,GAAT,GAAyE,IAKlFzB,EALyCtG,EAAwC,EAAxCA,SAAUvC,EAA8B,EAA9BA,UAAWuK,EAAmB,EAAnBA,iBAAmB,EAC3ChK,oBAAS,GADkC,mBAC9EuH,EAD8E,KAC/DC,EAD+D,KAE/EF,EAAUvH,mBACV0H,EAAWd,GAAsBW,GAkBvC,SAASU,EAAOzD,GACd,IAAM0F,EAAiB,GACjB/F,EAAOK,EAAIL,KACXgE,EAAe,QAAQC,KAAKjE,GAElC,OAAOA,GACL,IAAK,YACHsD,GAAiB,GACjB,MACF,IAAK,UACHA,GAAiB,GAIrB,GAAIU,EAEF,IADA,IAAME,EAAgB7D,EAAI6D,eAAiB,GAClCrO,EAAI,EAAGA,EAAIqO,EAActO,OAAQC,IAAK,CAC7C,IAAMsO,EAAQD,EAAcrO,GACtB6J,EAAQ/O,KAAKkT,OAAOM,EAAMV,QAAUF,EAASjT,GAAKiT,EAASnS,MAAQ0M,EAASlI,QAC7D,kBAAV8J,EACTqG,EAAejP,KAAK4I,GAEpB4D,GAAiB,QAIrB,GAAa,YAATtD,EAAoB,CACtB,IAAMN,EAAQ/O,KAAKkT,OAAOxD,EAAIoD,QAAUF,EAASjT,GAAKiT,EAASnS,MAAQ0M,EAASlI,QAC3D,kBAAV8J,EACTqG,EAAejP,KAAK4I,GAEpB4D,GAAiB,GAIvBwC,EAAiBC,GAKnB,OAtDE3B,EADE3N,EACU,CACV4N,aAAcP,EACdQ,WAAYR,EACZS,cAAeT,EACfU,YAAaV,GAGH,CACVW,UAAWX,EACXY,YAAaZ,EACba,YAAatB,EAAgBS,EAAS,MA6CxC,6CACEpG,IAAK0F,EACL7H,UAAWiC,IAAWC,KAAO1B,KAAMR,IAC/B6I,GAHN,aAKE,qBAAK7I,UAAWkC,KAAOuI,YAAvB,SACGlI,O,ICnEFmI,GAAgBrP,EAATsP,GAAStP,EAER,SAASuP,GAAT,GAAiI,EAAxGd,WAAyG,IAA7Fe,EAA4F,EAA5FA,QAASC,EAAmF,EAAnFA,oBAAqBC,EAA8D,EAA9DA,wBAAyBnD,EAAqC,EAArCA,WAAYoD,EAAyB,EAAzBA,uBAAyB,EAChGzK,mBAAS,IADuF,mBACvI0K,EADuI,KACtHC,EADsH,OAExG3K,mBAAS,IAF+F,mBAEvI4K,EAFuI,KAE1HC,EAF0H,KAI1IC,EAA6B,GAC7BC,EAAiC,GACnCN,EAAuBO,SAAQ,YAAqB,IAAnBtH,EAAkB,EAAlBA,MAAkB,EAAXuH,QACxBd,GACZW,EAA2B9P,KAAK0I,GAEhCqH,EAA+B/P,KAAK0I,EAAQrJ,MAIlDgG,qBAAU,WACR,IAAM6K,EAAiB,GACvBN,EAAYI,SAAQ,SAACpH,GACnBsH,EAAelQ,KAAf,UAAuB4I,EAAQ,GAA/B,OAAmCuG,QAErCO,EAAgBM,SAAQ,SAACpH,GACvBsH,EAAelQ,KAAf,WAAwB4I,EAAQ,GAAKvJ,GAArC,OAAmE+P,QAErEI,EAAwBU,KACvB,CAACN,EAAaF,EAAiBF,IAGlC,IADA,IAAMW,EAAgB,GACbpR,EAAI,EAAGA,EAAII,EAAoBJ,IACtCoR,EAAcnQ,KACZ,eAACmH,GAAD,CAEE1C,UAAWkC,KAAOgE,OAClB5E,SAAUgK,EAA+B/J,QAAQjH,IAAM,EACvDuK,QAAS+C,EAAakD,EAAoBzF,KAAK,KAAzB,WAAmC/K,EAAI,GAAKM,GAA5C,OAA0E+P,KAAW,KAJ7G,UAME,sBAAM3K,UAAWkC,KAAOyJ,SAAxB,eACA,uBAAM3L,UAAWkC,KAAOyJ,SAAxB,UACE,qBAAK3L,UAAWkC,KAAO0J,UAAvB,SAAmCtR,IACnC,qBAAK0F,UAAWkC,KAAO2J,YAAvB,oBARGvR,IAcX,IAAMwR,EAAY,GAClB,GAAIjB,EACF,IAAK,IAAIvQ,EAAI,EAAGA,EAAI,EAAGA,IACrBwR,EAAUvQ,KACR,cAACmH,GAAD,CAEEpB,SAAU+J,EAA2B9J,QAAQjH,IAAM,EACnD0F,UAAWkC,KAAOgE,OAClBrB,QAAS+C,EAAakD,EAAoBzF,KAAK,KAAzB,UAAkC/K,EAAI,GAAtC,OAA0CoQ,KAAW,KAJ7E,SAME,uBAAM1K,UAAWkC,KAAOyJ,SAAxB,cAAoCrR,EAAI,MALnCA,IAmBb,IAAMuI,EAAY+E,EAAa,MAAQ0C,GACjCyB,EAAoB,GACpBC,EAAgB,GAMtB,OALKpE,IACHmE,EAAkBxB,iBAZpB,SAAyB0B,GACvBf,EAAmBe,IAYnBD,EAAczB,iBAThB,SAAqB0B,GACnBb,EAAea,KAYf,sBAAKjM,UAAWkC,KAAO1B,KAAvB,UACE,cAACqC,EAAD,yBACE7C,UAAWkC,KAAOgK,KACdH,GAFN,aAIGL,KAEFb,GACC,cAAChI,EAAD,yBACE7C,UAAWkC,KAAOgK,KACdF,GAFN,aAIGF,QCjGI,SAASK,GAAqBpL,GAE3C,IADA,IAAMqL,EAAa,CAAC,GACZ9R,EAAI,EAAGA,EAAIyG,EAAWzG,IACxB+R,GAAyBtL,EAAWzG,IACtC8R,EAAW7Q,KAAKjB,GAGpB,OAAO8R,EAGT,SAASC,GAAyBtL,EAAWiC,GAE3C,IADA,IAAMsJ,EAAkB,GAChBhS,EAAI,EAAGA,EAAIyG,EAAWzG,IAAK,CACjC,IAAMiS,EAAiBjS,EAAI0I,EAAajC,EACxC,QAAuCD,IAAnCwL,EAAgBC,GAClB,OAAO,EAEPD,EAAgBC,GAAiBA,EAGrC,OAAOD,EChBT,ICAIE,GACAC,GDDEC,GAAc,CAAC,IAAK,CAAC,UAAK,WAAO,IAAK,IAAK,CAAC,UAAK,WAAO,IAAK,CAAC,UAAK,WAAO,IAAK,IAAK,CAAC,UAAK,WAAO,IAAK,CAAC,UAAK,YAElH,SAASC,GAAE/S,GACT,OAAOyE,iBAAOzE,EAAKc,GAGN,SAASkS,GAAkB/I,EAAe1D,GAEvD,GAAuB,MAAlB0D,GAAuC,IAAd1D,GAAuC,MAAlB0D,GAAuC,IAAd1D,EAC1E,MAAO,CAAC,IAAI,UAAK,IAAI,UAAK,UAAK,IAAI,UAAK,IAAI,UAAK,UAAK,IAAI,WACrD,GAAuB,MAAlB0D,GAAuC,IAAd1D,GAAuC,MAAlB0D,GAAuC,IAAd1D,EACjF,MAAO,CAAC,IAAI,UAAK,IAAI,IAAI,UAAK,IAAI,UAAK,IAAI,IAAI,UAAK,IAAI,WACnD,GAAuB,MAAlB0D,GAAuC,IAAd1D,GAAuC,MAAlB0D,GAAuC,IAAd1D,EACjF,MAAO,CAAC,IAAI,UAAK,IAAI,IAAI,UAAK,IAAI,UAAK,IAAI,UAAK,UAAK,IAAI,WACpD,GAAuB,OAAlB0D,GAAwC,IAAd1D,GAAuC,MAAlB0D,GAAuC,IAAd1D,EAClF,MAAO,CAAC,IAAI,UAAK,IAAI,UAAK,UAAK,IAAI,UAAK,IAAI,UAAK,gBAAM,IAAI,WATK,IAW3D9D,EAAoBH,EAAMiE,GAA1B9D,iBACP,GAAgC,kBAArBA,EACT,OAAOuQ,GAAkB/I,EAAexH,GA6D1C,IAAMwQ,EAAW,GAIjB,OA9DA,SAA6CC,GAI3C,IAHA,IAAMC,EAAU,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACxC3Q,EAAUF,EAAMiE,GAAhB/D,OACH4Q,EAAkB,EACb1S,EAAI,EAAGA,EAAII,EAAoBJ,IAAK,CAE7B8B,EADKuQ,GAAErS,EAAIuJ,EAAgBjJ,MAGvCkS,EAAMxS,GAAKyS,EAAQC,GACnBA,MAkDNC,CAAoCJ,GA5CpC,SAAkCC,GAChC,IADwC,IAAD,WAC9BxS,GACP,IAAM4S,EAAYR,GAAYpS,GACxB6S,EAAgBT,GAAYC,GAAErS,EAAI,IAClC8S,EAAgBV,GAAYC,GAAErS,EAAI,IACxC,GAAIwS,EAAMxS,GACR,GAAK+S,MAAMC,QAAQJ,GAMZ,CACL,IAAM/I,EAAQ+I,EAAUK,WAAU,SAACC,GAAD,OAAUA,EAAKjM,QAAQuL,EAAMxS,KAAO,KACtEwS,EAAMxS,GAAK4S,EAAU/I,QAPjBgJ,IAAkBL,EAAMxS,GAC1BwS,EAAMxS,GAAN,UAAcwS,EAAMxS,GAApB,UACS8S,IAAkBN,EAAMxS,KACjCwS,EAAMxS,GAAN,UAAcwS,EAAMxS,GAApB,YATCA,EAAI,EAAGA,EAAII,EAAoBJ,IAAM,EAArCA,GA4CXmT,CAAyBZ,GAzBzB,SAA0BC,GAGxB,IAFA,IAAMY,EAAWZ,EAAMa,KAAK,IAAIpM,QAAQ,WAAQ,EAC1CqM,EAAYd,EAAMa,KAAK,IAAIpM,QAAQ,WAAQ,EACxCjH,EAAI,EAAGA,EAAI,GAAIA,IACtB,IAAIwS,EAAMxS,GAAV,CAGA,IAAM4S,EAAYR,GAAYpS,GAC1B+S,MAAMC,QAAQJ,GAEdJ,EAAMxS,GADJoT,IAAaE,EACJV,EAAU,GAEVA,EAAU,GAMvBJ,EAAMxS,GAAK4S,GAQjBW,CAAiBhB,GACVA,EErFM,SAASiB,GAAmBjK,EAAe1D,GAGxD,IAFA,IAAI4N,EAAyBC,OAAOC,UAChCC,EAAc,GACTC,EAAItK,EAAesK,EAAI,KAAOtK,EAAesK,GAAK,IACzD,IAAK,IAAIxB,EAAIxM,EAAWwM,GAAK,EAAIxM,EAAWwM,IAAK,CAC/C,IAAMyB,EAAQxB,GAAkBuB,EAAI,KAAOxB,EAAI,EAAI,GAC7C0B,EAAcC,GAAoBH,EAAI,KAAOxB,EAAI,EAAI,EAAGyB,GAC1DC,EAAcN,GAChBA,EAAyBM,EACzBH,EAAc,CAACE,IACNC,IAAgBN,GACzBG,EAAY3S,KAAK6S,GAIvB,OAAOF,EAAY,GAGrB,SAASI,GAAoBzK,EAAe1D,EAAWiO,GAGrD,IAH6D,IACtDhS,EAAUF,EAAMiE,GAAhB/D,OACH3C,EAAM,GACDa,EAAI,EAAGA,EAAI8B,EAAO/B,OAAQC,IAC7B8B,EAAO9B,KACTb,GAAO2U,EAAM9T,IAGjB,IACMiU,EAAQ9U,EAAI8U,MADJ,oBAEd,OAAKA,EAIEA,EAAMlU,OAHJ,EC7BI,SAASmU,GAAezN,EAAW8C,EAAeT,GAC/D,OAAO,YAAIiK,MAAMtM,GAAW2E,QAAQlB,KAAI,SAASlK,GAC/C,IAAMmU,GAAkBnU,EAAIyG,EAAYrG,EAAsBmJ,EAAgBjJ,GAAgCF,EACxGgU,EAAYtZ,KAAKkT,MAAMmG,GACvBE,EAASvL,EAAcsL,GACvBE,EAAYH,EAAiB,EACnC,OAAKG,EAGC,GAAN,OAAUD,GAAV,OAAmBE,OAAOxR,gBAAMuR,EAAW,OAAQE,MAAM,EAAE,IAFlDH,KCRE,SAASI,GAAkBhU,GACxC,KAAMA,EAAY,ExBFU,IwBG1BA,GAAa,EAEf,OAAOA,ECHM,SAASiU,GAAoBjO,EAAWkO,GAErD,IADA,IAAMC,EAAc,GACX5U,EAAI,EAAGA,EAAIyG,EAAWzG,IAC7B4U,EAAY3T,KAAKwT,GAAkBjU,EAAmBmU,EAAe3U,EAAIM,GAA+BF,EAAqBqG,MAE/H,OAAOmO,ECRM,SAASC,GAAkBpO,EAAW2C,GAEnD,IADA,IAAM0L,EAAW,GACR9U,EAAI,EAAGA,EAAIyG,EAAWzG,IAC7B8U,EAAS7T,KAAMjB,EAAIoJ,EAAa3C,GAElC,OAAOqO,ECHM,SAASC,GAAetO,EAAWZ,EAAWuD,GAG3D,IAFA,IAAM4L,EAAkB,YAAOpT,EAAMiE,GAAW/D,QAC1CmT,EAAwB,GACrBjV,EAAI,EAAGA,EAAIyG,EAAWzG,IAAK,CAClC,IAAM6J,EAAQ7J,EAAIyG,EAAYuO,EAAmBjV,OACjDkV,EAAsBhU,KAAK+T,EAAmBnL,IAAU,MAQ1D,OALoCoL,EAAsB/K,KAAI,SAAC4F,EAAO9P,GAEpE,OAAOiV,EADQjV,EAAIoJ,EAAa3C,MCXrB,SAASyO,GAAe1F,EAAYpG,GAIjD,OAHeoG,EAAWtF,KAAI,SAAS0I,EAAW/I,GAChD,OAAO2F,EAAY3F,EAAQT,EAAaoG,EAAWzP,WPIvD,IAAIoV,GAAqB,GAElB,SAASC,GAAgBrM,GAC1BmJ,IACFA,GAAamD,QAGf,IAAMC,GADNpD,GAAe,IAAKtW,OAAO2Z,cAAgB3Z,OAAO4Z,qBACpBC,aAC9BH,EAASI,QAAQxD,GAAayD,aAG9BL,EAASM,KAAKjM,MAAQ,GAEtBwI,GAAWmD,EACX,IAAI,IAAItV,EAAI,EAAGA,EAAI+I,EAAGhJ,OAAQC,IAAK,CACjC,IAAM6V,EAAS3D,GAAa4D,qBAElB,IAAN9V,EACF6V,EAAO1L,KAAO,WACLnK,IAAM+I,EAAGhJ,OAAS,EAC3B8V,EAAO1L,KAAO,YAEd0L,EAAO1L,KAAO,UAGhB0L,EAAOpV,UAAUkJ,MAAQ3I,EAAehB,GACxC6V,EAAOD,KAAKjM,MAAgB,GAARZ,EAAG/I,GACvB6V,EAAOH,QAAQvD,IACfA,GAAW0D,EAEbP,EAASI,QAAQvD,IAEjBlI,OAAOH,OAAOqL,IAAoBlE,SAAQ,SAAA8E,GACxCA,EAAWC,OACXD,EAAWE,gBAEbd,GAAqB,GAGvB,SAASe,GAAmBzV,GAE1B,IADA,IAAMmU,EAAc,GACdnU,EAAYN,GAChByU,EAAY3T,KAAKR,GACjBA,GAAa,EAEf,OAAOmU,EQgBT,SAASuB,GAAsBC,GAE7B,IADA,IAAMC,EAAU,GADsB,WAE7BrW,GACPqW,EAAQpV,KAAKmV,EAAQlM,KAAI,SAACoM,EAAOhP,GAAR,OAAc8O,GAAS9O,EAAItH,GAAKoW,EAAQrW,aAD1DC,EAAI,EAAGA,EAAIoW,EAAQrW,OAAQC,IAAM,EAAjCA,GAGT,OAAOqW,EAGT,SAASE,GAAoBC,EAAQC,GACnC,OAAOD,EAAO9G,cAAgB+G,EAAO/G,cAGvC,SAASgH,GAAkBF,EAAQC,GACjC,OAAOD,EAAO7G,WAAa8G,EAAO9G,WAGpC,SAASgH,GAAWH,EAAQC,GAC1B,OAAID,EAAO3U,KAAO4U,EAAO5U,KAChB,EACE2U,EAAO3U,KAAO4U,EAAO5U,MACtB,EAEH,EAGT,SAAS+U,GAAkBrU,EAAmBuN,GAE5C,IADA,IAAI+G,EAAiB,EACZ7W,EAAI,EAAGA,EAAIuC,EAAkBxC,OAAQC,IAAK,CACjD,GAAI8P,EAAMvN,kBAAkB0E,QAAQ1E,EAAkBvC,IAAM,EAC1D,OAEF6W,IAEF,OAAO/G,EAAMvN,kBAAkBxC,OAAS8W,E,YC9F3BC,GAJMC,qBAAS,SAACC,GAC7Bpb,OAAOqb,QAAQH,aAAa,KAAM,KAAlC,UAA2Clb,OAAOsb,SAASC,QAA3D,OAAoEvb,OAAOsb,SAASE,SAApF,YAAgGJ,MAC/F,K,oBC0BY,SAASK,KAqDtB,IAAMC,EAAS,CACbC,YAAa,QACbC,cAAc,GAGVC,EAAYT,KAAYU,MAAM9b,OAAOsb,SAASS,OAAQL,GAC5D,SAASM,EAAaC,EAAKlO,EAAOmO,GAChCxR,qBAAU,WACR,SAASyR,IACPjB,GAAaE,KAAYgB,UAAUP,EAAWH,IAG3CW,mBAAQR,EAAUI,GAAMlO,KACvBsO,mBAAQH,EAAKnO,SAA6BnD,IAAnBiR,EAAUI,WAC5BJ,EAAUI,GACjBE,KACUE,mBAAQH,EAAKnO,KACvB8N,EAAUI,GAAOlO,EACjBoO,QAGH,CAACpO,EAAOkO,EAAKC,IA1EU,MA6ER7R,mBAASwR,EAAU7O,IAAMvI,GA7EjB,mBA6ErBuI,EA7EqB,KA6EjBC,EA7EiB,KA8E5B+O,EAAa,KAAMhP,EAAIvI,GA9EK,MAgFgB4F,mBAASwR,EAAUvO,gBAAkBlH,EAAiBC,MAhFtE,mBAgFrBiH,EAhFqB,KAgFLC,EAhFK,KAiF5ByO,EAAa,iBAAkB1O,EAAgBlH,EAAiBC,MAjFpC,MAmFMgE,mBAASwR,EAAUhR,WAAarG,GAnFtC,mBAmFrBqG,EAnFqB,KAmFV6C,EAnFU,KAoF5BsO,EAAa,YAAanR,EAAWrG,GApFT,MAsFc6F,wBAAqCO,IAA5BiR,EAAUlO,cAA8BkO,EAAUlO,c9BjHlE,K8B2BP,mBAsFrBA,EAtFqB,KAsFNC,EAtFM,KAuF5BoO,EAAa,gBAAiBrO,E9BlHK,K8B2BP,MAyFMtD,mBAASwR,EAAU5R,WAAa,GAzFtC,mBAyFrBA,EAzFqB,KAyFVoD,EAzFU,KA0F5B2O,EAAa,YAAa/R,EAAW,GA1FT,MA4FcI,mBAASuN,GAAmBjK,EAAe1D,IA5FzD,mBA4FrBiD,EA5FqB,KA4FNoP,EA5FM,KA6F5B5R,qBAAU,WACR4R,EAAiB1E,GAAmBjK,EAAe1D,MAClD,CAACA,EAAW0D,IA/Fa,MAiGQtD,mBAASiO,GAAezN,EAAW8C,EAAeT,IAjG1D,mBAiGrB0G,EAjGqB,KAiGT2I,EAjGS,KAkG5B7R,qBAAU,WACR6R,EAAcjE,GAAezN,EAAW8C,EAAeT,MACtD,CAACrC,EAAW8C,EAAeT,IApGF,MAsGoB7C,mBAAS4L,GAAqBpL,IAtGlD,mBAsGrBgD,EAtGqB,KAsGH2O,EAtGG,KAuG5B9R,qBAAU,WACR8R,EAAoBvG,GAAqBpL,MACxC,CAACA,IAEJ,IAAM4R,EAAMZ,EAAUrO,UAAYqO,EAAUrO,UAAYK,EAAiB,GA3G7C,EA4GMxD,mBAASoS,GA5Gf,oBA4GrBjP,GA5GqB,MA4GVC,GA5GU,MA6G5B/C,qBAAU,WACJmD,EAAiBxC,QAAQmC,IAAa,GACxCC,GAAaI,EAAiB,MAE/B,CAACA,EAAkBL,KACtBwO,EAAa,YAAaxO,GAAWiP,GAGrC,IADA,IAAMC,GAAM,GACHtY,GAAI,EAAGA,GAAIgB,EAAejB,OAAQC,KACzCsY,GAAIrX,KAAK,GAtHiB,OAyHRgF,mBAASwR,EAAU1O,IAAM/H,EAAekJ,KAAI,kBAAM,MAzH1C,qBAyHrBnB,GAzHqB,MAyHjBC,GAzHiB,MA0H5B4O,EAAa,KAAM7O,GAAI/H,EAAekJ,KAAI,kBAAM,MA1HpB,OA4HcjE,mBAASzF,EAAmBoI,EAAIW,IA5H9C,qBA4HrBoL,GA5HqB,MA4HN4D,GA5HM,MA6H5BjS,qBAAU,WACRiS,GAAiB/X,EAAmBoI,EAAIW,MACvC,CAACA,EAAeX,IA/HS,OAiIkB3C,mBAASyO,GAAoBjO,EAAWkO,KAjI1D,qBAiIrB/O,GAjIqB,MAiIJ4S,GAjII,MAkI5BlS,qBAAU,WACRkS,GAAmB9D,GAAoBjO,EAAWkO,OACjD,CAAClO,EAAWkO,KApIa,OAsIc1O,mBAAS4O,GAAkBpO,EAAW2C,KAtIpD,qBAsIrBtD,GAtIqB,MAsIN2S,GAtIM,MAuI5BnS,qBAAU,WACRmS,GAAiB5D,GAAkBpO,EAAW2C,OAC7C,CAAC3C,EAAW2C,KAzIa,OA2IoBnD,mBAASiP,GAAe1F,EAAYpG,KA3IxD,qBA2IrBmC,GA3IqB,MA2IHmN,GA3IG,MA4I5BpS,qBAAU,WACRoS,GAAoBxD,GAAe1F,EAAYpG,OAC9C,CAACoG,EAAYpG,KA9IY,OAgJoBnD,mBAAS8O,GAAetO,EAAWZ,EAAWuD,KAhJlE,qBAgJrBoC,GAhJqB,MAgJHmN,GAhJG,MAiJ5BrS,qBAAU,WACRqS,GAAoB5D,GAAetO,EAAWZ,EAAWuD,OACxD,CAAC3C,EAAW2C,GAAWvD,IAnJE,OAiKwBI,mBAAS,IAjKjC,qBAiKrB2S,GAjKqB,MAiKDxL,GAjKC,SAmK0BnH,mBAASwR,EAAUoB,qBAAuB,IAnKpE,qBAmKrBA,GAnKqB,MAmKAC,GAnKA,MAoK5BlB,EAAa,sBAAuBiB,GAAqB,IApK7B,OAsK4B5S,mBAAS,IAtKrC,qBAsKrB8S,GAtKqB,MAsKCtI,GAtKD,SAwK8BxK,mBAASwR,EAAUuB,uBAAyB,IAxK1E,qBAwKrBA,GAxKqB,MAwKEC,GAxKF,MAyK5BrB,EAAa,wBAAyBoB,GAAuB,IAzKjC,OA2K4B/S,mBAAS,YAAI2S,KA3KzC,qBA2KrBjT,GA3KqB,MA2KCuT,GA3KD,SA4KgCjT,mBAAS,YAAI8S,KA5K7C,qBA4KrBrI,GA5KqB,MA4KGyI,GA5KH,MA6K5B7S,qBAAU,WAMR,IALA,IAAM8S,EAA4BC,qBAAUN,GAAsBC,GAAuBf,YAErFqB,EAA0BD,qBAAUT,GAAoBC,GAAqBZ,YAE7EsB,EAAsB,GACjBvZ,EAAI,EAAGA,EAAIoZ,EAA0BrZ,OAAQC,IAIpD,IAHA,IAAMwZ,EAAgBJ,EAA0BpZ,GAC1CyZ,EAAU,IAAIC,OAAJ,UAAc3Y,EAAd,KAA6C,KAAKqN,KAAKoL,GAE9DlS,EAAI,EAAGA,EAAIgS,EAAwBvZ,OAAQuH,IAAK,CACvD,IAAMqS,EAAaL,EAAwBhS,GACvCsS,OAAqB,EACnBC,EAAqBF,EAAalT,EAExC,GAAIgT,EAAS,CACX,IAAI5P,EAAQ8P,EACZ,GAAI9P,EAAQ,IAAM,EAEhB,KAD8BjI,EAAMiE,GAAW/D,OAAO+H,GAC7B,CAGvB,IAFA,IAAIiQ,EAAQ,EACRC,EAAY,EACTD,IAAU7O,SAASuO,IACxBO,IACAlQ,GAASA,EAAQ,GAAKzJ,EAChBwB,EAAMiE,GAAW/D,OAAO+H,IAC5BiQ,IAGJF,EAAwBG,EAAY3Z,QAQxCwZ,EAAwB3O,SAASuO,GAAiBjZ,EAEpD,GAAIqZ,EAAuB,CACzB,IAAMI,GAAiBH,EAAqBD,GAAyB,EAE/DK,EAAoBnf,KAAKiI,MAAMiX,EAAgBvT,EADnC,SAElB8S,EAAoBtY,KAAKgZ,IAK/BX,EAA0BD,qBAAUC,EAAyBC,EAAqBtB,YAClFiB,GAAwBI,GACxBH,GAA0BC,KACzB,CAACR,GAAoBC,GAAqBE,GAAsBC,GAAuBnT,EAAWY,IAErGH,qBAAU,YV1ML,SAA0B4H,EAAc3E,EAAeL,EAAgBN,EAAInC,GAChF,GAAKyL,GAAL,CAWE,IARF,IAAMgI,EAAiB/E,GACjBgF,EAAiB,GACjBC,EAAyB,GACzBzF,EAAgBnU,EAAmBoI,EAAIW,GACvC3D,EAAkB,GAClByU,EAAiB,GAGZra,EAAI,EAAGA,EAAIkO,EAAanO,OAAQC,IAAK,CAC5C,IAIMsa,EAAgB7F,GADJjU,EAAmBmU,EAHlBzG,EAAalO,GACDyG,EACNlG,IAGzBqF,EAAgB3E,KAAKqZ,GAIvB,IAAI,IAAJ,MAA2B1U,EAA3B,eAA4C,CAAxC,IAAM0U,EAAa,KACrBD,EAAepZ,KAAf,MAAAoZ,EAAc,YAASnE,GAAmBoE,KAI5C,cAAwBD,EAAxB,eAAwC,CAAnC,IAAM5Z,EAAS,KACZsV,EAAamE,EAAezZ,GAC9BsV,GACFoE,EAAe1Z,GAAasV,SACrBmE,EAAezZ,IAEtB2Z,EAAuBnZ,KAAKR,GAOhC,IAHF,IAAM8Z,EAAsBtQ,OAAOH,OAAOoQ,GAGxC,MAAuBE,EAAvB,eAA+C,CAA3C,IAAM3Z,EAAS,KACbsV,OAAU,EACVwE,EAAoBxa,QACtBgW,EAAawE,EAAoBC,OACtB/Z,UAAUga,eAAeha,EAAW,KAE/CsV,EAAa7D,GAAawI,oBACfvQ,KAAOjB,EAClB6M,EAAWtV,UAAUkJ,MAAQlJ,EAC7BsV,EAAWL,QAAQvD,IACnB4D,EAAW4E,SAEbR,EAAe1Z,GAAasV,EAI9BwE,EAAoBtJ,SAAQ,SAAA8E,GAC1BA,EAAWC,OACXD,EAAWE,gBAEbd,GAAqBgF,GU+IrBS,CAAiBjV,GAAsB4D,EAAeL,EAAgBN,EAAInC,GAC1EoU,GF9PW,SAAoBzE,EAAS3P,EAAW+I,GAAuC,IAA3BsL,EAA0B,uDAAb1Y,EACxE2Y,EAAiB,GACjBC,EAAS5E,EAAQrW,OACvB,IAAKib,EACH,OAAOD,EAOT,IALA,IACME,EAAa9E,GADLC,EAAQlM,IAAIgR,IAEpBC,EAAS,GACTC,EAASN,EAAW/a,OAEjBC,EAAI,EAAGA,EAAImb,EAAQnb,IAG1B,IAFA,IAAMuJ,EAAoB,IAAJvJ,EAEbsH,EAAI,EAAGA,EAAI8T,EAAQ9T,IAG1B,IAFA,IAAMwI,EAAQgL,EAAWxT,GADM,WAGtB+T,GACP,IAAIC,OAAQ,EACRC,OAAe,EACfC,OAAS,EAYb,GAVIH,IAAML,GACRQ,EAAYP,EAAW,GACvBK,EAAW/R,EACXgS,EAAkBC,EAAUtR,KAAI,SAAAuR,GAAI,OAAI1X,iBAAO0X,EAAOH,EAAU,WAEhEE,EAAYP,EAAWI,GACvBC,EAAWE,EAAU,GACrBD,EAAkBC,EAAUhH,MAAM,GAAGtK,KAAI,SAAAuR,GAAI,OAAI1X,iBAAO0X,EAAOH,EAAU,UAGvE/R,IAAkB+R,EAAU,CAC9B,IAAI5L,EAAgBkH,GAAkB2E,EAAiBzL,GAEvD,GAA6B,kBAAlBJ,EAA4B,CACrC,IAAME,EAAY8L,EAAoBJ,GAChCK,EAAM,CACVjM,cAAe2L,IAAML,EAAStL,EAAgB,EAAIA,EAClD7N,KAAK,GAAD,OAAK2N,EAAWI,GAAWE,EAAMxN,kBAAjC,OAAoDwN,EAAMzN,QAC9DuN,YACAD,WAAYrI,GAEdyT,EAAe9Z,KAAK0a,MA1BjBN,EAAI,EAAGA,GAAKL,EAAQK,IAAM,EAA1BA,GAmCb,OAFAN,EAAea,KAAKjF,IAAYiF,KAAKlF,IAAmBkF,KAAKrF,IAEtDwE,EAEP,SAASG,EAAoB5E,GAC3B,OAAOA,EAAQ7P,EAAYrG,EAAqB,IAGlD,SAASsb,EAAoBhb,GAC3B,OAAOA,EAAQ,IAAMN,EAAqBqG,GEmM1BoV,CAAWlW,GAAsBc,EAAW+I,MAC3D,CAAC7J,GAAsBE,EAAW0D,EAAeL,EAAgBN,EAAI4G,EAAY/I,IArOxD,OAmPYR,mBAAS,IAnPrB,qBAmPrB6V,GAnPqB,MAmPPjB,GAnPO,MAqPtBtX,GAAWzI,KAAK8P,IAAL,MAAA9P,KAAI,YAAQyR,OArPD,GAuPMtG,oBAAS,GAvPf,qBAuPrB8V,GAvPqB,MAuPTC,GAvPS,aA+PQ/V,oBAAS,GA/PjB,qBA+PrBqH,GA/PqB,MA+PT2O,GA/PS,MAiQ5B,OACE,eAAClN,GAAD,CAAYrJ,UAAWkC,IAAO1B,KAAM8I,SAAWoG,GAAgBrK,KAAK,KAAMhC,IAA1E,UACE,sBAAKrD,UAAWkC,IAAOsU,cAAvB,UACE,qBAAKxW,UAAWkC,IAAOiF,IAAvB,SACE,cAACyD,GAAD,CACEd,WAAYA,EACZiB,wBAAyBA,GACzBD,oBAnHV,SAA6BrR,GAC3B,IAAM0K,EAAQmP,GAAsB/R,QAAQ9H,GACxCgd,EAA2B,GAC3BtS,GAAS,GACXsS,EAAwB,YAAOnD,KACNoD,OAAOvS,EAAO,GAEvCsS,EAAwB,sBAAOnD,IAAP,CAA8B7Z,IAExD8Z,GAAyBkD,IA2GjB5L,UAAW1K,EACXyH,WAAYA,GACZoD,uBAAwBA,OAG5B,qBAAKhL,UAAWkC,IAAOkF,OAAvB,SACE,cAACyC,GAAD,CACEzN,OAAQga,GACRtM,WAAYA,SAIlB,sBAAK9J,UAAWkC,IAAOyU,YAAvB,UACE,cAAC5W,EAAD,CACEE,qBAAsBA,GACtBC,gBAAiBA,GACjBrC,SAAUA,GACVuC,cAAeA,GACfD,UAAWA,IAEb,cAACyF,GAAD,CACEC,iBAAkBA,GAClBhI,SAAUA,GACViI,iBAAkBA,KAEpB,cAACQ,GAAD,CACER,iBAAkBA,GAClBjI,SAAUA,KAEZ,cAAC4J,GAAD,CACEC,sBAAuBA,GACvBC,iBAjER,SAA0BsM,GACxB,IACI2C,EADEzS,EAAQgP,GAAoB5R,QAAQ0S,GAEtC9P,GAAS,GACXyS,EAAsB,YAAOzD,KACNuD,OAAOvS,EAAO,GAErCyS,EAAsB,sBAAOzD,IAAP,CAA4Bc,IAEpDb,GAAuBwD,IAyDjBxW,cAAeA,GACfwH,WAAYA,QAIhB,cAACtF,GAAD,CACEtC,UAAWkC,IAAO2U,YAClBrU,KAAK,WAFP,SAIE,cAACJ,EAAD,CACEqC,KAAK,WACLC,SAAwB,IAAfkD,GACTjD,SAAU4R,GAAclR,KAAK,MAAOuC,QAIvCyO,IAAc,qBAAKrW,UAAWkC,IAAO4U,WAAvB,SACb,cAAC7T,GAAD,CACEC,GAAIA,EACJC,MAAOA,EACPC,cAAeA,EACfC,GAAIA,GACJC,MAAOA,GACPnD,UAAWA,EACXoD,aAAcA,EACdC,eAAgBA,EAChBC,kBAAmBA,EACnBC,UAAWA,GACXC,aAAcA,GACd5C,UAAWA,EACX6C,aAAcA,EACdC,cAAeA,EACfC,iBAAkBA,EAClBC,iBAAkBA,MAItB,cAACrB,GAAD,CAAQ1C,UAAWkC,IAAO6U,WAAYlS,QAtF1C,WACMwR,IACF3G,GAAgBrM,IAElBiT,IAAaD,KAkFX,SAAmEA,GAAa,IAAM,YC5W5F,IAYeW,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAChG,GAAD,MAEFhc,SAASiiB,eAAe,SAM1BZ,O","file":"static/js/main.16718099.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Menu_root__3QA5H\",\"property\":\"Menu_property__qoOWz\",\"title\":\"Menu_title__tE_9H\",\"reset\":\"Menu_reset__uN5da\",\"columns\":\"Menu_columns__3o8dK\",\"valueText\":\"Menu_valueText__37XmB\",\"verticalRangeHolder\":\"Menu_verticalRangeHolder__2TdXL\",\"verticalRange\":\"Menu_verticalRange__3aZoM\",\"issue\":\"Menu_issue__3HH04\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"VirtualFingers_row__3UaU9\",\"button\":\"VirtualFingers_button__gF7kI\",\"denominator\":\"VirtualFingers_denominator__37njw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__nWMuC\",\"menuHolder\":\"App_menuHolder__243kY\",\"menuButton\":\"App_menuButton__3IBp4\",\"contentHolder\":\"App_contentHolder__3Zpi7\",\"top\":\"App_top__3heaO\",\"bottom\":\"App_bottom__sNSD1\",\"wheelHolder\":\"App_wheelHolder__1I76D\",\"toggleLabel\":\"App_toggleLabel__2IqBg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PitchLabel_root__3-xxj\",\"button\":\"PitchLabel_button__29U3k\",\"hasAccidental\":\"PitchLabel_hasAccidental__xtPck\",\"small\":\"PitchLabel_small__3x-Zk\",\"deemphesized\":\"PitchLabel_deemphesized__Gd1GB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"MatchingChords_root__56skG\",\"chordHolder\":\"MatchingChords_chordHolder__QGRl6\",\"fingersNeeded0\":\"MatchingChords_fingersNeeded0__2ftp0\",\"chord\":\"MatchingChords_chord__25OHW\",\"fingersNeeded1\":\"MatchingChords_fingersNeeded1__1c1IT\",\"fingersNeeded2\":\"MatchingChords_fingersNeeded2__1dx63\",\"fingersNeeded3\":\"MatchingChords_fingersNeeded3__2980F\",\"fingersNeeded4\":\"MatchingChords_fingersNeeded4__1gmzO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Label_root__iHLA-\",\"wide\":\"Label_wide__1UWmG\",\"text\":\"Label_text__2JhGE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Button_root__1mUtC\",\"isActive\":\"Button_isActive__2vr5N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ChordLabel_root__U_GCi\",\"button\":\"ChordLabel_button__3bTYZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"killTouches\":\"MultiTouchButtonGroup_killTouches__1X35m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Display_root__ig8ld\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Input_root__1mTks\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TouchPad_root__22wzt\"};","// import ImageDataHandler from './image-data-handler';\n\nfunction rotate(angle, x, y, ctx, func) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const dx = x - cos * x - sin * -y;\n  const dy = y - sin * x - cos * y;\n  func.call(ctx, cos, sin, -sin, cos, dx, dy);\n}\n\n/**\n* a helper for canvas manipulation, to store a reference to the element as well as it's context.\nalso adds some helpful method defaults. also has some drawing utilities.\n* @param {HTMLCanvasElement} [element = document.createElement('canvas')] - put HTMLCanvasElement if this is your\n* final render canvas\n* @param {Integer} [width = element.offsetWidth] - width of area\n* @param {Integer} [height = element.offsetHeight] - height of area\n* @param {Float} [devicePixelRatio = window.devicePixelRatio] - actual pixels to css pixel\n*/\nexport default class Canvas {\n  /* *******************\n  * initializing methods\n  *********************/\n\n  constructor(element = document.createElement('canvas'), width = element.offsetWidth, height = element.offsetHeight, devicePixelRatio = window.devicePixelRatio) { // eslint-disable-line max-len\n    this._element = element;\n    this._context = this._element.getContext('2d');\n    this.resize(width, height, devicePixelRatio);\n  }\n\n  /**\n    * sets width/height properties as well as scaling\n    * @param {Integer} [width = this.width] - width of area of canvas\n    * @param {Integer} [height = this.height] - height of area of canvas\n    * @param {Float} [devicePixelRatio = window.devicePixelRatio] - actual pixels to css pixel\n    * @returns {void}\n  */\n  // eslint-disable complexity\n  resize = (width, height, devicePixelRatio = window.devicePixelRatio) => {\n    // allow for case to call with no params when devicePixelRatio is changed\n    // allow for case to call with no params when dom element is resized\n    // otherwise width and height are defined\n    // this method will erase the canvas and reset any clipping, fillStyle, lineWidth, strokeStyle, etc...\n    if (!width || !height) {\n      const isMounted = !!this._element.parentNode;\n      width = isMounted ? this._element.offsetWidth : this._width;\n      height = isMounted ? this._element.offsetHeight : this._height;\n    }\n    this._devicePixelRatio = devicePixelRatio;\n    this._width = width;\n    this._height = height;\n    this._element.width = width * this._devicePixelRatio;\n    this._element.height = height * this._devicePixelRatio;\n    this._imageDataHandler = null;\n    this._context.scale(this._devicePixelRatio, this._devicePixelRatio);\n  }\n  // eslint-enable complexity\n\n  /* ******\n  * getters\n  ********/\n\n  /**\n    * get the instance's HTMLCanvasElement\n    * @readonly\n    * @type {HTMLCanvasElement}\n  */\n  get element() {\n    return this._element;\n  }\n\n  /**\n    * get the instance's height\n    * @readonly\n    * @type {Integer}\n  */\n  get height() {\n    return this._height;\n  }\n\n  /**\n    * get the instance's ImageDataHandler reflecting the current state\n    * @readonly\n    * @type {ImageDataHandler}\n  */\n  get imageDataHandler() {\n    // if (!this._imageDataHandler) {\n      // const width = this._width * this._devicePixelRatio;\n      // const height = this._height * this._devicePixelRatio;\n      // this._imageDataHandler = new ImageDataHandler(this._context, 0, 0, width, height);\n    // }\n    return this._imageDataHandler;\n  }\n\n  /**\n    * get the instance's width\n    * @readonly\n    * @type {Integer}\n  */\n  get width() {\n    return this._width;\n  }\n\n  /* ******\n  * setters\n  ********/\n\n  /**\n    * set the fill color of the context.\n    * @param {String} str - new value for fillStyle\n    * @type {String}\n  */\n  set fillStyle(str) {\n    this._context.fillStyle = str;\n  }\n\n  /**\n    * set the globalCompositeOperation of the context.\n    * @param {String} str - new value for globalCompositeOperation\n    * @type {String}\n  */\n  set globalCompositeOperation(str) {\n    this._context.globalCompositeOperation = str;\n  }\n\n  /**\n    * set the alpha the context.\n    * @param {Float} num - new value for globalAlpha\n    * @type {Float}\n  */\n  set globalAlpha(num) {\n    this._context.globalAlpha = num;\n  }\n\n  /**\n    * set the stroke width of the context.\n    * @param {Float} num - new value for lineWidth\n    * @type {Float}\n  */\n  set lineWidth(num) {\n    this._context.lineWidth = num;\n  }\n\n  /**\n    * sets the stroke color of the context.\n    * @param {String} str - new value for strokeStyle\n    * @type {String}\n  */\n  set strokeStyle(str) {\n    this._context.strokeStyle = str;\n  }\n\n  /* **************\n  * drawing methods\n  ****************/\n\n  /**\n    * draws an arc on the context\n    * @param {Float} x - center point's x position\n    * @param {Float} y - center point's y position\n    * @param {Float} radius - arc's radius\n    * @param {Float} [startAngle = 0] - angle to begin arc\n    * @param {Float} [endAngle = Math.PI * 2] - angle to end arc\n    * @param {Boolean} [anticlockwise = false] - draws anticlockwise if true\n    * @returns {void}\n  */\n  arc = (x, y, radius, startAngle = 0, endAngle = Math.PI * 2, anticlockwise = false) => {\n    this._context.arc(x, y, radius, startAngle, endAngle, anticlockwise);\n  }\n\n  /**\n    * begins a drawing path on the context\n    * @returns {void}\n  */\n  beginPath = () => {\n    this._context.beginPath();\n  }\n\n  /**\n    * draws an bezier curve on the context\n    * @returns {void}\n  */\n  bezierCurveTo = (...args) => {\n    this._context.bezierCurveTo(...args);\n  }\n\n  /**\n    * clears a rectangle on the context. also nulls the _imageDataHandler value if one exists.\n    * @param {Float} [x = 0] - rectangle's x position\n    * @param {Float} [y = 0] - rectangle's y position\n    * @param {Float} [width = this.width] - rectangle's width\n    * @param {Float} [height = this.height] - rectangle's height\n    * @returns {void}\n  */\n  clearRect = (x = 0, y = 0, width = this.width, height = this.height) => {\n    this._context.clearRect(x, y, width, height);\n    this._imageDataHandler = null;\n  }\n\n  /**\n    * creates a clipping path on the context for future drawing calls.\n    * @returns {void}\n  */\n  clip = (...args) => {\n    this._context.clip(...args);\n  }\n\n  /**\n    * closes a path on the context\n    * @returns {void}\n  */\n  closePath = () => {\n    this._context.closePath();\n  }\n\n  // eslint-disable valid-jsdoc\n  /**\n    * draws an Image or canvas element into the context. also nulls the _imageDataHandler value if one exists.\n    * method overloading to reflect CanvasRenderingContext2D.drawImage.\n    * @param {Canvas|Image|HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} source - where to take pixels from\n    * @param {Float} [dx = 0] - x coordinate of source's destination\n    * @param {Float} [dy = 0] - y coordinate of source's destination\n    * @param {Float} [dWidth = image.width] - width of destination\n    * @param {Float} [dHeight = image.height] - height of destination\n    * @returns {void}\n  */\n  /**\n    * draws an Image or canvas element into the context. also nulls the _imageDataHandler value if one exists.\n    * method overloading to reflect CanvasRenderingContext2D.drawImage.\n    * @param {Canvas|Image|HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} source - where to take pixels from\n    * @param {Float} sx - x coordinate of where to pull from source\n    * @param {Float} sy - y coordinate of where to pull from source\n    * @param {Float} sWidth - width of area to pull from source\n    * @param {Float} sHeight - height of area to pull from source\n    * @param {Float} dx - x coordinate of source's destination\n    * @param {Float} dy - y coordinate of source's destination\n    * @param {Float} dWidth - width of destination\n    * @param {Float} dHeight - height of destination\n    * @returns {void}\n  */\n  drawImage = (source, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight) => { // eslint-disable-line max-params\n    // sx, sy, sWidth, sHeight on images do not get scaled against devicePixelRatio\n    const hasSource = typeof dx === 'number';\n    const isCanvas = source instanceof Canvas;\n    if (hasSource) {\n      if (isCanvas) {\n        sx *= this._devicePixelRatio;\n        sy *= this._devicePixelRatio;\n        sWidth *= this._devicePixelRatio;\n        sHeight *= this._devicePixelRatio;\n        this._context.drawImage(source.element, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);\n      } else {\n        this._context.drawImage(source, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);\n      }\n    } else if (isCanvas) {\n      sWidth = sWidth || source.width;\n      sHeight = sHeight || source.height;\n      this._drawImageDest(source.element, sx, sy, sWidth, sHeight);\n    } else {\n      this._drawImageDest(source, sx, sy, sWidth, sHeight);\n    }\n    this._imageDataHandler = null;\n  }\n  // eslint-enable valid-jsdoc\n\n  _drawImageDest = (source, dx = 0, dy = 0, dWidth = source.width, dHeight = source.height) => {\n    this._context.drawImage(source, dx, dy, dWidth, dHeight);\n  }\n\n  /**\n    * fills a path on the context. also nulls the _imageDataHandler value if one exists.\n    * @returns {void}\n  */\n  fill = (...args) => {\n    this._context.fill(...args);\n    this._imageDataHandler = null;\n  }\n\n  /**\n    * draws a filled rectangle on the context. also nulls the _imageDataHandler value if one exists.\n    * @param {Float} [x = 0] - rectangle's x position\n    * @param {Float} [y = 0] - rectangle's y position\n    * @param {Float} [width = this.width] - rectangle's width\n    * @param {Float} [height = this.height] - rectangle's height\n    * @returns {void}\n  */\n  fillRect = (x = 0, y = 0, width = this.width, height = this.height) => {\n    this._context.fillRect(x, y, width, height);\n    this._imageDataHandler = null;\n  }\n\n  /**\n    * draws a line to a point on the context.\n    * @returns {void}\n  */\n  lineTo = (...args) => {\n    this._context.lineTo(...args);\n  }\n\n  /**\n    * moves to a point on the context.\n    * @returns {void}\n  */\n  moveTo = (...args) => {\n    this._context.moveTo(...args);\n  }\n\n  /**\n    * draws a quadratic curve to a point on the context.\n    * @returns {void}\n  */\n  quadraticCurveTo = (...args) => {\n    this._context.quadraticCurveTo(...args);\n  }\n\n  /**\n    * draws a rectangle on the context.\n    * @param {Float} [x = 0] - rectangle's x position\n    * @param {Float} [y = 0] - rectangle's y position\n    * @param {Float} [width = this.width] - rectangle's width\n    * @param {Float} [height = this.height] - rectangle's height\n    * @returns {void}\n  */\n  rect = (x = 0, y = 0, width = this.width, height = this.height) => {\n    this._context.rect(x, y, width, height);\n  }\n\n  // scale: no scale method! use resize instead!\n\n  /**\n    * strokes the context's current path.\n    * @returns {void}\n  */\n  stroke = (...args) => {\n    this._context.stroke(...args);\n    this._imageDataHandler = null;\n  }\n\n  /* *********************\n  * transformation methods\n  ***********************/\n\n  /**\n    * resets all transforms on the context to zero.\n    * @returns {void}\n  */\n  resetTransform = () => {\n    this._context.resetTransform();\n    // if canvas was scaled it would otherwise be undone\n    this._context.scale(this._devicePixelRatio, this._devicePixelRatio);\n  }\n\n  /**\n    * restores context to a saved state of popped off of a stack.\n    * @returns {void}\n  */\n  restore = () => {\n    this._context.restore();\n  }\n\n  /**\n    * cumulatively rotates the context around x/y coordinates.\n    * @param {Float} angle - amount to rotate\n    * @param {Float} [x = this.width / 2] - center x position\n    * @param {Float} [y = this.height / 2] - center y position\n    * @returns {void}\n  */\n  rotate = (angle, x = 0.5 * this.width, y = 0.5 * this.height) => {\n    if (!angle) {\n      return;\n    }\n    rotate(angle, x, y, this._context, this._context.transform);\n  }\n\n  /**\n    * pushes a saved state of the curent context onto a stack.\n    * @returns {void}\n  */\n  save = () => {\n    this._context.save();\n  }\n\n  /**\n    * resets the context's rotation to a new amount around x/y coordinates.\n    * @param {Float} angle - amount to rotate\n    * @param {Float} [x = this.width / 2] - center x position\n    * @param {Float} [y = this.height / 2] - center y position\n    * @returns {void}\n  */\n  setRotate = (angle, x = 0.5 * this.width, y = 0.5 * this.height) => {\n    rotate(angle, x, y, this._context, this.setTransform);\n  }\n\n  /**\n    * resets the context's transform to new values.\n    * @param {Float} xScale - horizontal scale\n    * @param {Float} xSkew - horizontal skew\n    * @param {Float} ySkew - verical skew\n    * @param {Float} yScale - vertical movement\n    * @param {Float} dx - horizontal movement\n    * @param {Float} dy - vertical movement\n    * @returns {void}\n  */\n  setTransform = (xScale, xSkew, ySkew, yScale, dx, dy) => {\n    xScale *= this._devicePixelRatio;\n    xSkew *= this._devicePixelRatio;\n    ySkew *= this._devicePixelRatio;\n    yScale *= this._devicePixelRatio;\n    dx *= this._devicePixelRatio;\n    dy *= this._devicePixelRatio;\n    this._context.setTransform(xScale, xSkew, ySkew, yScale, dx, dy);\n  }\n\n  /**\n    * sets the context's grid to coordinates.\n    * @param {Float} dx - horizontal movement\n    * @param {Float} dy - vertical movement\n    * @returns {void}\n  */\n  setTranslate = (dx, dy) => {\n    this.setTransform(1, 0, 0, 1, dx, dy);\n  }\n\n  /**\n    * cumulatively moves the context's grid by coordinates.\n    * @param {Float} dx - horizontal movement\n    * @param {Float} dy - vertical movement\n    * @returns {void}\n  */\n  translate = (dx, dy) => {\n    this._context.translate(dx, dy);\n  }\n\n  /* ***********\n  * misc methods\n  *************/\n\n  // eslint-disable valid-jsdoc\n  /**\n    * creates a blank ImageData based on provided width/height.\n    * method overloading to reflect CanvasRenderingContext2D.createImageData.\n    * @param {Number} width - a width amount\n    * @param {Number} height - a height amount\n    * @returns {void}\n  */\n  /**\n    * creates a blank ImageData based on a provided ImageData's dimensions.\n    * method overloading to reflect CanvasRenderingContext2D.createImageData.\n    * @param {ImageData} imageData - an existing ImageData instance\n    * @returns {void}\n  */\n  // eslint-enable valid-jsdoc\n  createImageData = (imageDataOrWidth, height) => {\n    return this._context.createImageData(imageDataOrWidth, height);\n  }\n\n  /* *************\n  * static methods\n  ***************/\n\n  /**\n    * returns Path2D of a path approximately through an array of points.\n    * @param {Array} points - array of points\n    * @param {Path2D} [path = new Path2D()] - Path2D instance to add instructions to\n    * @returns {void}\n  */\n  static quadraticThrough(points, path = new Path2D()) {\n    const { length } = points;\n    let lastPoint;\n    let nextPoint;\n    for (let i = 0; i < length - 1; i++) {\n      lastPoint = nextPoint || points[0];\n      nextPoint = points[i + 1];\n      if (i === 0) {\n        path.moveTo(lastPoint.x, lastPoint.y);\n      } else if (i < length - 2) {\n        const avgX = (lastPoint.x + nextPoint.x) / 2;\n        const avgY = (lastPoint.y + nextPoint.y) / 2;\n        path.quadraticCurveTo(lastPoint.x, lastPoint.y, avgX, avgY);\n      } else {\n        path.quadraticCurveTo(lastPoint.x, lastPoint.y, nextPoint.x, nextPoint.y);\n      }\n    }\n    return path;\n  }\n}\n","export const HUMAN_CENT_THRESHOLD = 5;\nexport const HUMAN_MIN_FREQ = 20;\nexport const HUMAN_MAX_FREQ = 20000;\nexport const STANDARD_SEMITONES = 12;\nexport const STANDARD_A4 = 440;\nexport const CENTS_PER_STANDARD_SEMITONE = 100;\nexport const CENTS_PER_OCTAVE = STANDARD_SEMITONES * CENTS_PER_STANDARD_SEMITONE;\n\nexport function findInterval(fA, fB) {\n  const cents = CENTS_PER_OCTAVE * Math.log2(fB / fA);\n  return cents;\n}\n\nexport function transposeFrequency(frequency, cents) {\n  return frequency * Math.pow(Math.pow(2, 1 / STANDARD_SEMITONES), (cents / CENTS_PER_STANDARD_SEMITONE));\n}\n\nexport function findFrequency(str) {\n  // TODO\n}\n","import {CENTS_PER_STANDARD_SEMITONE, HUMAN_MAX_FREQ, HUMAN_MIN_FREQ, STANDARD_A4} from 'util/music';\n\nexport const IS_TOUCH_SCREEN = 'ontouchstart' in window;\nexport const DEFAULT_TRANSPOSITION = 3 * CENTS_PER_STANDARD_SEMITONE;\nexport const DEGREES_IN_CIRCLE = 360;\nexport const RADIANS_IN_CIRCLE = Math.PI * 2;\nexport const VIRTUAL_FINGER_UNITS = {\n  CENTS: 'cents',\n  STEPS: 'steps',\n};\n\nexport const EQ_FREQUENCIES = [];\nlet frequency = 2;\nwhile(frequency < HUMAN_MAX_FREQ) {\n  frequency *= 2;\n  if (frequency >= HUMAN_MIN_FREQ && frequency <= HUMAN_MAX_FREQ) {\n    EQ_FREQUENCIES.push(frequency);\n  }\n}\n\nexport const A4 = {\n  415: 'baroque',\n  427: 'classical',\n  428: 'classical',\n  429: 'classical',\n  430: 'classical',\n  430.54: 'scientific',\n  432: '“frequency of the universe”',\n  435: 'diapson normal',\n  439: 'new philharmonic',\n  [STANDARD_A4]: 'stuttgart',\n  452: 'old philharmonic',\n  466: 'chorton',\n};\n\nexport const MODES = [\n  {\n    name: '(none)',\n    chords: [],\n    useModeForNaming: 1,\n  },\n  {\n    name: 'I Ionian (Major)',\n    chords: ['I', null, 'ii', null, 'iii', 'IV', null, 'V', null, 'vi', null, 'viiº'],\n  },\n  {\n    name: 'II Dorian',\n    chords: ['i', null, 'ii', 'III', null, 'IV', null, 'v', null, 'viº', 'VII', null],\n  },\n  {\n    name: 'III Phrygian',\n    chords: ['i', 'II', null, 'III', null, 'iv', null, 'vº', 'VI', null, 'vii', null],\n  },\n  {\n    name: 'IV Lydian',\n    chords: ['I', null, 'II', null, 'iii', null, 'ivº ', 'V', null, 'vi', null, 'vii'],\n  },\n  {\n    name: 'V Mixolydian',\n    chords: ['I', null, 'ii', null, 'iiiº', 'IV', null, 'v', null, 'vi', 'VII', null],\n  },\n  {\n    name: 'VI Aeolian (Minor)',\n    chords: ['i', null, 'iiº', 'III', null, 'iv', null, 'v', 'VI', null, 'VII', null],\n  },\n  {\n    name: 'VII Locrian',\n    chords: ['iº', 'II', null, 'iii', null, 'iv', 'V',  null, 'VI', null, 'vii', null],\n  },\n  {\n    name: 'Major Pentatonic',\n    chords: ['I', null, 'ii', null, 'iii', null, null, 'V', null, 'vi', null, null],\n    useModeForNaming: 1,\n  },\n  {\n    name: 'Minor Pentatonic',\n    chords: ['i', null, null, 'III', null, 'iv', null, 'v', null, null, 'VII', null],\n    useModeForNaming: 6,\n  },\n  {\n    name: 'Blues Major',\n    chords: ['I', null, 'ii', null, null, 'IV', null, 'v', null, 'vi', null, null],\n    useModeForNaming: 1,\n  },\n  {\n    name: 'Blues Minor',\n    chords: ['i', null, null, 'III', null, 'iv', null, null, 'VI', null, 'vii', null],\n    useModeForNaming: 6,\n  },\n];\n\nexport const OSCILLATOR_TYPES = {\n  SINE: 'sine',\n  SQUARE: 'square',\n  // SAWTOOTH: 'sawtooth',\n  TRIANGLE: 'triangle',\n};\n\nexport const TEMPERMENT_TYPES = {\n  EQUAL: 'equal',\n  JUST: 'just',\n  MEANTONE: 'meantone',\n  PYTHAGOREAN: 'pythagorean',\n};\n\n\nexport const CHORD_TYPES = [\n  {\n    name: 'major',\n    suffix: '',\n    textTransform: 'toUpperCase',\n    additionalPitches: [400, 700],\n  },\n  {\n    name: 'minor',\n    suffix: '',\n    textTransform: 'toLowerCase',\n    additionalPitches: [300, 700],\n  },\n  {\n    name: 'augmented',\n    suffix: '+',\n    textTransform: 'toUpperCase',\n    additionalPitches: [400, 800],\n  },\n  {\n    name: 'diminished',\n    suffix: 'º',\n    textTransform: 'toLowerCase',\n    additionalPitches: [300, 600],\n  },\n  {\n    name: 'major sixth',\n    suffix: <sup>6</sup>,\n    textTransform: 'toUpperCase',\n    additionalPitches: [400, 700, 900],\n  },\n  {\n    name: 'minor sixth',\n    suffix: <sup>6</sup>,\n    textTransform: 'toLowerCase',\n    additionalPitches: [300, 700, 900],\n  },\n  {\n    name: 'dominant seventh',\n    suffix: <sup>7</sup>,\n    textTransform: 'toUpperCase',\n    additionalPitches: [400, 700, 1000],\n  },\n  {\n    name: 'major seventh',\n    suffix: <sup>∆7</sup>,\n    textTransform: 'toUpperCase',\n    additionalPitches: [400, 700, 1100],\n  },\n  {\n    name: 'minor seventh',\n    suffix: <sup>7</sup>,\n    textTransform: 'toLowerCase',\n    additionalPitches: [300, 700, 1000],\n  },\n  {\n    name: 'augmented seventh',\n    suffix: <>+<sup>∆7</sup></>,\n    textTransform: 'toUpperCase',\n    additionalPitches: [400, 800, 1000],\n  },\n  {\n    name: 'minor-major seventh',\n    suffix: <sup>M7</sup>,\n    textTransform: 'toLowerCase',\n    additionalPitches: [300, 700, 1100],\n  },\n  {\n    name: 'diminished seventh',\n    suffix: <>º<sup>7</sup></>,\n    textTransform: 'toLowerCase',\n    additionalPitches: [300, 600, 900],\n  },\n  {\n    name: 'half-diminished seventh',\n    suffix: <sup>ø7</sup>,\n    textTransform: 'toLowerCase',\n    additionalPitches: [300, 600, 1000],\n  },\n];\n","import {toRadianDirection} from '@danehansen/math';\nimport {RADIANS_IN_CIRCLE, DEGREES_IN_CIRCLE} from 'util/constants';\n\nexport function findDirectionalColor(radians) {\n  radians -= RADIANS_IN_CIRCLE * 0.25;\n  const colorSlice = RADIANS_IN_CIRCLE / 3;\n  const cosR = Math.cos(-radians);\n  const cosG = Math.cos(-radians - colorSlice);\n  const cosB = Math.cos(-radians + colorSlice);\n\n  const r = Math.round(cosR * 255 * 0.5 + 255 * 0.5);\n  const g = Math.round(cosG * 255 * 0.5 + 255 * 0.5);\n  const b = Math.round(cosB * 255 * 0.5 + 255 * 0.5);\n\n  return {r, g, b};\n}\n\nexport default function findColors(semitones) {\n  const colors = [];\n  const buttonSlice = DEGREES_IN_CIRCLE / semitones;\n  for(let i = 0; i < semitones; i++) {\n    colors.push(findDirectionalColor(toRadianDirection(i * buttonSlice)));\n  }\n  return colors;\n}\n\n// export default function findColors(semitones) {\n//   const colors = [];\n//   const buttonSlice = DEGREES_IN_CIRCLE / semitones;\n//   for(let i = 0; i < semitones; i++) {\n//     colors.push(`hsl(${buttonSlice * i}, 100%, 55%)`);\n//   }\n//   return colors;\n// }\n","import {modulo} from '@danehansen/math';\nimport {RADIANS_IN_CIRCLE} from 'util/constants';\n\nfunction flipRadiansVertically(radians) {\n  return Math.atan2(-Math.sin(radians), Math.cos(radians));\n}\n\nexport default function fillSlice(canvas, color, diameter, startRadians, endRadians, outerRadius, holeRadius, isInKey) {\n  const center = diameter / 2;\n  const isCircle = modulo(startRadians, RADIANS_IN_CIRCLE) === modulo(endRadians, RADIANS_IN_CIRCLE);\n\n  canvas.beginPath();\n  canvas.fillStyle = typeof color === 'object' ? `rgb(${color.r}, ${color.g}, ${color.b})` : color;\n\n  if (isCircle) {\n    canvas.arc(center, center, center * outerRadius, 0, RADIANS_IN_CIRCLE);\n  } else {\n    // clockwise straight edge\n    let cos = Math.cos(startRadians);\n    let sin = Math.sin(startRadians);\n    canvas.moveTo(center + cos * center * holeRadius, center + sin * -center * holeRadius);\n    canvas.lineTo(center + cos * center * outerRadius, center + sin * -center * outerRadius);\n\n    // outer arc\n    canvas.arc(center, center, center * outerRadius, flipRadiansVertically(startRadians), flipRadiansVertically(endRadians), true);\n\n    // anticlockwise straight edge\n    cos = Math.cos(endRadians);\n    sin = Math.sin(endRadians);\n    canvas.moveTo(center + cos * center * outerRadius, center + sin * -center * outerRadius);\n    canvas.lineTo(center + cos * center * holeRadius, center + sin * -center * holeRadius);\n\n    // inner arc\n    canvas.arc(center, center, center * holeRadius, flipRadiansVertically(endRadians), flipRadiansVertically(startRadians), false);\n  }\n\n  canvas.fill();\n\n  if (isCircle) {\n    canvas.beginPath();\n    canvas.globalCompositeOperation = 'destination-out';\n    canvas.arc(center, center, center * holeRadius, 0, RADIANS_IN_CIRCLE);\n    canvas.fill();\n    canvas.globalCompositeOperation = 'source-over';\n  }\n}\n","import {findInterval, CENTS_PER_OCTAVE} from 'util/music';\n\nexport default function findIntervalRatio(fRoot, fComparison) {\n  const tolerance = 2;\n  const cents = findInterval(fRoot, fComparison) % CENTS_PER_OCTAVE;\n\n  if (Math.abs(cents - 100) < tolerance || Math.abs(cents + 1100) < tolerance) {\n    return [16, 15];\n  }\n  if (Math.abs(cents - 1100) < tolerance || Math.abs(cents + 100) < tolerance) {\n    return [15, 16];\n  }\n\n  if (Math.abs(cents - 200) < tolerance || Math.abs(cents + 1000) < tolerance) {\n    return [9, 8];\n  }\n  if (Math.abs(cents - 1000) < tolerance || Math.abs(cents + 200) < tolerance) {\n    return [8, 9];\n  }\n\n  if (Math.abs(cents - 300) < tolerance || Math.abs(cents + 900) < tolerance) {\n    return [5, 3];\n  }\n  if (Math.abs(cents - 900) < tolerance || Math.abs(cents + 300) < tolerance) {\n    return [3, 5];\n  }\n\n  if (Math.abs(cents - 400) < tolerance || Math.abs(cents + 800) < tolerance) {\n    return [5, 4];\n  }\n  if (Math.abs(cents - 800) < tolerance || Math.abs(cents + 400) < tolerance) {\n    return [4, 5];\n  }\n\n  if (Math.abs(cents - 500) < tolerance || Math.abs(cents + 700) < tolerance) {\n    return [3, 2];\n  }\n  if (Math.abs(cents - 700) < tolerance || Math.abs(cents + 500) < tolerance) {\n    return [2, 3];\n  }\n\n  if (Math.abs(cents - 600) < tolerance || Math.abs(cents + 600) < tolerance) {\n    return [13, 9];\n  }\n\n  if (Math.abs(cents - 1200) < tolerance || Math.abs(cents + 1200) < tolerance || Math.abs(cents) < tolerance) {\n    return [1, 1];\n  }\n}\n","import findIntervalRatio from 'util/findIntervalRatio';\nimport {RADIANS_IN_CIRCLE} from 'util/constants';\n\nexport default function drawInterval(radianA, radianB, diameter, canvas, radius, frequencyA, frequencyB, colorA, colorB) {\n  const center = diameter / 2;\n\n  const cosA = Math.cos(radianA);\n  const sinA = Math.sin(-radianA);\n\n  const cosB = Math.cos(radianB);\n  const sinB = Math.sin(-radianB);\n\n  const pointA = {\n    x: center + cosA * center * radius,\n    y: center + sinA * center * radius,\n  };\n\n  const pointB = {\n    x: center + cosB * center * radius,\n    y: center + sinB * center * radius,\n  };\n\n  const interval = findIntervalRatio(frequencyA, frequencyB);\n  if (interval) {\n    canvas.lineWidth = 1;\n    const xDiff = pointB.x - pointA.x;\n    const yDiff = pointB.y - pointA.y;\n    const diff = Math.sqrt(Math.pow(xDiff, 2) + Math.pow(yDiff, 2));\n    const radiusA = diff / interval[0] / 2;\n    const radiusB = diff / interval[1] / 2;\n\n    canvas.strokeStyle = typeof colorA === 'object' ? `rgb(${colorA.r}, ${colorA.g}, ${colorA.b})` : colorB;\n    for (let i = 0; i < interval[0]; i++) {\n      canvas.beginPath();\n      const centerX = pointA.x + xDiff / interval[0] * (i + 0.5);\n      const centerY = pointA.y + yDiff / interval[0] * (i + 0.5);\n      canvas.arc(centerX, centerY, radiusA, 0, RADIANS_IN_CIRCLE);\n      canvas.stroke();\n    }\n\n    canvas.strokeStyle = typeof colorB === 'object' ? `rgb(${colorB.r}, ${colorB.g}, ${colorB.b})` : colorB;\n    for (let i = 0; i < interval[1]; i++) {\n      canvas.beginPath();\n      const centerX = pointA.x + xDiff / interval[1] * (i + 0.5);\n      const centerY = pointA.y + yDiff / interval[1] * (i + 0.5);\n      canvas.arc(centerX, centerY, radiusB, 0, RADIANS_IN_CIRCLE);\n      canvas.stroke();\n    }\n  }\n\n  canvas.globalCompositeOperation = \"source-over\";\n  canvas.strokeStyle = \"white\";\n  canvas.lineWidth = 2;\n  canvas.beginPath();\n  canvas.moveTo(pointA.x, pointA.y);\n  canvas.lineTo(pointB.x, pointB.y);\n  canvas.stroke();\n}\n","import styles from './Display.module.scss';\nimport classnames from 'classnames';\nimport React from 'react';\nimport Canvas from './canvas';\nimport {toRadianDirection} from '@danehansen/math';\nimport {MODES, RADIANS_IN_CIRCLE, DEGREES_IN_CIRCLE} from 'util/constants';\nimport {useState, useEffect, useRef} from 'react';\nimport findColors from './findColors';\nimport fillSlice from './fillSlice';\nimport drawInterval from './drawInterval';\n\nexport default function Display({className, soundingPitchClasses, baseFrequencies, diameter, modeIndex, pitchSequence}) {\n  const rootNode = useRef();\n\n  const [root, setRoot] = useState(null);\n  const [buffer, setBuffer] = useState(null);\n  useEffect(() => {\n    if (!rootNode.current) {\n      return;\n    }\n    setRoot(new Canvas(rootNode.current, diameter, diameter));\n    setBuffer(new Canvas(undefined, diameter, diameter));\n  }, [rootNode, diameter]);\n\n  useEffect(() => {\n    if (!root) {\n      return;\n    }\n    root.resize(diameter, diameter);\n    buffer.resize(diameter, diameter);\n  }, [root, buffer, diameter]);\n\n  useEffect(() => {\n    if (!root) {\n      return;\n    }\n\n    const semitones = pitchSequence.length;\n    const colors = findColors(semitones);\n\n    function connectPitches() {\n      for (let i = 0; i < soundingPitchClasses.length; i++) {\n        const pitchClassA = soundingPitchClasses[i];\n        const sequenceIndexA = pitchSequence.indexOf(pitchClassA);\n        const degreesA = DEGREES_IN_CIRCLE / semitones * sequenceIndexA;\n        const frequencyA = baseFrequencies[sequenceIndexA];\n        for (let j = i + 1; j < soundingPitchClasses.length; j++) {\n          const pitchClassB = soundingPitchClasses[j];\n          const sequenceIndexB = pitchSequence.indexOf(pitchClassB);\n          const degreesB = DEGREES_IN_CIRCLE / semitones * sequenceIndexB;\n          const frequencyB = baseFrequencies[sequenceIndexB];\n          const colorA = colors[sequenceIndexA];\n          const colorB = colors[sequenceIndexB];\n          drawInterval(toRadianDirection(degreesA), toRadianDirection(degreesB), diameter, buffer, 0.4, frequencyA, frequencyB, colorA, colorB);\n        }\n      }\n    }\n\n    function drawSlices() {\n      const halfSlice = RADIANS_IN_CIRCLE / semitones / 2;\n      const {chords} = MODES[modeIndex];\n\n      for (let i = 0; i < semitones; i++) {\n        const pitch = pitchSequence[i];\n        const degrees = pitch / semitones * DEGREES_IN_CIRCLE;\n        const color = colors[i];\n        const isActive = soundingPitchClasses.indexOf(i) >= 0;\n        const radians = toRadianDirection(degrees);\n        const isInKey = !!chords[i];\n\n        fillSlice(buffer, color, diameter, radians - halfSlice, radians + halfSlice, isActive ? 1 : 0.95, isActive ? 0.12 : 0.1, isInKey);\n      }\n    }\n\n    root.clearRect();\n    buffer.clearRect();\n    drawSlices();\n    connectPitches();\n    root.drawImage(buffer);\n  }, [soundingPitchClasses, baseFrequencies, diameter, modeIndex, pitchSequence, buffer, root]);\n\n  return <canvas className={classnames(styles.root, className)} ref={rootNode} />;\n}\n","import styles from './Input.module.scss';\nimport classnames from 'classnames';\n\nexport default function Input({className, ...rest}) {\n  return <input className={classnames(styles.root, className)} {...rest} />\n}\n","import styles from './Label.module.scss';\nimport classnames from 'classnames';\n\nexport default function Label({className, children, text, wide, ...rest}) {\n  return <label className={classnames(styles.root, className, wide && styles.wide)} {...rest}>\n    {children}\n    {!!text && <div className={styles.text}>{text}</div>}\n  </label>\n}\n","import styles from './Button.module.scss';\nimport classnames from 'classnames';\n\nexport default function Button({\n  className,\n  href,\n  isActive,\n\n  component:Component = href ? 'a' : 'button',\n  target = href && '_blank',\n  ...rest\n}) {\n  return <Component className={classnames(styles.root, className, isActive && styles.isActive)} target={target} href={href} {...rest} />\n}\n","import styles from './Menu.module.scss';\nimport {OSCILLATOR_TYPES, MODES, EQ_FREQUENCIES, A4} from 'util/constants';\nimport {STANDARD_A4, STANDARD_SEMITONES, HUMAN_CENT_THRESHOLD, CENTS_PER_STANDARD_SEMITONE, CENTS_PER_OCTAVE} from 'util/music';\nimport Input from 'App/Input/Input';\nimport Label from 'App/Label/Label';\nimport Button from 'App/Button/Button';\n\nfunction findIncrementLabel(increment, semitones) {\n  if (increment === 1) {\n    return 'Clockwise';\n  } else if (increment === semitones - 1) {\n    return 'Anticlockwise';\n  }\n  if (semitones % STANDARD_SEMITONES === 0) {\n    if (increment === 7) {\n      return 'Circle of Fifths';\n    } else if (increment === semitones - 7) {\n      return 'Circle of Fourths';\n    }\n  }\n  return `skip ${increment - 1}`;\n}\n\nexport default function Menu({\n    a4,\n    setA4,\n    allPitchNames,\n    eq,\n    setEq,\n    modeIndex,\n    setModeIndex,\n    oscillatorType,\n    setOscillatorType,\n    pitchSkip,\n    setPitchSkip,\n    semitones,\n    setSemitones,\n    transposition,\n    setTransposition,\n    pitchSkipOptions,\n  }) {\n\n  function onOscillatorChange({ target: { value }}) {\n    setOscillatorType(value);\n  }\n\n  function onEQChange(index, {target: {value}}) {\n    const values = [...eq]\n    values[index] = value;\n    setEq(values);\n  }\n\n  return (\n    <form className={styles.root}>\n      <div className={styles.property}>\n        <h2 className={styles.title}>Oscillator</h2>\n        {Object.values(OSCILLATOR_TYPES).map((value) => {\n          return <Label key={value} text={value}>\n            <Input type=\"radio\" checked={oscillatorType === value} value={value} onChange={onOscillatorChange} />\n          </Label>\n        })}\n      </div>\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>EQ<Button className={styles.reset} onClick={(evt) => {evt.preventDefault(); setEq(EQ_FREQUENCIES.map(() => 0))}}>reset</Button></h2>\n        <div className={styles.verticalRangeHolder}>\n          {eq.map((value, i) => {\n            return <Input\n              key={i} className={styles.verticalRange} type=\"range\" min=\"-1\" max={1 * 0.27} step=\"0.01\" value={value} onChange={onEQChange.bind(null, i)} />\n          })}\n        </div>\n      </div>\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>Transposition</h2>\n        <div className={styles.columns}>\n          {allPitchNames.map((name, index) => {\n            return <Label text={name} key={name}>\n              <Input type=\"radio\" value={index * CENTS_PER_STANDARD_SEMITONE} name=\"transposition\" checked={transposition === index * CENTS_PER_STANDARD_SEMITONE} onChange={({target:{value}}) => {setTransposition(parseInt(value))}} />\n            </Label>\n          })}\n        </div>\n      </div>\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>Mode</h2>\n        <div className={styles.columns}>\n          {MODES.map((modeObj, index) => {\n            return <Label text={modeObj.name} key={modeObj.name}>\n              <Input type=\"radio\" value={index} name=\"mode\" checked={modeIndex === index} onChange={({target:{value}}) => {setModeIndex(parseInt(value))}} />\n            </Label>\n          })}\n        </div>\n      </div>\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>Semitones<Button className={styles.reset} onClick={(evt) => {evt.preventDefault(); setSemitones(STANDARD_SEMITONES)}}>reset</Button><div className={styles.valueText}>{semitones}</div></h2>\n        <Label wide>\n          <Input type=\"range\" min={1} max={CENTS_PER_OCTAVE / HUMAN_CENT_THRESHOLD} value={semitones} onChange={({target: {value}}) => {setSemitones(parseInt(value))}} />\n        </Label>\n      </div>\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>A4<Button className={styles.reset} onClick={(evt) => {evt.preventDefault(); setA4(STANDARD_A4)}}>reset</Button><div className={styles.valueText}>{a4}{A4[a4] && ` (${A4[a4]})`}</div></h2>\n        <Label wide>\n          <Input\n            type=\"range\"\n            min={Math.min(...Object.keys(A4))}\n            max={Math.max(...Object.keys(A4))}\n            value={a4}\n            onChange={({target:{value}}) => {setA4(parseInt(value))}}\n          />\n        </Label>\n      </div>\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>Organize</h2>\n        <div className={styles.columns}>\n        {pitchSkipOptions.map((num) => {\n          return <Label text={findIncrementLabel(num, semitones)} key={num}>\n            <Input type=\"radio\" value={num} name=\"pitchSkip\" checked={pitchSkip === num} onChange={({target:{value}}) => {setPitchSkip(parseInt(value))}} />\n          </Label>\n        })}\n        </div>\n      </div>\n\n      <Button\n        className={styles.issue}\n        href=\"https://github.com/danehansen/shepard-wheel/issues\"\n      >submit issue</Button>\n    </form>\n  );\n}\n","import styles from './PitchLabel.module.scss';\nimport classnames from 'classnames';\nimport { DEGREES_IN_CIRCLE } from 'util/constants';\n\nexport default function PitchLabel({pitchNamesSorted, diameter, chordNamesSorted}) {\n  const semitones = pitchNamesSorted.length;\n\n  return <div className={styles.root}>{pitchNamesSorted.map(function(name, index) {\n    const degrees = DEGREES_IN_CIRCLE / semitones * index;\n    const hasAccidental = name?.length === 2 || name?.length === 3;\n    const isSmall = name?.length > 3;\n    let transform;\n    let transformOrigin;\n    const radius = -0.475;\n    const accidentalRadis = radius * 0.96;\n\n    if (isSmall) {\n      transform = `translate(0%, -50%) rotate(${degrees}deg) translate(0%, 50%) translateY(${diameter * radius}px) rotate(${90}deg)`;\n      transformOrigin = `0 50%`;\n    } else {\n      transformOrigin = `50% 0`;\n      if (hasAccidental) {\n        transform = `translate(-50%, 0) rotate(${degrees}deg) translateY(${diameter * accidentalRadis}px) `;\n      } else {\n        transform = `translate(-50%, 0) rotate(${degrees}deg) translateY(${diameter * radius}px) `;\n      }\n    }\n\n    return <div\n      className={classnames(styles.button, isSmall && styles.small, hasAccidental && styles.hasAccidental, !chordNamesSorted[index] && styles.deemphesized)}\n      key={index}\n      style={{transform, transformOrigin}}\n    >{name}</div>\n  })}</div>\n}\n","import styles from './ChordLabel.module.scss';\nimport {DEGREES_IN_CIRCLE} from 'util/constants';\n\nexport default function ChordLabel({chordNamesSorted, diameter}) {\n  const semitones = chordNamesSorted.length;\n\n  return <div className={styles.root}>{chordNamesSorted.map(function(name, index) {\n    if (!name) {\n      return null;\n    }\n    const degrees = DEGREES_IN_CIRCLE / semitones * index;\n\n    return <div\n      className={styles.button}\n      key={index}\n      style={{\n        transform: `translate(-50%, -50%) rotate(${degrees}deg) translateY(${diameter * -0.22}px)`,\n      }}\n    >{name}</div>\n  })}</div>\n}\n","import {useState, useEffect} from 'react';\n\nconst WIN = typeof window !== 'undefined' ? window : null;\n\nconst PLACEHOLDER_WINDOW = {\n  addEventListener() {},\n  innerHeight: 0,\n  innerWidth: 0,\n  removeEventListener() {},\n};\n\nexport function useViewportDimensions(win = WIN || PLACEHOLDER_WINDOW) {\n  const [innerHeight, setInnerHeight] = useState(win.innerHeight);\n  const [innerWidth, setInnerWidth] = useState(win.innerWidth);\n\n  useEffect(() => {\n    function onResize() {\n      setInnerHeight(win.innerHeight);\n      setInnerWidth(win.innerWidth);\n    }\n\n    win.addEventListener('resize', onResize);\n    return () => {\n      win.removeEventListener('resize', onResize);\n    }\n  }, [win]);\n\n  return [innerWidth, innerHeight];\n}\n\nexport function useBoundingClientRect(ref) {\n  const DEFAULT_RECT = {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0,\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n  };\n  const [rect, setRect] = useState(DEFAULT_RECT);\n  const [innerWidth, innerHeight] = useViewportDimensions();\n\n  useEffect(() => {\n    if (!ref.current) {\n      return;\n    }\n    setRect(ref.current.getBoundingClientRect());\n  }, [innerWidth, innerHeight, ref]);\n\n  return rect;\n}\n","import {useRef, useState} from 'react';\nimport {modulo, toDegreeDirection} from '@danehansen/math';\nimport styles from './TouchPad.module.scss';\nimport {RADIANS_IN_CIRCLE, DEGREES_IN_CIRCLE, IS_TOUCH_SCREEN} from 'util/constants';\nimport {useBoundingClientRect} from 'util/hooks';\n\nexport default function TouchPad({\n  pitchSequence,\n  setManualPitchClasses,\n  togglePitchClass,\n  isToggling,\n}) {\n  const rootRef = useRef();\n  const [pointerIsDown, setPointerIsDown] = useState(false);\n  const {length:semitones} = pitchSequence;\n  const rootRect = useBoundingClientRect(rootRef);\n  const diameter = rootRect.width;\n  const halfSlice = RADIANS_IN_CIRCLE / semitones / 2;\n\n  function findPitchIndex(clientX, clientY) {\n    const x = clientX - rootRect.x - diameter * 0.5;\n    const y = -(clientY - rootRect.y - diameter * 0.5);\n    const length = Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));\n\n    if (length <= diameter / 2) {\n      const rad = modulo(Math.atan2(y, x), RADIANS_IN_CIRCLE);\n      const degrees = toDegreeDirection(rad - halfSlice);\n      const index = Math.floor(degrees / DEGREES_IN_CIRCLE * semitones);\n      return index;\n    }\n    return null;\n  }\n\n  function handle(evt) {\n    const pitchClasses = [];\n    const type = evt.type;\n    const isTouchEvent = /touch/.test(type);\n\n\n    switch(type) {\n      case 'mousedown':\n        setPointerIsDown(true);\n        break;\n      case 'mouseup':\n        setPointerIsDown(false);\n        break;\n      // no default\n    }\n\n    if (isTouchEvent) {\n      const targetTouches = evt.targetTouches || [];\n      for (let i = 0; i < targetTouches.length; i++) {\n        const touch = targetTouches[i];\n        const index = findPitchIndex(touch.clientX, touch.clientY);\n        if (typeof index === 'number') {\n          pitchClasses.push(index);\n        } else {\n          setPointerIsDown(false);\n        }\n      }\n    } else {\n      if (type !== 'mouseup') {\n        const index = findPitchIndex(evt.clientX, evt.clientY);\n        if (typeof index === 'number') {\n          pitchClasses.push(index);\n        } else {\n          setPointerIsDown(false);\n        }\n      }\n    }\n\n    setManualPitchClasses(pitchClasses);\n  }\n\n  function handleToggle(evt) {\n    const index = findPitchIndex(evt.clientX, evt.clientY);\n    if (typeof index === 'number') {\n      togglePitchClass(index);\n    }\n  }\n\n  let listeners = {\n    onClick: isToggling ? handleToggle : null,\n  };\n  if (IS_TOUCH_SCREEN) {\n    listeners = {\n      ...listeners,\n      onTouchStart: handle,\n      onTouchEnd: handle,\n      onTouchCancel: handle,\n      onTouchMove: handle,\n    }\n  } else {\n    listeners = {\n      ...listeners,\n      onMouseUp: handle,\n      onMouseDown: handle,\n      onMouseMove: pointerIsDown ? handle : null,\n    }\n  }\n\n  return <div\n    ref={rootRef}\n    className={styles.root}\n    {...listeners}\n  />;\n}\n","import {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function FirstTouch({component: Component = 'div', callback, ...rest}) {\n  const [hasCalledCallback, setHasCalledCallback] = useState(false);\n\n  function handle(evt) {\n    setHasCalledCallback(true);\n    callback();\n  }\n\n  let listeners = {};\n  if (!hasCalledCallback) {\n    listeners = {\n      onClick: handle,\n      onMouseUp: handle,\n      onMouseDown: handle,\n      onMouseEnter: handle,\n      onMouseLeave: handle,\n      onMouseOver: handle,\n      onMouseOut: handle,\n      onMouseMove: handle,\n      onTouchStart: handle,\n      onTouchEnd: handle,\n      onTouchCancel: handle,\n      onTouchMove: handle,\n    }\n  }\n\n  return <Component {...listeners} {...rest}></Component>;\n}\n\nFirstTouch.propTypes = {\n  component: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  callback: PropTypes.func.isRequired,\n};\n","import styles from './MatchingChords.module.scss';\nimport classnames from 'classnames';\nimport {CHORD_TYPES} from 'util/constants';\n\nexport default function MatchingChords({chords, pitchNames}) {\n  const chordHolders = [];\n  for (let i = 0; i < chords.length; i++) {\n    const {fingersNeeded, chordIndex, rootPitch} = chords[i];\n    const CHORD_TYPE = CHORD_TYPES[chordIndex];\n    if (!chordHolders[fingersNeeded]) {\n      chordHolders[fingersNeeded] = [];\n    }\n    chordHolders[fingersNeeded].push(<span\n      className={styles.chord}\n      key={i}\n    >{pitchNames[rootPitch][CHORD_TYPE.textTransform]()}{CHORD_TYPE.suffix}<sup /></span>);\n  }\n\n  return (\n    <div className={styles.root}>\n    {chordHolders.map((chordHolder, i) => {\n      return <div\n        className={classnames(styles.chordHolder, styles[`fingersNeeded${i}`])}\n        key={i}\n      >{chordHolder}</div>\n    })}\n    </div>\n  );\n}\n","import styles from './MultiTouchButtonGroup.module.scss';\nimport {IS_TOUCH_SCREEN} from 'util/constants';\nimport {useRef, useState} from 'react';\nimport classnames from 'classnames';\nimport {useBoundingClientRect} from 'util/hooks';\n\nexport default function MultiTouchButtonGroup({children, className, setActiveButtons}) {\n  const [pointerIsDown, setPointerIsDown] = useState(false);\n  const rootRef = useRef()\n  const rootRect = useBoundingClientRect(rootRef);\n\n  let listeners;\n  if (IS_TOUCH_SCREEN) {\n    listeners = {\n      onTouchStart: handle,\n      onTouchEnd: handle,\n      onTouchCancel: handle,\n      onTouchMove: handle,\n    }\n  } else {\n    listeners = {\n      onMouseUp: handle,\n      onMouseDown: handle,\n      onMouseMove: pointerIsDown ? handle : null,\n    }\n  }\n\n  function handle(evt) {\n    const activeChildren = [];\n    const type = evt.type;\n    const isTouchEvent = /touch/.test(type);\n\n    switch(type) {\n      case 'mousedown':\n        setPointerIsDown(true);\n        break;\n      case 'mouseup':\n        setPointerIsDown(false);\n        break;\n      // no default\n    }\n    if (isTouchEvent) {\n      const targetTouches = evt.targetTouches || [];\n      for (let i = 0; i < targetTouches.length; i++) {\n        const touch = targetTouches[i];\n        const index = Math.floor((touch.clientX - rootRect.x) / rootRect.width * children.length);\n        if (typeof index === 'number') {\n          activeChildren.push(index);\n        } else {\n          setPointerIsDown(false);\n        }\n      }\n    } else {\n      if (type !== 'mouseup') {\n        const index = Math.floor((evt.clientX - rootRect.x) / rootRect.width * children.length);\n        if (typeof index === 'number') {\n          activeChildren.push(index);\n        } else {\n          setPointerIsDown(false);\n        }\n      }\n    }\n    setActiveButtons(activeChildren);\n  }\n\n\n\n  return (\n    <div\n      ref={rootRef}\n      className={classnames(styles.root, className)}\n      {...listeners}\n    >\n      <div className={styles.killTouches}>\n        {children}\n      </div>\n    </div>\n  );\n}\n","import Button from 'App/Button/Button';\nimport styles from './VirtualFingers.module.scss';\nimport {VIRTUAL_FINGER_UNITS} from 'util/constants';\nimport {CENTS_PER_STANDARD_SEMITONE, STANDARD_SEMITONES} from 'util/music';\nimport MultiTouchButtonGroup from 'App/MultiTouchButtonGroup/MultiTouchButtonGroup';\nimport {useState, useEffect} from 'react';\n\nconst {STEPS, CENTS} = VIRTUAL_FINGER_UNITS;\n\nexport default function VirtualFingers({pitchNames, hasMode, toggleVirtualFinger, setManualVirtualFingers, isToggling, soundingVirtualFingers}) {\n  const [halfStepIndexes, setHalfStepIndexes] = useState([]);\n  const [stepIndexes, setStepIndexes] = useState([]);\n\n  let soundingVirtualStepIndexes = [];\n  let soundingVirtualHalfstepIndexes = [];\n    soundingVirtualFingers.forEach(({value, units}) => {\n      if (units === STEPS) {\n        soundingVirtualStepIndexes.push(value)\n      } else {\n        soundingVirtualHalfstepIndexes.push(value / CENTS_PER_STANDARD_SEMITONE);\n      }\n    })\n\n  useEffect(() => {\n    const virtualFingers = [];\n    stepIndexes.forEach((index) => {\n      virtualFingers.push(`${index + 1}${STEPS}`);\n    });\n    halfStepIndexes.forEach((index) => {\n      virtualFingers.push(`${(index + 1) * CENTS_PER_STANDARD_SEMITONE}${CENTS}`);\n    });\n    setManualVirtualFingers(virtualFingers);\n  }, [stepIndexes, halfStepIndexes, setManualVirtualFingers]);\n\n  const semitoneNodes = [];\n  for (let i = 1; i < STANDARD_SEMITONES; i++) {\n    semitoneNodes.push(\n      <Button\n        key={i}\n        className={styles.button}\n        isActive={soundingVirtualHalfstepIndexes.indexOf(i) >= 0}\n        onClick={isToggling ? toggleVirtualFinger.bind(null, `${(i + 1) * CENTS_PER_STANDARD_SEMITONE}${CENTS}`) : null}\n      >\n        <span className={styles.fraction}>+</span>\n        <span className={styles.fraction}>\n          <div className={styles.numerator}>{i}</div>\n          <div className={styles.denominator}>2</div>\n        </span>\n      </Button>\n    )\n  }\n\n  const stepNodes = [];\n  if (hasMode) {\n    for (let i = 1; i < 7; i++) {\n      stepNodes.push(\n        <Button\n          key={i}\n          isActive={soundingVirtualStepIndexes.indexOf(i) >= 0}\n          className={styles.button}\n          onClick={isToggling ? toggleVirtualFinger.bind(null, `${i + 1}${STEPS}`) : null}\n        >\n          <span className={styles.fraction}>+{i + 1}</span>\n        </Button>\n      );\n    }\n  }\n\n  function handleHalfSteps(activeButtons) {\n    setHalfStepIndexes(activeButtons);\n  }\n\n  function handleSteps(activeButtons) {\n    setStepIndexes(activeButtons);\n  }\n\n  const Component = isToggling ? 'div' : MultiTouchButtonGroup;\n  const semitoneListeners = {};\n  const stepListeners = {};\n  if (!isToggling) {\n    semitoneListeners.setActiveButtons = handleHalfSteps;\n    stepListeners.setActiveButtons = handleSteps;\n  }\n\n  return (\n    <div className={styles.root}>\n      <Component\n        className={styles.row}\n        {...semitoneListeners}\n      >\n        {semitoneNodes}\n      </Component>\n      {hasMode && (\n        <Component\n          className={styles.row}\n          {...stepListeners}\n        >\n          {stepNodes}\n        </Component>\n      )}\n    </div>\n  );\n}\n","export default function findPitchSkipOptions(semitones) {\n  const increments = [1];\n  for(let i = 2; i < semitones; i++) {\n    if (findIncrementsOfSemitone(semitones, i)) {\n      increments.push(i);\n    }\n  }\n  return increments;\n}\n\nfunction findIncrementsOfSemitone(semitones, increment) {\n  const semitoneIndexes = [];\n  for(let i = 0; i < semitones; i++) {\n    const semitoneIndex = (i * increment) % semitones;\n    if (semitoneIndexes[semitoneIndex] !== undefined) {\n      return false;\n    } else {\n      semitoneIndexes[semitoneIndex] = semitoneIndex;\n    }\n  }\n  return semitoneIndexes;\n}\n","import {modulo} from '@danehansen/math';\nimport {MODES} from 'util/constants';\nimport {STANDARD_SEMITONES, CENTS_PER_STANDARD_SEMITONE} from 'util/music';\n\nconst PITCH_NAMES = ['A', ['A♯','B♭'], 'B', 'C', ['C♯','D♭'], 'D', ['D♯','E♭'], 'E', 'F', ['F♯','G♭'], 'G', ['G♯','A♭']];\n\nfunction m(num) {\n  return modulo(num, STANDARD_SEMITONES);\n}\n\nexport default function findAllPitchNames(transposition, modeIndex) {\n  // TODO: this is bad!\n  if ((transposition === 400 && modeIndex === 1) || (transposition === 100 && modeIndex === 6)) {\n    return ['A','A♯','B','B♯','C♯','D','D♯','E','E♯','F♯','G','G♯'];\n  } else if ((transposition === 600 && modeIndex === 1) || (transposition === 300 && modeIndex === 6)) {\n    return ['A','B♭','B','C','D♭','D','E♭','E','F','G♭','G','A♭'];\n  } else if ((transposition === 900 && modeIndex === 1) || (transposition === 600 && modeIndex === 6)) {\n    return ['A','A♯','B','C','C♯','D','D♯','E','E♯','F♯','G','G♯'];\n  } else if ((transposition === 1100 && modeIndex === 1) || (transposition === 800 && modeIndex === 6)) {\n    return ['A','A♯','B','B♯','C♯','D','D♯','E','E♯','F♯♯','G','G♯'];\n  }\n  const {useModeForNaming} = MODES[modeIndex];\n  if (typeof useModeForNaming === 'number') {\n    return findAllPitchNames(transposition, useModeForNaming);\n  }\n\n  function makeArrayWithNakedLettersInKeySpots(array) {\n    const letters = ['A', 'B', 'C', 'D', 'E', 'F', 'G'];\n    const {chords} = MODES[modeIndex];\n    let lastLetterIndex = 0;\n    for (let i = 0; i < STANDARD_SEMITONES; i++) {\n      const chordIndex = m(i - transposition / CENTS_PER_STANDARD_SEMITONE);\n      const chord = chords[chordIndex];\n      if (chord) {\n        array[i] = letters[lastLetterIndex];\n        lastLetterIndex++;\n      }\n    }\n    return array;\n  }\n\n  function addAccidentalsToKeySpots(array) {\n    for (let i = 0; i < STANDARD_SEMITONES; i++) {\n      const pitchName = PITCH_NAMES[i];\n      const lastPitchName = PITCH_NAMES[m(i - 1)]\n      const nextPitchName = PITCH_NAMES[m(i + 1)]\n      if (array[i]) {\n        if (!Array.isArray(pitchName)) {\n          if (lastPitchName === array[i]) {\n            array[i] = `${array[i]}♯`;\n          } else if (nextPitchName === array[i]) {\n            array[i] = `${array[i]}♭`;\n          }\n        } else {\n          const index = pitchName.findIndex((node) => node.indexOf(array[i]) >= 0)\n          array[i] = pitchName[index];\n        }\n      }\n    }\n  }\n\n  function fillInEmptySpots(array) {\n    const hasFlats = array.join('').indexOf('♭') >= 0;\n    const hasSharps = array.join('').indexOf('♯') >= 0;\n    for (let i = 0; i < 12; i++) {\n      if (array[i]) {\n        continue;\n      }\n      const pitchName = PITCH_NAMES[i];\n      if (Array.isArray(pitchName)) {\n        if (hasFlats && !hasSharps) {\n          array[i] = pitchName[1];\n        } else if (!hasFlats && hasSharps) {\n          array[i] = pitchName[0];\n        } else {\n          // defaulting to sharps for C major\n          array[i] = pitchName[0];\n        }\n      } else {\n        array[i] = pitchName;\n      }\n    }\n  }\n\n  const allNames = [];\n  makeArrayWithNakedLettersInKeySpots(allNames);\n  addAccidentalsToKeySpots(allNames);\n  fillInEmptySpots(allNames);\n  return allNames;\n}\n","import {HUMAN_MAX_FREQ, transposeFrequency, CENTS_PER_OCTAVE} from 'util/music';\nimport {EQ_FREQUENCIES} from 'util/constants';\nimport findBaseFrequency from 'util/findBaseFrequency';\n\nlet audioContext;\nlet headNode;\nlet currentOscillators = {};\n\nexport function initializaAudio(eq) {\n  if (audioContext) {\n    audioContext.close();\n  }\n  audioContext = new (window.AudioContext || window.webkitAudioContext)();\n  const gainNode = audioContext.createGain();\n  gainNode.connect(audioContext.destination);\n\n  // TODO: figure out this gain value\n  gainNode.gain.value = 0.1;\n\n  headNode = gainNode;\n  for(let i = 0; i < eq.length; i++) {\n    const eqNode = audioContext.createBiquadFilter();\n\n    if (i === 0) {\n      eqNode.type = 'lowshelf'\n    } else if (i === eq.length - 1) {\n      eqNode.type = 'highshelf'\n    } else {\n      eqNode.type = 'peaking'\n      // eqNode.Q.value = 1; // 0.0001 to 1000\n    }\n    eqNode.frequency.value = EQ_FREQUENCIES[i];\n    eqNode.gain.value = eq[i] * 40;\n    eqNode.connect(headNode)\n    headNode = eqNode;\n  }\n  gainNode.connect(headNode);\n\n  Object.values(currentOscillators).forEach(oscillator => {\n    oscillator.stop();\n    oscillator.disconnect();\n  });\n  currentOscillators = {};\n}\n\nfunction findAudibleOctaves(frequency) {\n  const frequencies = [];\n  while(frequency < HUMAN_MAX_FREQ) {\n    frequencies.push(frequency);\n    frequency *= 2;\n  }\n  return frequencies;\n}\n\nexport function playPitchClasses(pitchClasses, transposition, oscillatorType, a4, semitones) {\n  if (!audioContext) {\n    return;\n  }\n  const oldOscillators = currentOscillators;\n  const newOscillators = {};\n  const nonExistingOscillators = [];\n  const rootFrequency = transposeFrequency(a4, transposition);\n  const baseFrequencies = [];\n  const allFrequencies = [];\n\n  // find all manual and toggled frequencies\n    for (let i = 0; i < pitchClasses.length; i++) {\n      const pitchClass = pitchClasses[i];\n      const fraction  = pitchClass / semitones;\n      const cents = fraction * CENTS_PER_OCTAVE;\n      const frequency = transposeFrequency(rootFrequency, cents);\n      const baseFrequency = findBaseFrequency(frequency);\n      baseFrequencies.push(baseFrequency);\n    }\n\n  // add all octaves\n    for(const baseFrequency of baseFrequencies) {\n      allFrequencies.push(...findAudibleOctaves(baseFrequency));\n    }\n\n  // keep existing matching oscillators going\n    for (const frequency of allFrequencies) {\n      const oscillator = oldOscillators[frequency];\n      if (oscillator) {\n        newOscillators[frequency] = oscillator;\n        delete oldOscillators[frequency];\n      } else {\n        nonExistingOscillators.push(frequency);\n      }\n    }\n\n  const leftoverOscillators = Object.values(oldOscillators);\n\n  // reuse remaining oscillators or make new ones for remaning frequencies\n    for(const frequency of nonExistingOscillators) {\n      let oscillator;\n      if (leftoverOscillators.length) {\n        oscillator = leftoverOscillators.pop();\n        oscillator.frequency.setValueAtTime(frequency, 0);\n      } else {\n        oscillator = audioContext.createOscillator();\n        oscillator.type = oscillatorType;\n        oscillator.frequency.value = frequency;\n        oscillator.connect(headNode);\n        oscillator.start();\n      }\n      newOscillators[frequency] = oscillator;\n    }\n\n  // kill any leftover osciilators\n    leftoverOscillators.forEach(oscillator => {\n      oscillator.stop();\n      oscillator.disconnect();\n    });\n    currentOscillators = newOscillators;\n}\n","import findAllPitchNames from 'util/findAllPitchNames';\nimport {MODES} from 'util/constants';\n\nexport default function findBestPitchNames(transposition, modeIndex) {\n  let lowestNumOfIncidentals = Number.MAX_VALUE;\n  let lowestNames = [];\n  for (let t = transposition; t < 1200 + transposition; t += 100) {\n    for (let m = modeIndex; m <= 7 + modeIndex; m++) {\n      const names = findAllPitchNames(t % 1200, (m % 7) +1);\n      const incidentals = countKeyIncidentals(t % 1200, (m % 7) +1, names);\n      if (incidentals < lowestNumOfIncidentals) {\n        lowestNumOfIncidentals = incidentals;\n        lowestNames = [names];\n      } else if (incidentals === lowestNumOfIncidentals) {\n        lowestNames.push(names);\n      }\n    }\n  }\n  return lowestNames[0];\n}\n\nfunction countKeyIncidentals(transposition, modeIndex, names) {\n  const {chords} = MODES[modeIndex];\n  let str = '';\n  for (let i = 0; i < chords.length; i++) {\n    if (chords[i]) {\n      str += names[i];\n    }\n  }\n  const regex = /[♭♯]/gi;\n  const match = str.match(regex);\n  if (!match) {\n    return 0;\n  }\n\n  return match.length;\n}\n","import {round} from '@danehansen/math';\nimport {STANDARD_SEMITONES, CENTS_PER_STANDARD_SEMITONE} from 'util/music';\n\nexport default function findPitchNames(semitones, transposition, allPitchNames) {\n  return [...Array(semitones).keys()].map(function(i) {\n    const nameIndexFloat = (i / semitones * STANDARD_SEMITONES + (transposition / CENTS_PER_STANDARD_SEMITONE)) % STANDARD_SEMITONES;\n    const nameIndex = Math.floor(nameIndexFloat);\n    const prefix = allPitchNames[nameIndex];\n    const remainder = nameIndexFloat % 1;\n    if (!remainder) {\n      return prefix;\n    }\n    return `${prefix}${String(round(remainder, 0.001)).slice(1,5)}`;\n  })\n}\n","import {HUMAN_MIN_FREQ} from 'util/music';\n\nexport default function findBaseFrequency(frequency) {\n  while(frequency / 2 > HUMAN_MIN_FREQ) {\n    frequency /= 2;\n  }\n  return frequency;\n}\n","import {STANDARD_SEMITONES, CENTS_PER_STANDARD_SEMITONE, transposeFrequency} from 'util/music';\nimport findBaseFrequency from './findBaseFrequency';\n\nexport default function findBaseFrequencies(semitones, rootFrequency) {\n  const frequencies = [];\n  for (let i = 0; i < semitones; i++) {\n    frequencies.push(findBaseFrequency(transposeFrequency(rootFrequency, i * CENTS_PER_STANDARD_SEMITONE * (STANDARD_SEMITONES / semitones))));\n  }\n  return frequencies;\n}\n","export default function findPitchSequence(semitones, pitchSkip) {\n  const sequence = []\n  for (let i = 0; i < semitones; i++) {\n    sequence.push((i * pitchSkip) % semitones);\n  }\n  return sequence;\n}\n","import {MODES} from 'util/constants';\n\nexport default function findChordNames(semitones, modeIndex, pitchSkip) {\n  const twelveChordsInMode = [...MODES[modeIndex].chords];\n  const semitonesChordsInMode = [];\n  for (let i = 0; i < semitones; i++) {\n    const index = i / semitones * twelveChordsInMode.length;\n    semitonesChordsInMode.push(twelveChordsInMode[index] || null);\n  }\n\n  const semitonesChordsInModeSorted = semitonesChordsInMode.map((chord, i) => {\n    const index = (i * pitchSkip) % semitones;\n    return semitonesChordsInMode[index];\n  });\n\n  return semitonesChordsInModeSorted;\n}\n","export default function sortPitchNames(pitchNames, pitchSkip) {\n  const sorted = pitchNames.map(function(pitchName, index) {\n    return pitchNames[(index * pitchSkip) % pitchNames.length];\n  })\n  return sorted;\n}\n","import {modulo} from '@danehansen/math';\nimport {STANDARD_SEMITONES} from 'util/music';\nimport {CHORD_TYPES} from 'util/constants';\n\nexport default function findChords(pitches, semitones, pitchNames, chordTypes = CHORD_TYPES) {\n  const matchingChords = [];\n  const kLimit = pitches.length;\n  if (!kLimit) {\n    return matchingChords;\n  }\n  const cents = pitches.map(convertPitchToCents)\n  const inversions = findInversionsOfChord(cents);\n  const iLimit = 12;\n  const jLimit = chordTypes.length;\n\n  for (let i = 0; i < iLimit; i++) {\n    const transposition = i * 100;\n\n    for (let j = 0; j < jLimit; j++) {\n      const chord = chordTypes[j];\n\n      for (let k = 0; k <= kLimit; k++) {\n        let rootCent;\n        let additionalCents;\n        let inversion;\n\n        if (k === kLimit) {\n          inversion = inversions[0];\n          rootCent = transposition;\n          additionalCents = inversion.map(cent => modulo(cent - rootCent, 1200));\n        } else {\n          inversion = inversions[k];\n          rootCent = inversion[0];\n          additionalCents = inversion.slice(1).map(cent => modulo(cent - rootCent, 1200));\n        }\n\n        if (transposition === rootCent) {\n          let fingersNeeded = findFingersNeeded(additionalCents, chord);\n\n          if (typeof fingersNeeded === 'number') {\n            const rootPitch = convertCentsToPitch(rootCent);\n            const obj = {\n              fingersNeeded: k === kLimit ? fingersNeeded + 1 : fingersNeeded,\n              name: `${pitchNames[rootPitch][chord.textTransform]()}${chord.suffix}`,\n              rootPitch,\n              chordIndex: j,\n            }\n            matchingChords.push(obj);\n          }\n        }\n      }\n    }\n\n  }\n  matchingChords.sort(sortOnName).sort(sortOnChordsIndex).sort(sortOnFingersNeeded);\n\n  return matchingChords;\n\n  function convertPitchToCents(pitch) {\n    return pitch / semitones * STANDARD_SEMITONES * 100;\n  }\n\n  function convertCentsToPitch(cents) {\n    return cents / 100 / STANDARD_SEMITONES * semitones;\n  }\n}\n\nfunction findInversionsOfChord(pitches) {\n  const results = [];\n  for (let i = 0; i < pitches.length; i++) {\n    results.push(pitches.map((pitch, j) => pitches[(j + i) % pitches.length]))\n  }\n  return results;\n}\n\nfunction sortOnFingersNeeded(chordA, chordB) {\n  return chordA.fingersNeeded - chordB.fingersNeeded;\n}\n\nfunction sortOnChordsIndex(chordA, chordB) {\n  return chordA.chordIndex - chordB.chordIndex;\n}\n\nfunction sortOnName(chordA, chordB) {\n  if (chordA.name > chordB.name) {\n    return 1;\n  } else if (chordA.name < chordB.name) {\n    return -1;\n  }\n  return 0;\n}\n\nfunction findFingersNeeded(additionalPitches, chord) {\n  let correctPitches = 0;\n  for (let i = 0; i < additionalPitches.length; i++) {\n    if (chord.additionalPitches.indexOf(additionalPitches[i]) < 0) {\n      return;\n    }\n    correctPitches++;\n  }\n  return chord.additionalPitches.length - correctPitches;\n}\n","import {throttle} from 'lodash';\n\nconst replaceState = throttle((queryString) => {\n  window.history.replaceState(null, null, `${window.location.origin}${window.location.pathname}?${queryString}`);\n}, 1000);\n\nexport default replaceState;\n","import styles from './App.module.scss';\nimport Display from './Display/Display';\nimport Menu from './Menu/Menu';\nimport PitchLabel from './PitchLabel/PitchLabel';\nimport ChordLabel from './ChordLabel/ChordLabel';\nimport TouchPad from './TouchPad/TouchPad';\nimport Button from './Button/Button';\nimport FirstTouch from './FirstTouch/FirstTouch';\nimport MatchingChords from './MatchingChords/MatchingChords';\nimport VirtualFingers from './VirtualFingers/VirtualFingers';\nimport Label from './Label/Label';\nimport Input from './Input/Input';\nimport {OSCILLATOR_TYPES, DEFAULT_TRANSPOSITION, EQ_FREQUENCIES, MODES, VIRTUAL_FINGER_UNITS} from 'util/constants';\nimport {STANDARD_A4, STANDARD_SEMITONES, transposeFrequency, CENTS_PER_OCTAVE} from 'util/music';\nimport findPitchSkipOptions from 'util/findPitchSkipOptions';\nimport findBestPitchNames from 'util/findBestPitchNames';\nimport findPitchNames from 'util/findPitchNames';\nimport findBaseFrequencies from 'util/findBaseFrequencies';\nimport findPitchSequence from 'util/findPitchSequence';\nimport findChordNames from 'util/findChordNames';\nimport sortPitchNames from 'util/sortPitchNames';\nimport {initializaAudio, playPitchClasses} from 'util/shepardTone';\nimport {useViewportDimensions} from 'util/hooks';\nimport findChords from 'util/findChords';\nimport replaceState from 'util/replaceState';\n\nimport {useState, useEffect} from 'react';\nimport queryString from 'query-string';\nimport {isEqual, unionWith} from 'lodash';\n\nexport default function App() {\n  // useEffect(() => {\n  //   function handle(evt) {\n  //     if (typeof evt.scale === 'number' && evt.scale !== 1) {\n  //       evt.preventDefault();\n  //     }\n  //\n  //     if (evt.touches?.length > 1) {\n  //       evt.preventDefault();\n  //     }\n  //   }\n  //\n  //   const options = {\n  //     // passive: false,\n  //     // capture: false,\n  //     // signal\n  //   };\n  //   let useCapture;\n  //   // useCapture = false;\n  //\n  //   const events = [\n  //     'pointerover',\n  //     'pointerout',\n  //     'pointerenter',\n  //     'pointerleave',\n  //     'pointerdown',\n  //     'pointerup',\n  //     'pointermove',\n  //     'pointercancel',\n  //     'click',\n  //     'mouseup',\n  //     'mousedown',\n  //     'mouseenter',\n  //     'mouseleave',\n  //     'mouseover',\n  //     'mouseout',\n  //     'touchstart',\n  //     'touchend',\n  //     'touchcancel',\n  //     'touchcmove',\n  //   ];\n  //\n  //   events.forEach((eventType) => {\n  //     window.addEventListener(eventType, handle, options, useCapture);\n  //   });\n  //\n  //   return () => {\n  //     events.forEach((eventType) => {\n  //       window.removeEventListener(eventType, handle, options, useCapture);\n  //     });\n  //   }\n  // }, []);\n\n  const params = {\n    arrayFormat: 'index',\n    parseNumbers: true,\n  };\n\n  const urlParams = queryString.parse(window.location.search, params);\n  function useURLParams(key, value, def) {\n    useEffect(() => {\n      function changeParams() {\n        replaceState(queryString.stringify(urlParams, params));\n      }\n\n      if (!isEqual(urlParams[key], value)) {\n        if (isEqual(def, value) && urlParams[key] !== undefined) {\n          delete urlParams[key];\n          changeParams();\n        } else if (!isEqual(def, value)) {\n          urlParams[key] = value;\n          changeParams();\n        }\n      }\n    }, [value, key, def]);\n  }\n\n  const [a4, setA4] = useState(urlParams.a4 || STANDARD_A4);\n  useURLParams('a4', a4, STANDARD_A4);\n\n  const [oscillatorType, setOscillatorType] = useState(urlParams.oscillatorType || OSCILLATOR_TYPES.SINE);\n  useURLParams('oscillatorType', oscillatorType, OSCILLATOR_TYPES.SINE);\n\n  const [semitones, setSemitones] = useState(urlParams.semitones || STANDARD_SEMITONES);\n  useURLParams('semitones', semitones, STANDARD_SEMITONES);\n\n  const [transposition, setTransposition] = useState(urlParams.transposition !== undefined ? urlParams.transposition : DEFAULT_TRANSPOSITION);\n  useURLParams('transposition', transposition, DEFAULT_TRANSPOSITION);\n\n  const [modeIndex, setModeIndex] = useState(urlParams.modeIndex || 0);\n  useURLParams('modeIndex', modeIndex, 0);\n\n  const [allPitchNames, setAllPitchNames] = useState(findBestPitchNames(transposition, modeIndex));\n  useEffect(() => {\n    setAllPitchNames(findBestPitchNames(transposition, modeIndex));\n  }, [modeIndex, transposition]);\n\n  const [pitchNames, setPitchNames] = useState(findPitchNames(semitones, transposition, allPitchNames));\n  useEffect(() => {\n    setPitchNames(findPitchNames(semitones, transposition, allPitchNames));\n  }, [semitones, transposition, allPitchNames]);\n\n  const [pitchSkipOptions, setPitchSkipOptions] = useState(findPitchSkipOptions(semitones));\n  useEffect(() => {\n    setPitchSkipOptions(findPitchSkipOptions(semitones));\n  }, [semitones]);\n\n  const _ps = urlParams.pitchSkip ? urlParams.pitchSkip : pitchSkipOptions[0];\n  const [pitchSkip, setPitchSkip] = useState(_ps);\n  useEffect(() => {\n    if (pitchSkipOptions.indexOf(pitchSkip) < 0) {\n      setPitchSkip(pitchSkipOptions[0]);\n    }\n  }, [pitchSkipOptions, pitchSkip]);\n  useURLParams('pitchSkip', pitchSkip, _ps);\n\n  const _eq = [];\n  for (let i = 0; i < EQ_FREQUENCIES.length; i++) {\n    _eq.push(0);\n  }\n\n  const [eq, setEq] = useState(urlParams.eq || EQ_FREQUENCIES.map(() => 0));\n  useURLParams('eq', eq, EQ_FREQUENCIES.map(() => 0));\n\n  const [rootFrequency, setRootFrequency] = useState(transposeFrequency(a4, transposition));\n  useEffect(() => {\n    setRootFrequency(transposeFrequency(a4, transposition));\n  }, [transposition, a4]);\n\n  const [baseFrequencies, setBaseFrequencies] = useState(findBaseFrequencies(semitones, rootFrequency));\n  useEffect(() => {\n    setBaseFrequencies(findBaseFrequencies(semitones, rootFrequency));\n  }, [semitones, rootFrequency]);\n\n  const [pitchSequence, setPitchSequence] = useState(findPitchSequence(semitones, pitchSkip));\n  useEffect(() => {\n    setPitchSequence(findPitchSequence(semitones, pitchSkip));\n  }, [semitones, pitchSkip]);\n\n  const [pitchNamesSorted, setPitchNamesSorted] = useState(sortPitchNames(pitchNames, pitchSkip));\n  useEffect(() => {\n    setPitchNamesSorted(sortPitchNames(pitchNames, pitchSkip));\n  }, [pitchNames, pitchSkip]);\n\n  const [chordNamesSorted, setChordNamesSorted] = useState(findChordNames(semitones, modeIndex, pitchSkip));\n  useEffect(() => {\n    setChordNamesSorted(findChordNames(semitones, modeIndex, pitchSkip));\n  }, [semitones, pitchSkip, modeIndex]);\n\n  function toggleVirtualFinger(str) {\n    const index = toggledVirtualFingers.indexOf(str);\n    let newToggledVirtualFingers = [];\n    if (index >= 0) {\n      newToggledVirtualFingers = [...toggledVirtualFingers];\n      newToggledVirtualFingers.splice(index, 1);\n    } else {\n      newToggledVirtualFingers = [...toggledVirtualFingers, str];\n    }\n    setToggledVirtualFingers(newToggledVirtualFingers);\n  }\n\n  const [manualPitchClasses, setManualPitchClasses] = useState([]);\n\n  const [toggledPitchClasses, setToggledPitchClasses] = useState(urlParams.toggledPitchClasses || []);\n  useURLParams('toggledPitchClasses', toggledPitchClasses, []);\n\n  const [manualVirtualFingers, setManualVirtualFingers] = useState([]);\n\n  const [toggledVirtualFingers, setToggledVirtualFingers] = useState(urlParams.toggledVirtualFingers || []);\n  useURLParams('toggledVirtualFingers', toggledVirtualFingers, []);\n\n  const [soundingPitchClasses, setSoundingPitchClasses] = useState([...manualPitchClasses]);\n  const [soundingVirtualFingers, setSoundingVirtualFingers] = useState([...manualVirtualFingers]);\n  useEffect(() => {\n    const newSoundingVirtualFingers = unionWith(manualVirtualFingers, toggledVirtualFingers, isEqual);\n\n    let newSoundingPitchClasses = unionWith(manualPitchClasses, toggledPitchClasses, isEqual);\n\n    let virtualPitchClasses = [];\n    for (let i = 0; i < newSoundingVirtualFingers.length; i++) {\n      const virtualFinger = newSoundingVirtualFingers[i];\n      const isSteps = new RegExp(`${VIRTUAL_FINGER_UNITS.STEPS}$`, 'g').test(virtualFinger);\n\n      for (let j = 0; j < newSoundingPitchClasses.length; j++) {\n        const pitchClass = newSoundingPitchClasses[j];\n        let virtualFingerFraction;\n        const pitchClassFraction = pitchClass / semitones;\n\n        if (isSteps) {\n          let index = pitchClass;\n          if (index % 1 === 0) {\n            const pitchClassIsInScale = !!MODES[modeIndex].chords[index];\n            if (pitchClassIsInScale) {\n              let steps = 0;\n              let halfSteps = 0;\n              while (steps !== parseInt(virtualFinger)) {\n                halfSteps ++;\n                index = (index + 1) % STANDARD_SEMITONES;\n                if (!!MODES[modeIndex].chords[index]) {\n                  steps++;\n                }\n              }\n              virtualFingerFraction = halfSteps / STANDARD_SEMITONES;\n            } else {\n              // TODO: pitchClass is not within mode\n            }\n          } else {\n            // TODO: index not 0-11 integer\n          }\n        } else {\n          virtualFingerFraction = parseInt(virtualFinger) / CENTS_PER_OCTAVE;\n        }\n        if (virtualFingerFraction) {\n          const totalFraction = (pitchClassFraction + virtualFingerFraction) % 1;\n          const tolerance = 10000;\n          const virtualPitchClass = Math.round(totalFraction * semitones * tolerance) / tolerance;\n          virtualPitchClasses.push(virtualPitchClass);\n        }\n      }\n    }\n\n    newSoundingPitchClasses = unionWith(newSoundingPitchClasses, virtualPitchClasses, isEqual);\n    setSoundingPitchClasses(newSoundingPitchClasses);\n    setSoundingVirtualFingers(newSoundingVirtualFingers);\n  }, [manualPitchClasses, toggledPitchClasses, manualVirtualFingers, toggledVirtualFingers, modeIndex, semitones]);\n\n  useEffect(() => {\n    playPitchClasses(soundingPitchClasses, transposition, oscillatorType, a4, semitones);\n    setActiveChords(findChords(soundingPitchClasses, semitones, pitchNames));\n  }, [soundingPitchClasses, modeIndex, transposition, oscillatorType, a4, pitchNames, semitones]);\n\n  function togglePitchClass(pitchClass) {\n    const index = toggledPitchClasses.indexOf(pitchClass);\n    let newToggledPitchClasses;\n    if (index >= 0) {\n      newToggledPitchClasses = [...toggledPitchClasses];\n      newToggledPitchClasses.splice(index, 1);\n    } else {\n      newToggledPitchClasses = [...toggledPitchClasses, pitchClass];\n    }\n    setToggledPitchClasses(newToggledPitchClasses);\n  }\n\n  const [activeChords, setActiveChords] = useState([]);\n\n  const diameter = Math.min(...useViewportDimensions());\n\n  const [isMenuOpen, setMenuOpen] = useState(false);\n  function onMenuButtonClick() {\n    if (isMenuOpen) {\n      initializaAudio(eq);\n    }\n    setMenuOpen(!isMenuOpen);\n  }\n\n  const [isToggling, setIsToggling] = useState(false);\n\n  return (\n    <FirstTouch className={styles.root} callback={ initializaAudio.bind(null, eq)}>\n      <div className={styles.contentHolder}>\n        <div className={styles.top}>\n          <VirtualFingers\n            pitchNames={pitchNames}\n            setManualVirtualFingers={setManualVirtualFingers}\n            toggleVirtualFinger={toggleVirtualFinger}\n            hasMode={!!modeIndex}\n            isToggling={isToggling}\n            soundingVirtualFingers={soundingVirtualFingers}\n          />\n        </div>\n        <div className={styles.bottom}>\n          <MatchingChords\n            chords={activeChords}\n            pitchNames={pitchNames}\n          />\n        </div>\n      </div>\n      <div className={styles.wheelHolder}>\n        <Display\n          soundingPitchClasses={soundingPitchClasses}\n          baseFrequencies={baseFrequencies}\n          diameter={diameter}\n          pitchSequence={pitchSequence}\n          modeIndex={modeIndex}\n        />\n        <PitchLabel\n          pitchNamesSorted={pitchNamesSorted}\n          diameter={diameter}\n          chordNamesSorted={chordNamesSorted}\n        />\n        <ChordLabel\n          chordNamesSorted={chordNamesSorted}\n          diameter={diameter}\n        />\n        <TouchPad\n          setManualPitchClasses={setManualPitchClasses}\n          togglePitchClass={togglePitchClass}\n          pitchSequence={pitchSequence}\n          isToggling={isToggling}\n        />\n      </div>\n\n      <Label\n        className={styles.toggleLabel}\n        text='toggling'\n      >\n        <Input\n          type=\"checkbox\"\n          checked={isToggling === true}\n          onChange={setIsToggling.bind(null, !isToggling)}\n        />\n      </Label>\n\n      {isMenuOpen && <div className={styles.menuHolder}>\n        <Menu\n          a4={a4}\n          setA4={setA4}\n          allPitchNames={allPitchNames}\n          eq={eq}\n          setEq={setEq}\n          modeIndex={modeIndex}\n          setModeIndex={setModeIndex}\n          oscillatorType={oscillatorType}\n          setOscillatorType={setOscillatorType}\n          pitchSkip={pitchSkip}\n          setPitchSkip={setPitchSkip}\n          semitones={semitones}\n          setSemitones={setSemitones}\n          transposition={transposition}\n          setTransposition={setTransposition}\n          pitchSkipOptions={pitchSkipOptions}\n        />\n      </div>}\n\n      <Button className={styles.menuButton} onClick={onMenuButtonClick}>{isMenuOpen ? 'x' : 'menu'}</Button>\n    </FirstTouch>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'styles/reset.module.scss';\nimport App from 'App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}