{"version":3,"sources":["App/Menu/Menu.module.scss","App/PitchLabel/PitchLabel.module.scss","App/ChordLabel/ChordLabel.module.scss","App/Display/Display.module.scss","App/TouchPad/TouchPad.module.scss","App/Display/canvas.js","util/math.js","constants.js","App/Display/findColors.js","App/Display/fillSlice.js","App/Display/Display.js","util/music.js","App/Menu/Menu.js","App/PitchLabel/PitchLabel.js","App/ChordLabel/ChordLabel.js","App/TouchPad/TouchPad.js","App/FirstTouch/FirstTouch.js","util/findPitchSkipOptions.js","util/findPitchNames.js","util/transposeFrequency.js","util/findBaseFrequencies.js","util/findPitchSequence.js","util/sortPitchNames.js","util/shepardTone.js","util/hooks.js","App/App.js","util/findChordNames.js","reportWebVitals.js","index.js","App/App.module.scss"],"names":["module","exports","rotate","angle","x","y","ctx","func","cos","Math","sin","dx","dy","call","Canvas","element","document","createElement","width","offsetWidth","height","offsetHeight","devicePixelRatio","window","resize","isMounted","_element","parentNode","_width","_height","_devicePixelRatio","_imageDataHandler","_context","scale","arc","radius","startAngle","endAngle","PI","anticlockwise","beginPath","bezierCurveTo","clearRect","clip","closePath","drawImage","source","sx","sy","sWidth","sHeight","dWidth","dHeight","isCanvas","_drawImageDest","fill","fillRect","lineTo","moveTo","quadraticCurveTo","rect","stroke","resetTransform","restore","transform","save","setRotate","setTransform","xScale","xSkew","ySkew","yScale","setTranslate","translate","createImageData","imageDataOrWidth","this","getContext","str","fillStyle","globalCompositeOperation","num","globalAlpha","lineWidth","strokeStyle","points","lastPoint","nextPoint","path","Path2D","length","i","avgX","avgY","toRadianDirection","degrees","radians","toRadians","circ","offset","modulo","toDegreeDirection","toDegrees","PITCH_NAMES","MODES","name","chords","OSCILLATOR_TYPES","findDirectionalColor","direction","colorSlice","cosR","cosG","cosB","r","round","g","b","findColors","semitones","colors","buttonSlice","push","flipRadiansVertically","atan2","fillSlice","canvas","color","diameter","startRadians","endRadians","outerRadius","holeRadius","isInKey","center","isCircle","Display","className","activePitches","baseFrequencies","mode","pitchSequence","rootNode","useRef","useState","root","setRoot","buffer","setBuffer","useEffect","current","undefined","halfSlice","isActive","indexOf","drawSlices","connectPitches","pitchA","degreesA","j","pitchB","degreesB","classnames","styles","ref","SEMITONES","EQ_FREQUENCIES","A4","415","427","428","429","430","430.54","432","435","439","440","452","466","DEFAULT","findIncrementLabel","increment","String","Menu","a4","setA4","eq","setEq","setMode","oscillator","setOscillator","pitchSkip","setPitchSkip","setSemitones","transposition","setTransposition","pitchSkipOptions","onOscillatorChange","value","target","onEQChange","index","values","property","title","label","input","type","checked","onChange","labelText","reset","onClick","verticalRangeHolder","map","verticalRange","min","max","step","bind","wide","parseInt","modeObj","PitchLabel","pitchNamesSorted","transformOrigin","isSmall","button","small","style","ChordLabel","chordNamesSorted","TouchPad","callback","anyTouch","evt","targetTouches","getBoundingClientRect","pitches","clientX","clientY","sqrt","pow","floor","onTouchMove","onTouchStart","onTouchEnd","onTouchCancel","FirstTouch","component","Component","rest","hasCalledCallback","setHasCalledCallback","findPitchSkipOptions","increments","findIncrementsOfSemitone","semitoneIndexes","semitoneIndex","findPitchNames","Array","keys","nameIndexFloat","nameIndex","prefix","remainder","slice","transposeFrequency","frequency","findBaseFrequencies","rootFrequency","frequencies","findPitchSequence","sequence","sortPitchNames","pitchNames","pitchName","currentOscillators","audioContext","gainNode","headNode","initializaAudio","close","AudioContext","webkitAudioContext","createGain","connect","destination","gain","eqNode","createBiquadFilter","findAudibleOctaves","toggleNote","note","isPlaying","oscillators","oscillatorNode","createOscillator","start","startNote","stop","stopNote","WIN","PLACEHOLDER_WINDOW","addEventListener","innerHeight","innerWidth","removeEventListener","App","urlParams","queryString","parse","location","search","parseNumbers","arrayFormat","useURLParams","key","def","changeParams","history","pushState","origin","pathname","stringify","isEqual","setPitchNames","setPitchSkipOptions","_ps","_eq","setRootFrequency","setBaseFrequencies","setPitchSequence","setPitchNamesSorted","setChordNamesSorted","chordNames","modeIndex","findChordNames","setActivePitches","win","setInnerHeight","setInnerWidth","onResize","useViewportDimensions","isMenuOpen","setMenuOpen","contentHolder","wheelHolder","menuHolder","menuButton","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8c87295b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Menu_root__3QA5H\",\"property\":\"Menu_property__qoOWz\",\"title\":\"Menu_title__tE_9H\",\"reset\":\"Menu_reset__uN5da\",\"label\":\"Menu_label__3hKMT\",\"wide\":\"Menu_wide__2sfIP\",\"labelText\":\"Menu_labelText__2uoMn\",\"input\":\"Menu_input__17q9X\",\"verticalRangeHolder\":\"Menu_verticalRangeHolder__2TdXL\",\"verticalRange\":\"Menu_verticalRange__3aZoM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PitchLabel_root__3-xxj\",\"button\":\"PitchLabel_button__29U3k\",\"small\":\"PitchLabel_small__3x-Zk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ChordLabel_root__U_GCi\",\"button\":\"ChordLabel_button__3bTYZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Display_root__ig8ld\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TouchPad_root__22wzt\"};","// import ImageDataHandler from './image-data-handler';\n\nfunction rotate(angle, x, y, ctx, func) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const dx = x - cos * x - sin * -y;\n  const dy = y - sin * x - cos * y;\n  func.call(ctx, cos, sin, -sin, cos, dx, dy);\n}\n\n/**\n* a helper for canvas manipulation, to store a reference to the element as well as it's context.\nalso adds some helpful method defaults. also has some drawing utilities.\n* @param {HTMLCanvasElement} [element = document.createElement('canvas')] - put HTMLCanvasElement if this is your\n* final render canvas\n* @param {Integer} [width = element.offsetWidth] - width of area\n* @param {Integer} [height = element.offsetHeight] - height of area\n* @param {Float} [devicePixelRatio = window.devicePixelRatio] - actual pixels to css pixel\n*/\nexport default class Canvas {\n  /* *******************\n  * initializing methods\n  *********************/\n\n  constructor(element = document.createElement('canvas'), width = element.offsetWidth, height = element.offsetHeight, devicePixelRatio = window.devicePixelRatio) { // eslint-disable-line max-len\n    this._element = element;\n    this._context = this._element.getContext('2d');\n    this.resize(width, height, devicePixelRatio);\n  }\n\n  /**\n    * sets width/height properties as well as scaling\n    * @param {Integer} [width = this.width] - width of area of canvas\n    * @param {Integer} [height = this.height] - height of area of canvas\n    * @param {Float} [devicePixelRatio = window.devicePixelRatio] - actual pixels to css pixel\n    * @returns {void}\n  */\n  // eslint-disable complexity\n  resize = (width, height, devicePixelRatio = window.devicePixelRatio) => {\n    // allow for case to call with no params when devicePixelRatio is changed\n    // allow for case to call with no params when dom element is resized\n    // otherwise width and height are defined\n    // this method will erase the canvas and reset any clipping, fillStyle, lineWidth, strokeStyle, etc...\n    if (!width || !height) {\n      const isMounted = !!this._element.parentNode;\n      width = isMounted ? this._element.offsetWidth : this._width;\n      height = isMounted ? this._element.offsetHeight : this._height;\n    }\n    this._devicePixelRatio = devicePixelRatio;\n    this._width = width;\n    this._height = height;\n    this._element.width = width * this._devicePixelRatio;\n    this._element.height = height * this._devicePixelRatio;\n    this._imageDataHandler = null;\n    this._context.scale(this._devicePixelRatio, this._devicePixelRatio);\n  }\n  // eslint-enable complexity\n\n  /* ******\n  * getters\n  ********/\n\n  /**\n    * get the instance's HTMLCanvasElement\n    * @readonly\n    * @type {HTMLCanvasElement}\n  */\n  get element() {\n    return this._element;\n  }\n\n  /**\n    * get the instance's height\n    * @readonly\n    * @type {Integer}\n  */\n  get height() {\n    return this._height;\n  }\n\n  /**\n    * get the instance's ImageDataHandler reflecting the current state\n    * @readonly\n    * @type {ImageDataHandler}\n  */\n  get imageDataHandler() {\n    // if (!this._imageDataHandler) {\n      // const width = this._width * this._devicePixelRatio;\n      // const height = this._height * this._devicePixelRatio;\n      // this._imageDataHandler = new ImageDataHandler(this._context, 0, 0, width, height);\n    // }\n    return this._imageDataHandler;\n  }\n\n  /**\n    * get the instance's width\n    * @readonly\n    * @type {Integer}\n  */\n  get width() {\n    return this._width;\n  }\n\n  /* ******\n  * setters\n  ********/\n\n  /**\n    * set the fill color of the context.\n    * @param {String} str - new value for fillStyle\n    * @type {String}\n  */\n  set fillStyle(str) {\n    this._context.fillStyle = str;\n  }\n\n  /**\n    * set the globalCompositeOperation of the context.\n    * @param {String} str - new value for globalCompositeOperation\n    * @type {String}\n  */\n  set globalCompositeOperation(str) {\n    this._context.globalCompositeOperation = str;\n  }\n\n  /**\n    * set the alpha the context.\n    * @param {Float} num - new value for globalAlpha\n    * @type {Float}\n  */\n  set globalAlpha(num) {\n    this._context.globalAlpha = num;\n  }\n\n  /**\n    * set the stroke width of the context.\n    * @param {Float} num - new value for lineWidth\n    * @type {Float}\n  */\n  set lineWidth(num) {\n    this._context.lineWidth = num;\n  }\n\n  /**\n    * sets the stroke color of the context.\n    * @param {String} str - new value for strokeStyle\n    * @type {String}\n  */\n  set strokeStyle(str) {\n    this._context.strokeStyle = str;\n  }\n\n  /* **************\n  * drawing methods\n  ****************/\n\n  /**\n    * draws an arc on the context\n    * @param {Float} x - center point's x position\n    * @param {Float} y - center point's y position\n    * @param {Float} radius - arc's radius\n    * @param {Float} [startAngle = 0] - angle to begin arc\n    * @param {Float} [endAngle = Math.PI * 2] - angle to end arc\n    * @param {Boolean} [anticlockwise = false] - draws anticlockwise if true\n    * @returns {void}\n  */\n  arc = (x, y, radius, startAngle = 0, endAngle = Math.PI * 2, anticlockwise = false) => {\n    this._context.arc(x, y, radius, startAngle, endAngle, anticlockwise);\n  }\n\n  /**\n    * begins a drawing path on the context\n    * @returns {void}\n  */\n  beginPath = () => {\n    this._context.beginPath();\n  }\n\n  /**\n    * draws an bezier curve on the context\n    * @returns {void}\n  */\n  bezierCurveTo = (...args) => {\n    this._context.bezierCurveTo(...args);\n  }\n\n  /**\n    * clears a rectangle on the context. also nulls the _imageDataHandler value if one exists.\n    * @param {Float} [x = 0] - rectangle's x position\n    * @param {Float} [y = 0] - rectangle's y position\n    * @param {Float} [width = this.width] - rectangle's width\n    * @param {Float} [height = this.height] - rectangle's height\n    * @returns {void}\n  */\n  clearRect = (x = 0, y = 0, width = this.width, height = this.height) => {\n    this._context.clearRect(x, y, width, height);\n    this._imageDataHandler = null;\n  }\n\n  /**\n    * creates a clipping path on the context for future drawing calls.\n    * @returns {void}\n  */\n  clip = (...args) => {\n    this._context.clip(...args);\n  }\n\n  /**\n    * closes a path on the context\n    * @returns {void}\n  */\n  closePath = () => {\n    this._context.closePath();\n  }\n\n  // eslint-disable valid-jsdoc\n  /**\n    * draws an Image or canvas element into the context. also nulls the _imageDataHandler value if one exists.\n    * method overloading to reflect CanvasRenderingContext2D.drawImage.\n    * @param {Canvas|Image|HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} source - where to take pixels from\n    * @param {Float} [dx = 0] - x coordinate of source's destination\n    * @param {Float} [dy = 0] - y coordinate of source's destination\n    * @param {Float} [dWidth = image.width] - width of destination\n    * @param {Float} [dHeight = image.height] - height of destination\n    * @returns {void}\n  */\n  /**\n    * draws an Image or canvas element into the context. also nulls the _imageDataHandler value if one exists.\n    * method overloading to reflect CanvasRenderingContext2D.drawImage.\n    * @param {Canvas|Image|HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} source - where to take pixels from\n    * @param {Float} sx - x coordinate of where to pull from source\n    * @param {Float} sy - y coordinate of where to pull from source\n    * @param {Float} sWidth - width of area to pull from source\n    * @param {Float} sHeight - height of area to pull from source\n    * @param {Float} dx - x coordinate of source's destination\n    * @param {Float} dy - y coordinate of source's destination\n    * @param {Float} dWidth - width of destination\n    * @param {Float} dHeight - height of destination\n    * @returns {void}\n  */\n  drawImage = (source, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight) => { // eslint-disable-line max-params\n    // sx, sy, sWidth, sHeight on images do not get scaled against devicePixelRatio\n    const hasSource = typeof dx === 'number';\n    const isCanvas = source instanceof Canvas;\n    if (hasSource) {\n      if (isCanvas) {\n        sx *= this._devicePixelRatio;\n        sy *= this._devicePixelRatio;\n        sWidth *= this._devicePixelRatio;\n        sHeight *= this._devicePixelRatio;\n        this._context.drawImage(source.element, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);\n      } else {\n        this._context.drawImage(source, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);\n      }\n    } else if (isCanvas) {\n      sWidth = sWidth || source.width;\n      sHeight = sHeight || source.height;\n      this._drawImageDest(source.element, sx, sy, sWidth, sHeight);\n    } else {\n      this._drawImageDest(source, sx, sy, sWidth, sHeight);\n    }\n    this._imageDataHandler = null;\n  }\n  // eslint-enable valid-jsdoc\n\n  _drawImageDest = (source, dx = 0, dy = 0, dWidth = source.width, dHeight = source.height) => {\n    this._context.drawImage(source, dx, dy, dWidth, dHeight);\n  }\n\n  /**\n    * fills a path on the context. also nulls the _imageDataHandler value if one exists.\n    * @returns {void}\n  */\n  fill = (...args) => {\n    this._context.fill(...args);\n    this._imageDataHandler = null;\n  }\n\n  /**\n    * draws a filled rectangle on the context. also nulls the _imageDataHandler value if one exists.\n    * @param {Float} [x = 0] - rectangle's x position\n    * @param {Float} [y = 0] - rectangle's y position\n    * @param {Float} [width = this.width] - rectangle's width\n    * @param {Float} [height = this.height] - rectangle's height\n    * @returns {void}\n  */\n  fillRect = (x = 0, y = 0, width = this.width, height = this.height) => {\n    this._context.fillRect(x, y, width, height);\n    this._imageDataHandler = null;\n  }\n\n  /**\n    * draws a line to a point on the context.\n    * @returns {void}\n  */\n  lineTo = (...args) => {\n    this._context.lineTo(...args);\n  }\n\n  /**\n    * moves to a point on the context.\n    * @returns {void}\n  */\n  moveTo = (...args) => {\n    this._context.moveTo(...args);\n  }\n\n  /**\n    * draws a quadratic curve to a point on the context.\n    * @returns {void}\n  */\n  quadraticCurveTo = (...args) => {\n    this._context.quadraticCurveTo(...args);\n  }\n\n  /**\n    * draws a rectangle on the context.\n    * @param {Float} [x = 0] - rectangle's x position\n    * @param {Float} [y = 0] - rectangle's y position\n    * @param {Float} [width = this.width] - rectangle's width\n    * @param {Float} [height = this.height] - rectangle's height\n    * @returns {void}\n  */\n  rect = (x = 0, y = 0, width = this.width, height = this.height) => {\n    this._context.rect(x, y, width, height);\n  }\n\n  // scale: no scale method! use resize instead!\n\n  /**\n    * strokes the context's current path.\n    * @returns {void}\n  */\n  stroke = (...args) => {\n    this._context.stroke(...args);\n    this._imageDataHandler = null;\n  }\n\n  /* *********************\n  * transformation methods\n  ***********************/\n\n  /**\n    * resets all transforms on the context to zero.\n    * @returns {void}\n  */\n  resetTransform = () => {\n    this._context.resetTransform();\n    // if canvas was scaled it would otherwise be undone\n    this._context.scale(this._devicePixelRatio, this._devicePixelRatio);\n  }\n\n  /**\n    * restores context to a saved state of popped off of a stack.\n    * @returns {void}\n  */\n  restore = () => {\n    this._context.restore();\n  }\n\n  /**\n    * cumulatively rotates the context around x/y coordinates.\n    * @param {Float} angle - amount to rotate\n    * @param {Float} [x = this.width / 2] - center x position\n    * @param {Float} [y = this.height / 2] - center y position\n    * @returns {void}\n  */\n  rotate = (angle, x = 0.5 * this.width, y = 0.5 * this.height) => {\n    if (!angle) {\n      return;\n    }\n    rotate(angle, x, y, this._context, this._context.transform);\n  }\n\n  /**\n    * pushes a saved state of the curent context onto a stack.\n    * @returns {void}\n  */\n  save = () => {\n    this._context.save();\n  }\n\n  /**\n    * resets the context's rotation to a new amount around x/y coordinates.\n    * @param {Float} angle - amount to rotate\n    * @param {Float} [x = this.width / 2] - center x position\n    * @param {Float} [y = this.height / 2] - center y position\n    * @returns {void}\n  */\n  setRotate = (angle, x = 0.5 * this.width, y = 0.5 * this.height) => {\n    rotate(angle, x, y, this._context, this.setTransform);\n  }\n\n  /**\n    * resets the context's transform to new values.\n    * @param {Float} xScale - horizontal scale\n    * @param {Float} xSkew - horizontal skew\n    * @param {Float} ySkew - verical skew\n    * @param {Float} yScale - vertical movement\n    * @param {Float} dx - horizontal movement\n    * @param {Float} dy - vertical movement\n    * @returns {void}\n  */\n  setTransform = (xScale, xSkew, ySkew, yScale, dx, dy) => {\n    xScale *= this._devicePixelRatio;\n    xSkew *= this._devicePixelRatio;\n    ySkew *= this._devicePixelRatio;\n    yScale *= this._devicePixelRatio;\n    dx *= this._devicePixelRatio;\n    dy *= this._devicePixelRatio;\n    this._context.setTransform(xScale, xSkew, ySkew, yScale, dx, dy);\n  }\n\n  /**\n    * sets the context's grid to coordinates.\n    * @param {Float} dx - horizontal movement\n    * @param {Float} dy - vertical movement\n    * @returns {void}\n  */\n  setTranslate = (dx, dy) => {\n    this.setTransform(1, 0, 0, 1, dx, dy);\n  }\n\n  /**\n    * cumulatively moves the context's grid by coordinates.\n    * @param {Float} dx - horizontal movement\n    * @param {Float} dy - vertical movement\n    * @returns {void}\n  */\n  translate = (dx, dy) => {\n    this._context.translate(dx, dy);\n  }\n\n  /* ***********\n  * misc methods\n  *************/\n\n  // eslint-disable valid-jsdoc\n  /**\n    * creates a blank ImageData based on provided width/height.\n    * method overloading to reflect CanvasRenderingContext2D.createImageData.\n    * @param {Number} width - a width amount\n    * @param {Number} height - a height amount\n    * @returns {void}\n  */\n  /**\n    * creates a blank ImageData based on a provided ImageData's dimensions.\n    * method overloading to reflect CanvasRenderingContext2D.createImageData.\n    * @param {ImageData} imageData - an existing ImageData instance\n    * @returns {void}\n  */\n  // eslint-enable valid-jsdoc\n  createImageData = (imageDataOrWidth, height) => {\n    return this._context.createImageData(imageDataOrWidth, height);\n  }\n\n  /* *************\n  * static methods\n  ***************/\n\n  /**\n    * returns Path2D of a path approximately through an array of points.\n    * @param {Array} points - array of points\n    * @param {Path2D} [path = new Path2D()] - Path2D instance to add instructions to\n    * @returns {void}\n  */\n  static quadraticThrough(points, path = new Path2D()) {\n    const { length } = points;\n    let lastPoint;\n    let nextPoint;\n    for (let i = 0; i < length - 1; i++) {\n      lastPoint = nextPoint || points[0];\n      nextPoint = points[i + 1];\n      if (i === 0) {\n        path.moveTo(lastPoint.x, lastPoint.y);\n      } else if (i < length - 2) {\n        const avgX = (lastPoint.x + nextPoint.x) / 2;\n        const avgY = (lastPoint.y + nextPoint.y) / 2;\n        path.quadraticCurveTo(lastPoint.x, lastPoint.y, avgX, avgY);\n      } else {\n        path.quadraticCurveTo(lastPoint.x, lastPoint.y, nextPoint.x, nextPoint.y);\n      }\n    }\n    return path;\n  }\n}\n","import {modulo} from '@danehansen/math';\n\nexport function toRadians(degrees) {\n  return degrees * Math.PI / 180;\n}\n\nexport function toDegrees(radians) {\n  return radians * 180 / Math.PI;\n}\n\nexport function toRadianDirection(degrees) {\n  const radians = toRadians(-degrees);\n  const circ = Math.PI * 2;\n  const offset = radians + Math.PI * 0.5;\n  return modulo(offset, circ);\n}\n\nexport function toDegreeDirection(radians) {\n  const degrees = toDegrees(-radians);\n  return modulo(degrees + 90, 360);\n}\n","export const DEFAULT_TRANSPOSITION = 3;\nexport const PITCH_NAMES = ['A', 'A♯/B♭', 'B', 'C', 'C♯/D♭', 'D', 'D♯/E♭', 'E', 'F', 'F♯/G♭', 'G', 'G♯/A♭'];\nexport const MODES = [\n  {\n    name: 'I ionian (major)',\n    chords: ['I', null, 'ii', null, 'iii', 'IV', null, 'V', null, 'vi', null, 'viiº'],\n  },\n  {\n    name: 'II dorian',\n    chords: ['i', null, 'ii', 'III', null, 'IV', null, 'v', null, 'viº', 'VII', null],\n  },\n  {\n    name: 'III phrygian',\n    chords: ['i', 'II', null, 'III', null, 'iv', null, 'vº', 'VI', null, 'vii', null],\n  },\n  {\n    name: 'IV lydian',\n    chords: ['I', null, 'II', null, 'iii', null, 'ivº ', 'V', null, 'vi', null, 'vii'],\n  },\n  {\n    name: 'V mixolydian',\n    chords: ['I', null, 'ii', null, 'iiiº', 'IV', null, 'v', null, 'vi', 'VII', null],\n  },\n  {\n    name: 'VI aeolian (minor)',\n    chords: ['i', null, 'iiº', 'III', null, 'iv', null, 'v', 'VI', null, 'VII', null],\n  },\n  {\n    name: 'VII locrian',\n    chords: ['iº', 'II', null, 'iii', null, 'iv', 'V',  null, 'VI', null, 'vii', null],\n  },\n  {\n    name: 'major pentatonic',\n    chords: ['I', null, 'ii', null, 'iii', null, null, 'V', null, 'vi', null, null],\n  },\n  {\n    name: 'minor pentatonic',\n    chords: ['i', null, null, 'III', null, 'iv', null, 'v', null, null, 'VII', null],\n  },\n  {\n    name: 'blues major',\n    chords: ['I', null, 'ii', null, null, 'IV', null, 'v', null, 'vi', null, null],\n  },\n  {\n    name: 'blues minor',\n    chords: ['i', null, null, 'III', null, 'iv', null, null, 'VI', null, 'vii', null],\n  },\n  {\n    name: 'egyptian',\n    chords: ['i', null, 'ii', null, null, 'IV', null, 'v', null, null, 'VII', null],\n  },\n];\n\nexport const OSCILLATOR_TYPES = {\n  SINE: 'sine',\n  SQUARE: 'square',\n  SAWTOOTH: 'sawtooth',\n  TRIANGLE: 'triangle',\n};\n\nexport const TEMPERMENT_TYPES = {\n  EQUAL: 'equal',\n  JUST: 'just',\n  MEANTONE: 'meantone',\n  PYTHAGOREAN: 'pythagorean',\n};\n","import {toRadianDirection} from '../../util/math';\n\nfunction findDirectionalColor(direction) {\n  direction -= Math.PI * 0.5;\n  const colorSlice = Math.PI * 2 / 3;\n  const cosR = Math.cos(-direction);\n  const cosG = Math.cos(-direction - colorSlice);\n  const cosB = Math.cos(-direction + colorSlice);\n\n  const r = Math.round(cosR * 255 * 0.5 + 255 * 0.5);\n  const g = Math.round(cosG * 255 * 0.5 + 255 * 0.5);\n  const b = Math.round(cosB * 255 * 0.5 + 255 * 0.5);\n\n  return {r, g, b};\n}\n\nexport default function findColors(semitones) {\n  const colors = [];\n  const buttonSlice = 360 / semitones;\n  for(let i = 0; i < semitones; i++) {\n    colors.push(findDirectionalColor(toRadianDirection(i * buttonSlice)));\n  }\n  return colors;\n}\n","import {modulo} from '@danehansen/math';\n\nfunction flipRadiansVertically(radians) {\n  return Math.atan2(-Math.sin(radians), Math.cos(radians));\n}\n\nexport default function fillSlice(canvas, color, diameter, startRadians, endRadians, outerRadius, holeRadius, isInKey) {\n  const center = diameter / 2;\n  const isCircle = modulo(startRadians, Math.PI * 2) === modulo(endRadians, Math.PI * 2);\n\n  canvas.beginPath();\n  canvas.fillStyle =`rgb(${color.r}, ${color.g}, ${color.b})`;\n\n  if (isCircle) {\n    canvas.arc(center, center, center * outerRadius, 0, 2 * Math.PI);\n  } else {\n    // clockwise straight edge\n    let cos = Math.cos(startRadians);\n    let sin = Math.sin(startRadians);\n    canvas.moveTo(center + cos * center * holeRadius, center + sin * -center * holeRadius);\n    canvas.lineTo(center + cos * center * outerRadius, center + sin * -center * outerRadius);\n\n    // outer arc\n    canvas.arc(center, center, center * outerRadius, flipRadiansVertically(startRadians), flipRadiansVertically(endRadians), true);\n\n    // anticlockwise straight edge\n    cos = Math.cos(endRadians);\n    sin = Math.sin(endRadians);\n    canvas.moveTo(center + cos * center * outerRadius, center + sin * -center * outerRadius);\n    canvas.lineTo(center + cos * center * holeRadius, center + sin * -center * holeRadius);\n\n    // inner arc\n    canvas.arc(center, center, center * holeRadius, flipRadiansVertically(endRadians), flipRadiansVertically(startRadians), false);\n  }\n\n  canvas.fill();\n\n  if (isCircle) {\n    canvas.beginPath();\n    canvas.globalCompositeOperation = 'destination-out';\n    canvas.arc(center, center, center * holeRadius, 0, 2 * Math.PI);\n    canvas.fill();\n    canvas.globalCompositeOperation = 'source-over';\n  }\n}\n","import styles from './Display.module.scss';\nimport classnames from 'classnames';\nimport React from 'react';\nimport Canvas from './canvas';\nimport {toRadianDirection} from '../../util/math';\nimport {MODES} from '../../constants';\nimport {useState, useEffect, useRef} from 'react';\nimport findColors from './findColors';\nimport fillSlice from './fillSlice';\n\nexport default function Display({className, activePitches, baseFrequencies, diameter, mode, pitchSequence}) {\n  const rootNode = useRef();\n\n  const [root, setRoot] = useState(null);\n  const [buffer, setBuffer] = useState(null);\n  useEffect(() => {\n    if (!rootNode.current) {\n      return;\n    }\n    setRoot(new Canvas(rootNode.current));\n    setBuffer(new Canvas(undefined, diameter, diameter));\n  }, [rootNode, diameter]);\n\n  useEffect(() => {\n    if (!root) {\n      return;\n    }\n    root.resize(diameter, diameter);\n    buffer.resize(diameter, diameter);\n  }, [diameter, root, buffer]);\n\n  useEffect(() => {\n    if (!root) {\n      return;\n    }\n\n    function connectPitches() {\n      const colors = findColors(pitchSequence.length);\n      for (let i = 0; i < activePitches.length; i++) {\n        const pitchA = activePitches[i];\n        const degreesA = 360 / pitchSequence.length * pitchSequence.indexOf(pitchA);\n        const frequencyA = baseFrequencies[pitchSequence.indexOf(pitchA)];\n        for (let j = i + 1; j < activePitches.length; j++) {\n          const pitchB = activePitches[j];\n          const degreesB = 360 / pitchSequence.length * pitchSequence.indexOf(pitchB);\n          const frequencyB = baseFrequencies[pitchSequence.indexOf(pitchB)];\n          const colorA = colors[pitchSequence.indexOf(pitchA)];\n          const colorB = colors[pitchSequence.indexOf(pitchB)]\n          connectPitches(toRadianDirection(degreesA), toRadianDirection(degreesB), diameter, buffer, 0.4, frequencyA, frequencyB, colorA, colorB);\n        }\n      }\n    }\n\n    function drawSlices() {\n      const semitones = pitchSequence.length;\n      const halfSlice = Math.PI / semitones;\n      const colors = findColors(semitones);\n      const {chords} = MODES[mode];\n\n      for (let i = 0; i < semitones; i++) {\n        const pitch = pitchSequence[i];\n        const degrees = pitch / semitones * 360;\n        const color = colors[i];\n        const isActive = activePitches.indexOf(i) >= 0;\n        const radians = toRadianDirection(degrees);\n        const isInKey = !!chords[i];\n\n        fillSlice(buffer, color, diameter, radians - halfSlice, radians + halfSlice, isActive ? 1 : 0.95, isActive ? 0.12 : 0.1, isInKey);\n      }\n    }\n\n    root.clearRect();\n    buffer.clearRect();\n    drawSlices();\n    connectPitches();\n    root.drawImage(buffer);\n  }, [activePitches, baseFrequencies, diameter, mode, pitchSequence, root, buffer]);\n\n  return <canvas className={classnames(styles.root, className)} ref={rootNode} />;\n}\n","export const MIN_FREQ = 20;\nexport const MAX_FREQ = 20000;\nexport const SEMITONES = 12;\nexport const EQ_FREQUENCIES = [32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384];\n\nexport function findCents(fA, fB) {\n  return 1200 * Math.log2(fB / fA);\n}\n\nexport const A4 = {\n  415: 'baroque',\n  427: 'classical',\n  428: 'classical',\n  429: 'classical',\n  430: 'classical',\n  430.54: 'scientific',\n  432: '“frequency of the universe”',\n  435: 'diapson normal',\n  439: 'new philharmonic',\n  440: 'stuttgart',\n  452: 'old philharmonic',\n  466: 'chorton',\n  DEFAULT: 440,\n};\n","import styles from './Menu.module.scss';\nimport {OSCILLATOR_TYPES, PITCH_NAMES, MODES} from '../../constants';\nimport {A4, SEMITONES} from '../../util/music';\nimport classnames from 'classnames';\n\nfunction findIncrementLabel(increment, semitones) {\n  let str = String(increment);\n  if (increment === 1) {\n    str += ` (chromatic)`;\n  } else if (increment === semitones - 1) {\n    str += ` (reverse chromatic)`;\n  } else if (semitones === SEMITONES && increment === 7) {\n    str += ` (circle of fifths)`;\n  }\n  return str;\n}\n\nexport default function Menu({\n    a4,\n    setA4,\n    eq,\n    setEq,\n    mode,\n    setMode,\n    oscillator,\n    setOscillator,\n    pitchSkip,\n    setPitchSkip,\n    semitones,\n    setSemitones,\n    transposition,\n    setTransposition,\n    pitchSkipOptions,\n  }) {\n\n  function onOscillatorChange({ target: { value }}) {\n    setOscillator(value);\n  }\n\n  function onEQChange(index, {target: {value}}) {\n    const values = [...eq]\n    values[index] = value;\n    setEq(values);\n  }\n\n  return (\n    <form className={styles.root}>\n      <div className={styles.property}>\n        <h2 className={styles.title}>Oscillator</h2>\n        <label className={styles.label}>\n          <input className={styles.input} type=\"radio\" checked={oscillator === OSCILLATOR_TYPES.SINE} value={OSCILLATOR_TYPES.SINE} onChange={onOscillatorChange} />\n          <div className={styles.labelText}>{OSCILLATOR_TYPES.SINE}</div>\n        </label>\n        <label className={styles.label}>\n          <input className={styles.input} type=\"radio\" checked={oscillator === OSCILLATOR_TYPES.SQUARE} value={OSCILLATOR_TYPES.SQUARE} onChange={onOscillatorChange} />\n          <div className={styles.labelText}>{OSCILLATOR_TYPES.SQUARE}</div>\n        </label>\n        <label className={styles.label}>\n          <input className={styles.input} type=\"radio\" checked={oscillator === OSCILLATOR_TYPES.SAWTOOTH} value={OSCILLATOR_TYPES.SAWTOOTH} onChange={onOscillatorChange} />\n          <div className={styles.labelText}>{OSCILLATOR_TYPES.SAWTOOTH}</div>\n        </label>\n        <label className={styles.label}>\n          <input className={styles.input} type=\"radio\" checked={oscillator === OSCILLATOR_TYPES.TRIANGLE} value={OSCILLATOR_TYPES.TRIANGLE} onChange={onOscillatorChange} />\n          <div className={styles.labelText}>{OSCILLATOR_TYPES.TRIANGLE}</div>\n        </label>\n      </div>\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>EQ<button className={styles.reset} onClick={function(){setEq([0,0,0,0,0,0,0,0,0,0])}}>reset</button></h2>\n        <div className={styles.verticalRangeHolder}>\n          {eq.map(function(value, i) {\n            return <input\n              key={i} className={styles.verticalRange} type=\"range\" min=\"-1\" max={1 * 0.27} step=\"0.01\" value={value} onChange={onEQChange.bind(null, i)} />\n          })}\n        </div>\n      </div>\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>Semitones<button className={styles.reset} onClick={function(){setSemitones(SEMITONES)}}>reset</button></h2>\n        <label className={classnames(styles.label, styles.wide)}>\n          <input className={styles.input} type=\"range\" min={1} max={120} value={semitones} step=\"1\" onChange={function({target: {value}}){setSemitones(parseInt(value))}} />\n          <div className={styles.labelText}>{semitones}</div>\n        </label>\n      </div>\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>Transposition</h2>\n          {PITCH_NAMES.map(function(name, index) {\n            return <label className={styles.label} key={name}>\n              <input className={styles.input} type=\"radio\" value={index} name=\"transposition\" checked={transposition === index} onChange={function({target:{value}}){setTransposition(parseInt(value))}} />\n              <div className={styles.labelText}>{name}</div>\n            </label>\n          })}\n      </div>\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>Mode</h2>\n          {MODES.map(function(modeObj, index) {\n            return <label className={styles.label} key={modeObj.name}>\n              <input className={styles.input} type=\"radio\" value={index} name=\"mode\" checked={mode === index} onChange={function({target:{value}}){setMode(parseInt(value))}} />\n              <div className={styles.labelText}>{modeObj.name}</div>\n            </label>\n          })}\n      </div>\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>Pitch Skip</h2>\n        {pitchSkipOptions.map(function(num) {\n          return <label className={styles.label} key={num}>\n            <input className={styles.input} type=\"radio\" value={num} name=\"pitchSkip\" checked={pitchSkip === num} onChange={function({target:{value}}){setPitchSkip(parseInt(value))}} />\n            <div className={styles.labelText}>{findIncrementLabel(num, semitones)}</div>\n          </label>\n        })}\n      </div>\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>A4<button className={styles.reset} onClick={function(){setA4(A4.DEFAULT)}}>reset</button></h2>\n        <label className={classnames(styles.label, styles.wide)}>\n          <input\n            className={styles.input}\n            type=\"range\"\n            min={390}\n            max={490}\n            value={a4}\n            step=\"1\"\n            onChange={function({target:{value}}){setA4(parseInt(value))}}\n          />\n          <div className={styles.labelText}>{a4}{A4[a4] && ` (${A4[a4]})`}</div>\n        </label>\n      </div>\n    </form>\n  );\n}\n","import styles from './PitchLabel.module.scss';\nimport classnames from 'classnames';\nimport {MODES} from '../../constants';\n\nexport default function PitchLabel({pitchNamesSorted, diameter, mode}) {\n  const semitones = pitchNamesSorted.length;\n  const {chords} = MODES[mode];\n\n  return <div className={styles.root}>{pitchNamesSorted.map(function(name, index) {\n    if (!chords[index]) {\n      return null;\n    }\n    const degrees = 360 / semitones * index;\n    const isSmall = name.length > 1;\n    let transform;\n    let transformOrigin;\n    const radius = -0.475;\n\n    if (isSmall) {\n      transform = `translate(0%, -50%) rotate(${degrees}deg) translate(0%, 50%) translateY(${diameter * radius}px) rotate(${90}deg)`;\n      transformOrigin = `0 50%`;\n    } else {\n      transform = `translate(-50%, 0) rotate(${degrees}deg) translateY(${diameter * radius}px) `;\n      transformOrigin = `50% 0`;\n    }\n\n    return <div\n      className={classnames(styles.button, isSmall && styles.small)}\n      key={index}\n      style={{transform, transformOrigin}}\n    >{name}</div>\n  })}</div>\n}\n","import styles from './ChordLabel.module.scss';\n\nexport default function ChordLabel({chordNamesSorted, diameter}) {\n  const semitones = chordNamesSorted.length;\n\n  return <div className={styles.root}>{chordNamesSorted.map(function(name, index) {\n    if (!name) {\n      return null;\n    }\n    const degrees = 360 / semitones * index;\n\n    return <div\n      className={styles.button}\n      key={index}\n      style={{\n        transform: `translate(-50%, -50%) rotate(${degrees}deg) translateY(${diameter * -0.22}px)`,\n      }}\n    >{name}</div>\n  })}</div>\n}\n","import {useRef} from 'react';\nimport {modulo} from '@danehansen/math';\nimport {toDegreeDirection} from '../../util/math';\nimport styles from './TouchPad.module.scss';\n\nexport default function TouchPad({\n  pitchSequence,\n  callback,\n  diameter,\n}) {\n  const rootNode = useRef(null);\n\n  function onTouchMove(evt) {\n    anyTouch(evt);\n  }\n\n  function onTouchStart(evt) {\n    anyTouch(evt);\n  }\n\n  function onTouchEnd(evt) {\n    anyTouch(evt);\n  }\n\n  function onTouchCancel(evt) {\n    anyTouch(evt);\n  }\n\n  function anyTouch(evt) {\n    const {targetTouches} = evt;\n\n    if (!targetTouches) {\n      callback([]);\n    }\n    const rect = rootNode.current.getBoundingClientRect();\n    const halfSlice = Math.PI / pitchSequence.length;\n    const pitches = []\n    for (let i = 0; i < targetTouches.length; i++) {\n      const {clientX, clientY} = targetTouches[i];\n      const x = clientX - rect.x - diameter * 0.5;\n      const y = -(clientY - rect.y - diameter * 0.5);\n      const length = Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));\n\n      if (length <= diameter / 2) {\n        const rad = modulo(Math.atan2(y, x), Math.PI * 2);\n        const degrees = toDegreeDirection(rad - halfSlice);\n        const index = Math.floor(degrees / 360 * pitchSequence.length);\n        pitches.push(pitchSequence[index]);\n      }\n    }\n    callback(pitches);\n  }\n\n  return <div\n    ref={rootNode}\n    className={styles.root}\n    onTouchMove={onTouchMove}\n    onTouchStart={onTouchStart}\n    onTouchEnd={onTouchEnd}\n    onTouchCancel={onTouchCancel}\n  />;\n}\n","import {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function FirstTouch({component: Component = 'div', callback, ...rest}) {\n  const [hasCalledCallback, setHasCalledCallback] = useState(false);\n\n  function onClick() {\n    setHasCalledCallback(true);\n    callback();\n  }\n\n  return <Component onClick={hasCalledCallback ? null : onClick} {...rest}></Component>;\n}\n\nFirstTouch.propTypes = {\n  component: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  callback: PropTypes.func.isRequired,\n};\n","export default function findPitchSkipOptions(semitones) {\n  const increments = [1];\n  for(let i = 2; i < semitones; i++) {\n    if (findIncrementsOfSemitone(semitones, i)) {\n      increments.push(i);\n    }\n  }\n  return increments;\n}\n\nfunction findIncrementsOfSemitone(semitones, increment) {\n  const semitoneIndexes = [];\n  for(let i = 0; i < semitones; i++) {\n    const semitoneIndex = (i * increment) % semitones;\n    if (semitoneIndexes[semitoneIndex] !== undefined) {\n      return false;\n    } else {\n      semitoneIndexes[semitoneIndex] = semitoneIndex;\n    }\n  }\n  return semitoneIndexes;\n}\n","import {round} from '@danehansen/math';\nimport {PITCH_NAMES} from '../constants';\nimport {SEMITONES} from './music';\n\nexport default function findPitchNames(semitones, transposition) {\n  return [...Array(semitones).keys()].map(function(i) {\n    const nameIndexFloat = (i / semitones * SEMITONES + transposition) % SEMITONES;\n    const nameIndex = Math.floor(nameIndexFloat);\n    const prefix = PITCH_NAMES[nameIndex];\n    const remainder = nameIndexFloat % 1;\n    if (!remainder) {\n      return prefix;\n    }\n    return `${prefix}${String(round(remainder, 0.001)).slice(1,5)}`;\n  })\n}\n","import {SEMITONES} from '../util/music';\n\nexport default function transposeFrequency(frequency, transposition, semitones = SEMITONES) {\n  return frequency * Math.pow(Math.pow(2, 1 / semitones), transposition);\n}\n","import transposeFrequency from './transposeFrequency';\nimport {MIN_FREQ} from './music';\n\nexport default function findBaseFrequencies(semitones, rootFrequency) {\n  const frequencies = [];\n  for (let i = 0; i < semitones; i++) {\n    let frequency = transposeFrequency(rootFrequency, i, semitones);\n    while(frequency / 2 > MIN_FREQ) {\n      frequency /= 2;\n    }\n    frequencies.push(frequency);\n  }\n  return frequencies;\n}\n","export default function findPitchSequence(semitones, pitchSkip) {\n  const sequence = []\n  for (let i = 0; i < semitones; i++) {\n    sequence.push((i * pitchSkip) % semitones);\n  }\n  return sequence;\n}\n","export default function sortPitchNames(pitchNames, pitchSkip) {\n  const sorted = pitchNames.map(function(pitchName, index) {\n    return pitchNames[(index * pitchSkip) % pitchNames.length];\n  })\n  return sorted;\n}\n","import {MAX_FREQ, EQ_FREQUENCIES} from './music';\n\nlet frequencies;\nlet currentOscillators;\nlet audioContext;\nlet gainNode;\nlet headNode;\n\nexport function initializaAudio(baseFrequencies, eq) {\n  if (audioContext) {\n    audioContext.close();\n  }\n  audioContext = new (window.AudioContext || window.webkitAudioContext)();\n  gainNode = audioContext.createGain();\n  gainNode.connect(audioContext.destination);\n\n  // TODO: figure out this gain value\n  gainNode.gain.value = 0.1;\n\n  headNode = gainNode;\n  for(let i = 0; i < eq.length; i++) {\n    const eqNode = audioContext.createBiquadFilter();\n\n    if (i === 0) {\n      eqNode.type = 'lowshelf'\n    } else if (i === eq.length - 1) {\n      eqNode.type = 'highshelf'\n    } else {\n      eqNode.type = 'peaking'\n      // eqNode.Q.value = 1; // 0.0001 to 1000\n    }\n    eqNode.frequency.value = EQ_FREQUENCIES[i];\n    eqNode.gain.value = eq[i] * 40;\n    eqNode.connect(headNode)\n    headNode = eqNode;\n  }\n  gainNode.connect(headNode);\n\n  currentOscillators = [];\n  frequencies = baseFrequencies.map(function(frequency) {\n    return findAudibleOctaves(frequency);\n  })\n}\n\nfunction findAudibleOctaves(frequency) {\n  const frequencies = [];\n  while(frequency < MAX_FREQ) {\n    frequencies.push(frequency);\n    frequency *= 2;\n  }\n  return frequencies;\n}\n\nfunction startNote(index, type) {\n  const oscillators = [];\n  currentOscillators[index] = oscillators;\n  for(const frequency of frequencies[index]) {\n    const oscillatorNode = audioContext.createOscillator();\n    oscillatorNode.frequency.value = frequency;\n    oscillatorNode.type = type;\n    oscillatorNode.connect(headNode);\n    oscillatorNode.start();\n    oscillators.push(oscillatorNode);\n  }\n}\n\nfunction stopNote(index) {\n  for(const oscillator of currentOscillators[index]) {\n    oscillator.stop();\n  }\n  currentOscillators[index] = null;\n}\n\nexport function toggleNote(note, isPlaying, type) {\n  if (!currentOscillators) {\n    return;\n  }\n  if (isPlaying && !currentOscillators[note]) {\n    startNote(note, type);\n  } else if (!isPlaying && currentOscillators[note]) {\n    stopNote(note);\n  }\n}\n","import {useState, useEffect} from 'react';\n\nconst WIN = typeof window !== 'undefined' ? window : null;\n\nconst PLACEHOLDER_WINDOW = {\n  addEventListener() {},\n  innerHeight: 0,\n  innerWidth: 0,\n  removeEventListener() {},\n};\n\nexport function useViewportDimensions(win = WIN || PLACEHOLDER_WINDOW) {\n  const [innerHeight, setInnerHeight] = useState(win.innerHeight);\n  const [innerWidth, setInnerWidth] = useState(win.innerWidth);\n\n  useEffect(() => {\n    function onResize() {\n      setInnerHeight(win.innerHeight);\n      setInnerWidth(win.innerWidth);\n    }\n\n    win.addEventListener('resize', onResize);\n    return () => {\n      win.removeEventListener('resize', onResize);\n    }\n  }, [win]);\n\n  return [innerWidth, innerHeight];\n}\n","import styles from './App.module.scss';\nimport Display from './Display/Display';\nimport Menu from './Menu/Menu';\nimport PitchLabel from './PitchLabel/PitchLabel';\nimport ChordLabel from './ChordLabel/ChordLabel';\nimport TouchPad from './TouchPad/TouchPad';\nimport FirstTouch from './FirstTouch/FirstTouch';\nimport {OSCILLATOR_TYPES, DEFAULT_TRANSPOSITION} from '../constants';\nimport {A4, SEMITONES, EQ_FREQUENCIES} from '../util/music';\nimport {useState, useEffect} from 'react';\nimport findPitchSkipOptions from '../util/findPitchSkipOptions';\nimport findPitchNames from '../util/findPitchNames';\nimport transposeFrequency from '../util/transposeFrequency';\nimport findBaseFrequencies from '../util/findBaseFrequencies';\nimport findPitchSequence from '../util/findPitchSequence';\nimport findChordNames from '../util/findChordNames';\nimport sortPitchNames from '../util/sortPitchNames';\nimport {initializaAudio, toggleNote} from '../util/shepardTone';\nimport queryString from 'query-string';\nimport {isEqual} from 'lodash';\nimport {useViewportDimensions} from '../util/hooks';\n\nexport default function App() {\n  const urlParams = queryString.parse(window.location.search, {parseNumbers: true, arrayFormat: 'comma'});\n  function useURLParams(key, value, def) {\n    useEffect(() => {\n      function changeParams() {\n        window.history.pushState(null, null, `${window.location.origin}${window.location.pathname}?${queryString.stringify(urlParams, {arrayFormat: 'comma'})}`);\n      }\n\n      if (!isEqual(urlParams[key], value)) {\n        if (isEqual(def, value) && urlParams[key] !== undefined) {\n          delete urlParams[key];\n          changeParams();\n        } else if (!isEqual(def, value)) {\n          urlParams[key] = value;\n          changeParams();\n        }\n      }\n    }, [value, key, def]);\n  }\n\n  const [a4, setA4] = useState(urlParams.a4 || A4.DEFAULT);\n  useURLParams('a4', a4, A4.DEFAULT);\n\n  const [oscillator, setOscillator] = useState(urlParams.oscillator || OSCILLATOR_TYPES.SINE);\n  useURLParams('oscillator', oscillator, OSCILLATOR_TYPES.SINE);\n\n  const [semitones, setSemitones] = useState(urlParams.semitones || SEMITONES);\n  useURLParams('semitones', semitones, SEMITONES);\n\n  const [transposition, setTransposition] = useState(urlParams.transposition !== undefined ? urlParams.transposition : DEFAULT_TRANSPOSITION);\n  useURLParams('transposition', transposition, DEFAULT_TRANSPOSITION);\n\n  const [pitchNames, setPitchNames] = useState(findPitchNames(semitones, transposition));\n  useEffect(() => {\n    setPitchNames(findPitchNames(semitones, transposition));\n  }, [semitones, transposition]);\n\n  const [pitchSkipOptions, setPitchSkipOptions] = useState(findPitchSkipOptions(semitones));\n  useEffect(() => {\n    setPitchSkipOptions(findPitchSkipOptions(semitones));\n  }, [semitones]);\n\n  const _ps = urlParams.pitchSkip ? urlParams.pitchSkip : pitchSkipOptions[0];\n  const [pitchSkip, setPitchSkip] = useState(_ps);\n  useEffect(() => {\n    if (pitchSkipOptions.indexOf(pitchSkip) < 0) {\n      setPitchSkip(pitchSkipOptions[0]);\n    }\n  }, [pitchSkipOptions, pitchSkip]);\n  useURLParams('pitchSkip', pitchSkip, _ps);\n\n  const _eq = [];\n  for (let i = 0; i < EQ_FREQUENCIES.length; i++) {\n    _eq.push(0);\n  }\n  const [eq, setEq] = useState(urlParams.eq || _eq);\n  useURLParams('eq', eq, _eq);\n\n  const [rootFrequency, setRootFrequency] = useState(transposeFrequency(a4, transposition));\n  useEffect(() => {\n    setRootFrequency(transposeFrequency(a4, transposition));\n  }, [transposition, a4]);\n\n  const [baseFrequencies, setBaseFrequencies] = useState(findBaseFrequencies(semitones, rootFrequency));\n  useEffect(() => {\n    setBaseFrequencies(findBaseFrequencies(semitones, rootFrequency));\n  }, [semitones, rootFrequency]);\n\n  const [pitchSequence, setPitchSequence] = useState(findPitchSequence(semitones, pitchSkip));\n  useEffect(() => {\n    setPitchSequence(findPitchSequence(semitones, pitchSkip));\n  }, [semitones, pitchSkip]);\n\n  const [pitchNamesSorted, setPitchNamesSorted] = useState(sortPitchNames(pitchNames, transposition, pitchSkip));\n  useEffect(() => {\n    setPitchNamesSorted(sortPitchNames(pitchNames, pitchSkip));\n  }, [pitchNames, pitchSkip]);\n\n  const [mode, setMode] = useState(urlParams.mode || 0);\n  useURLParams('mode', mode, 0);\n\n  const [chordNamesSorted, setChordNamesSorted] = useState([]);\n  useEffect(() => {\n    const chordNames = findChordNames(semitones, mode);\n    setChordNamesSorted(sortPitchNames(chordNames, pitchSkip));\n  }, [semitones, pitchSkip, mode]);\n\n  const [activePitches, setActivePitches] = useState([]);\n\n  const diameter = Math.min(...useViewportDimensions());\n\n  const [isMenuOpen, setMenuOpen] = useState(false);\n  function onMenuButtonClick() {\n    if (isMenuOpen) {\n      initializaAudio(baseFrequencies, eq);\n    }\n    setMenuOpen(!isMenuOpen);\n  }\n\n  function onTouchCallback(pitches) {\n    for(let i = 0; i < semitones; i++) {\n      if (pitches.indexOf(i) >= 0) {\n        toggleNote(i, true, oscillator)\n      } else {\n        toggleNote(i, false, oscillator)\n      }\n    }\n    setActivePitches(pitches);\n  }\n\n  return (\n    <FirstTouch className={styles.root} callback={ initializaAudio.bind(null, baseFrequencies, eq)}>\n      <div className={styles.contentHolder}>\n      </div>\n      <div className={styles.wheelHolder} style={{width: `${diameter}px`, height: `${diameter}px`}}>\n        <Display\n          activePitches={activePitches}\n          baseFrequencies={baseFrequencies}\n          diameter={diameter}\n          pitchSequence={pitchSequence}\n          mode={mode}\n        />\n        <PitchLabel pitchNamesSorted={pitchNamesSorted} diameter={diameter} mode={mode} />\n        <ChordLabel chordNamesSorted={chordNamesSorted} diameter={diameter} />\n        <TouchPad\n          callback={onTouchCallback}\n          diameter={diameter}\n          pitchSequence={pitchSequence}\n        />\n      </div>\n\n      {isMenuOpen && <div className={styles.menuHolder}><Menu\n        a4={a4}\n        setA4={setA4}\n        eq={eq}\n        setEq={setEq}\n        mode={mode}\n        setMode={setMode}\n        oscillator={oscillator}\n        setOscillator={setOscillator}\n        pitchSkip={pitchSkip}\n        setPitchSkip={setPitchSkip}\n        semitones={semitones}\n        setSemitones={setSemitones}\n        transposition={transposition}\n        setTransposition={setTransposition}\n        pitchSkipOptions={pitchSkipOptions}\n      /></div>}\n\n      <button className={styles.menuButton} onClick={onMenuButtonClick}>{isMenuOpen ? 'x' : 'menu'}</button>\n    </FirstTouch>\n  );\n}\n","import {MODES} from '../constants';\n\nexport default function findChordNames(semitones, modeIndex) {\n  const {chords} = MODES[modeIndex]\n  const {length} = chords;\n  return chords.map(function(name, index) {\n    const nameIndex = (index / semitones * length) % length;\n    if (!(nameIndex % 1)) {\n      return chords[nameIndex];\n    }\n    return null;\n  })\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/reset.module.scss';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__nWMuC\",\"menuHolder\":\"App_menuHolder__243kY\",\"menuButton\":\"App_menuButton__3IBp4\",\"contentHolder\":\"App_contentHolder__3Zpi7\",\"wheelHolder\":\"App_wheelHolder__1I76D\"};"],"sourceRoot":""}