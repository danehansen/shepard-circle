{"version":3,"sources":["App/App.module.scss","App/PitchLabel/PitchLabel.module.scss","App/ChordLabel/ChordLabel.module.scss","App/Menu/Menu.module.scss","App/Display/Display.module.scss","App/Menu/Input/Input.module.scss","App/Button/Button.module.scss","App/TouchPad/TouchPad.module.scss","App/Display/canvas.js","util/math.js","util/music.js","util/constants.js","App/Display/findColors.js","App/Display/fillSlice.js","util/findIntervalRatio.js","App/Display/drawInterval.js","App/Display/Display.js","App/Menu/Input/Input.js","App/Button/Button.js","App/Menu/Menu.js","App/PitchLabel/PitchLabel.js","App/ChordLabel/ChordLabel.js","App/TouchPad/TouchPad.js","App/FirstTouch/FirstTouch.js","util/findPitchSkipOptions.js","util/findAllPitchNames.js","util/findPitchNames.js","util/findBaseFrequencies.js","util/findPitchSequence.js","util/sortPitchNames.js","util/shepardTone.js","util/hooks.js","App/App.js","util/findChordNames.js","reportWebVitals.js","index.js"],"names":["module","exports","rotate","angle","x","y","ctx","func","cos","Math","sin","dx","dy","call","Canvas","element","document","createElement","width","offsetWidth","height","offsetHeight","devicePixelRatio","window","resize","isMounted","_element","parentNode","_width","_height","_devicePixelRatio","_imageDataHandler","_context","scale","arc","radius","startAngle","endAngle","PI","anticlockwise","beginPath","bezierCurveTo","clearRect","clip","closePath","drawImage","source","sx","sy","sWidth","sHeight","dWidth","dHeight","isCanvas","_drawImageDest","fill","fillRect","lineTo","moveTo","quadraticCurveTo","rect","stroke","resetTransform","restore","transform","save","setRotate","setTransform","xScale","xSkew","ySkew","yScale","setTranslate","translate","createImageData","imageDataOrWidth","this","getContext","str","fillStyle","globalCompositeOperation","num","globalAlpha","lineWidth","strokeStyle","points","lastPoint","nextPoint","path","Path2D","length","i","avgX","avgY","toRadianDirection","degrees","circ","offset","toRadians","modulo","toDegreeDirection","radians","toDegrees","HUMAN_MAX_FREQ","STANDARD_SEMITONES","STANDARD_A4","CENTS_PER_STANDARD_SEMITONE","CENTS_PER_OCTAVE","A4","415","427","428","429","430","430.54","432","435","439","transposeFrequency","frequency","cents","pow","DEGREES_IN_CIRCLE","RADIANS_IN_CIRCLE","EQ_FREQUENCIES","push","MODES","name","chords","useModeForNaming","OSCILLATOR_TYPES","SINE","SQUARE","TRIANGLE","findDirectionalColor","direction","colorSlice","cosR","cosG","cosB","r","round","g","b","flipRadiansVertically","atan2","fillSlice","canvas","color","diameter","startRadians","endRadians","outerRadius","holeRadius","isInKey","center","isCircle","findIntervalRatio","fRoot","fComparison","fA","fB","log2","abs","drawInterval","radianA","radianB","frequencyA","frequencyB","colorA","colorB","pointA","pointB","interval","xDiff","yDiff","diff","sqrt","radiusA","radiusB","centerX","centerY","Display","className","activePitches","baseFrequencies","mode","pitchSequence","rootNode","useRef","useState","root","setRoot","buffer","setBuffer","useEffect","current","undefined","semitones","colors","buttonSlice","findColors","halfSlice","isActive","indexOf","drawSlices","pitchA","degreesA","j","pitchB","degreesB","connectPitches","classnames","styles","ref","Input","rest","Button","href","component","Component","target","findIncrementLabel","increment","Menu","a4","setA4","allPitchNames","eq","setEq","setMode","oscillator","setOscillator","pitchSkip","setPitchSkip","setSemitones","transposition","setTransposition","pitchSkipOptions","onOscillatorChange","value","onEQChange","index","values","property","title","Object","map","label","type","checked","onChange","labelText","reset","onClick","evt","preventDefault","verticalRangeHolder","verticalRange","min","max","step","bind","columns","parseInt","modeObj","valueText","wide","keys","issue","PitchLabel","pitchNamesSorted","chordNamesSorted","transformOrigin","hasAccidental","isSmall","button","small","deemphesized","style","ChordLabel","TouchPad","callback","anyTouch","targetTouches","getBoundingClientRect","pitches","clientX","clientY","floor","onTouchMove","onTouchStart","onTouchEnd","onTouchCancel","FirstTouch","hasCalledCallback","setHasCalledCallback","findPitchSkipOptions","increments","findIncrementsOfSemitone","semitoneIndexes","semitoneIndex","PITCH_NAMES","m","findAllPitchNames","allNames","array","letters","lastLetterIndex","makeArrayWithNakedLettersInKeySpots","pitchName","lastPitchName","nextPitchName","Array","isArray","findIndex","node","addAccidentalsToKeySpots","hasFlats","join","hasSharps","fillInEmptySpots","findPitchNames","nameIndexFloat","nameIndex","prefix","remainder","String","slice","findBaseFrequencies","rootFrequency","frequencies","findPitchSequence","sequence","sortPitchNames","pitchNames","currentOscillators","audioContext","gainNode","headNode","initializaAudio","close","AudioContext","webkitAudioContext","createGain","connect","destination","gain","eqNode","createBiquadFilter","findAudibleOctaves","toggleNote","note","isPlaying","oscillators","oscillatorNode","createOscillator","start","startNote","stop","stopNote","WIN","PLACEHOLDER_WINDOW","addEventListener","innerHeight","innerWidth","removeEventListener","App","urlParams","queryString","parse","location","search","parseNumbers","arrayFormat","useURLParams","key","def","changeParams","history","replaceState","origin","pathname","stringify","isEqual","setAllPitchNames","setPitchNames","setPitchSkipOptions","_ps","_eq","setRootFrequency","setBaseFrequencies","setPitchSequence","setPitchNamesSorted","setChordNamesSorted","modeIndex","twelveChordsInMode","semitonesChordsInMode","chord","findChordNames","setActivePitches","win","setInnerHeight","setInnerWidth","onResize","useViewportDimensions","isMenuOpen","setMenuOpen","contentHolder","wheelHolder","newPitches","menuHolder","menuButton","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.afc1fdfc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__nWMuC\",\"menuHolder\":\"App_menuHolder__243kY\",\"menuButton\":\"App_menuButton__3IBp4\",\"contentHolder\":\"App_contentHolder__3Zpi7\",\"wheelHolder\":\"App_wheelHolder__1I76D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PitchLabel_root__3-xxj\",\"button\":\"PitchLabel_button__29U3k\",\"hasAccidental\":\"PitchLabel_hasAccidental__xtPck\",\"small\":\"PitchLabel_small__3x-Zk\",\"deemphesized\":\"PitchLabel_deemphesized__Gd1GB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ChordLabel_root__U_GCi\",\"button\":\"ChordLabel_button__3bTYZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Menu_root__3QA5H\",\"property\":\"Menu_property__qoOWz\",\"title\":\"Menu_title__tE_9H\",\"reset\":\"Menu_reset__uN5da\",\"columns\":\"Menu_columns__3o8dK\",\"label\":\"Menu_label__3hKMT\",\"wide\":\"Menu_wide__2sfIP\",\"labelText\":\"Menu_labelText__2uoMn\",\"valueText\":\"Menu_valueText__37XmB\",\"verticalRangeHolder\":\"Menu_verticalRangeHolder__2TdXL\",\"verticalRange\":\"Menu_verticalRange__3aZoM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Display_root__ig8ld\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Input_root__2EB5Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Button_root__1mUtC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TouchPad_root__22wzt\"};","// import ImageDataHandler from './image-data-handler';\n\nfunction rotate(angle, x, y, ctx, func) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const dx = x - cos * x - sin * -y;\n  const dy = y - sin * x - cos * y;\n  func.call(ctx, cos, sin, -sin, cos, dx, dy);\n}\n\n/**\n* a helper for canvas manipulation, to store a reference to the element as well as it's context.\nalso adds some helpful method defaults. also has some drawing utilities.\n* @param {HTMLCanvasElement} [element = document.createElement('canvas')] - put HTMLCanvasElement if this is your\n* final render canvas\n* @param {Integer} [width = element.offsetWidth] - width of area\n* @param {Integer} [height = element.offsetHeight] - height of area\n* @param {Float} [devicePixelRatio = window.devicePixelRatio] - actual pixels to css pixel\n*/\nexport default class Canvas {\n  /* *******************\n  * initializing methods\n  *********************/\n\n  constructor(element = document.createElement('canvas'), width = element.offsetWidth, height = element.offsetHeight, devicePixelRatio = window.devicePixelRatio) { // eslint-disable-line max-len\n    this._element = element;\n    this._context = this._element.getContext('2d');\n    this.resize(width, height, devicePixelRatio);\n  }\n\n  /**\n    * sets width/height properties as well as scaling\n    * @param {Integer} [width = this.width] - width of area of canvas\n    * @param {Integer} [height = this.height] - height of area of canvas\n    * @param {Float} [devicePixelRatio = window.devicePixelRatio] - actual pixels to css pixel\n    * @returns {void}\n  */\n  // eslint-disable complexity\n  resize = (width, height, devicePixelRatio = window.devicePixelRatio) => {\n    // allow for case to call with no params when devicePixelRatio is changed\n    // allow for case to call with no params when dom element is resized\n    // otherwise width and height are defined\n    // this method will erase the canvas and reset any clipping, fillStyle, lineWidth, strokeStyle, etc...\n    if (!width || !height) {\n      const isMounted = !!this._element.parentNode;\n      width = isMounted ? this._element.offsetWidth : this._width;\n      height = isMounted ? this._element.offsetHeight : this._height;\n    }\n    this._devicePixelRatio = devicePixelRatio;\n    this._width = width;\n    this._height = height;\n    this._element.width = width * this._devicePixelRatio;\n    this._element.height = height * this._devicePixelRatio;\n    this._imageDataHandler = null;\n    this._context.scale(this._devicePixelRatio, this._devicePixelRatio);\n  }\n  // eslint-enable complexity\n\n  /* ******\n  * getters\n  ********/\n\n  /**\n    * get the instance's HTMLCanvasElement\n    * @readonly\n    * @type {HTMLCanvasElement}\n  */\n  get element() {\n    return this._element;\n  }\n\n  /**\n    * get the instance's height\n    * @readonly\n    * @type {Integer}\n  */\n  get height() {\n    return this._height;\n  }\n\n  /**\n    * get the instance's ImageDataHandler reflecting the current state\n    * @readonly\n    * @type {ImageDataHandler}\n  */\n  get imageDataHandler() {\n    // if (!this._imageDataHandler) {\n      // const width = this._width * this._devicePixelRatio;\n      // const height = this._height * this._devicePixelRatio;\n      // this._imageDataHandler = new ImageDataHandler(this._context, 0, 0, width, height);\n    // }\n    return this._imageDataHandler;\n  }\n\n  /**\n    * get the instance's width\n    * @readonly\n    * @type {Integer}\n  */\n  get width() {\n    return this._width;\n  }\n\n  /* ******\n  * setters\n  ********/\n\n  /**\n    * set the fill color of the context.\n    * @param {String} str - new value for fillStyle\n    * @type {String}\n  */\n  set fillStyle(str) {\n    this._context.fillStyle = str;\n  }\n\n  /**\n    * set the globalCompositeOperation of the context.\n    * @param {String} str - new value for globalCompositeOperation\n    * @type {String}\n  */\n  set globalCompositeOperation(str) {\n    this._context.globalCompositeOperation = str;\n  }\n\n  /**\n    * set the alpha the context.\n    * @param {Float} num - new value for globalAlpha\n    * @type {Float}\n  */\n  set globalAlpha(num) {\n    this._context.globalAlpha = num;\n  }\n\n  /**\n    * set the stroke width of the context.\n    * @param {Float} num - new value for lineWidth\n    * @type {Float}\n  */\n  set lineWidth(num) {\n    this._context.lineWidth = num;\n  }\n\n  /**\n    * sets the stroke color of the context.\n    * @param {String} str - new value for strokeStyle\n    * @type {String}\n  */\n  set strokeStyle(str) {\n    this._context.strokeStyle = str;\n  }\n\n  /* **************\n  * drawing methods\n  ****************/\n\n  /**\n    * draws an arc on the context\n    * @param {Float} x - center point's x position\n    * @param {Float} y - center point's y position\n    * @param {Float} radius - arc's radius\n    * @param {Float} [startAngle = 0] - angle to begin arc\n    * @param {Float} [endAngle = Math.PI * 2] - angle to end arc\n    * @param {Boolean} [anticlockwise = false] - draws anticlockwise if true\n    * @returns {void}\n  */\n  arc = (x, y, radius, startAngle = 0, endAngle = Math.PI * 2, anticlockwise = false) => {\n    this._context.arc(x, y, radius, startAngle, endAngle, anticlockwise);\n  }\n\n  /**\n    * begins a drawing path on the context\n    * @returns {void}\n  */\n  beginPath = () => {\n    this._context.beginPath();\n  }\n\n  /**\n    * draws an bezier curve on the context\n    * @returns {void}\n  */\n  bezierCurveTo = (...args) => {\n    this._context.bezierCurveTo(...args);\n  }\n\n  /**\n    * clears a rectangle on the context. also nulls the _imageDataHandler value if one exists.\n    * @param {Float} [x = 0] - rectangle's x position\n    * @param {Float} [y = 0] - rectangle's y position\n    * @param {Float} [width = this.width] - rectangle's width\n    * @param {Float} [height = this.height] - rectangle's height\n    * @returns {void}\n  */\n  clearRect = (x = 0, y = 0, width = this.width, height = this.height) => {\n    this._context.clearRect(x, y, width, height);\n    this._imageDataHandler = null;\n  }\n\n  /**\n    * creates a clipping path on the context for future drawing calls.\n    * @returns {void}\n  */\n  clip = (...args) => {\n    this._context.clip(...args);\n  }\n\n  /**\n    * closes a path on the context\n    * @returns {void}\n  */\n  closePath = () => {\n    this._context.closePath();\n  }\n\n  // eslint-disable valid-jsdoc\n  /**\n    * draws an Image or canvas element into the context. also nulls the _imageDataHandler value if one exists.\n    * method overloading to reflect CanvasRenderingContext2D.drawImage.\n    * @param {Canvas|Image|HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} source - where to take pixels from\n    * @param {Float} [dx = 0] - x coordinate of source's destination\n    * @param {Float} [dy = 0] - y coordinate of source's destination\n    * @param {Float} [dWidth = image.width] - width of destination\n    * @param {Float} [dHeight = image.height] - height of destination\n    * @returns {void}\n  */\n  /**\n    * draws an Image or canvas element into the context. also nulls the _imageDataHandler value if one exists.\n    * method overloading to reflect CanvasRenderingContext2D.drawImage.\n    * @param {Canvas|Image|HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} source - where to take pixels from\n    * @param {Float} sx - x coordinate of where to pull from source\n    * @param {Float} sy - y coordinate of where to pull from source\n    * @param {Float} sWidth - width of area to pull from source\n    * @param {Float} sHeight - height of area to pull from source\n    * @param {Float} dx - x coordinate of source's destination\n    * @param {Float} dy - y coordinate of source's destination\n    * @param {Float} dWidth - width of destination\n    * @param {Float} dHeight - height of destination\n    * @returns {void}\n  */\n  drawImage = (source, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight) => { // eslint-disable-line max-params\n    // sx, sy, sWidth, sHeight on images do not get scaled against devicePixelRatio\n    const hasSource = typeof dx === 'number';\n    const isCanvas = source instanceof Canvas;\n    if (hasSource) {\n      if (isCanvas) {\n        sx *= this._devicePixelRatio;\n        sy *= this._devicePixelRatio;\n        sWidth *= this._devicePixelRatio;\n        sHeight *= this._devicePixelRatio;\n        this._context.drawImage(source.element, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);\n      } else {\n        this._context.drawImage(source, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);\n      }\n    } else if (isCanvas) {\n      sWidth = sWidth || source.width;\n      sHeight = sHeight || source.height;\n      this._drawImageDest(source.element, sx, sy, sWidth, sHeight);\n    } else {\n      this._drawImageDest(source, sx, sy, sWidth, sHeight);\n    }\n    this._imageDataHandler = null;\n  }\n  // eslint-enable valid-jsdoc\n\n  _drawImageDest = (source, dx = 0, dy = 0, dWidth = source.width, dHeight = source.height) => {\n    this._context.drawImage(source, dx, dy, dWidth, dHeight);\n  }\n\n  /**\n    * fills a path on the context. also nulls the _imageDataHandler value if one exists.\n    * @returns {void}\n  */\n  fill = (...args) => {\n    this._context.fill(...args);\n    this._imageDataHandler = null;\n  }\n\n  /**\n    * draws a filled rectangle on the context. also nulls the _imageDataHandler value if one exists.\n    * @param {Float} [x = 0] - rectangle's x position\n    * @param {Float} [y = 0] - rectangle's y position\n    * @param {Float} [width = this.width] - rectangle's width\n    * @param {Float} [height = this.height] - rectangle's height\n    * @returns {void}\n  */\n  fillRect = (x = 0, y = 0, width = this.width, height = this.height) => {\n    this._context.fillRect(x, y, width, height);\n    this._imageDataHandler = null;\n  }\n\n  /**\n    * draws a line to a point on the context.\n    * @returns {void}\n  */\n  lineTo = (...args) => {\n    this._context.lineTo(...args);\n  }\n\n  /**\n    * moves to a point on the context.\n    * @returns {void}\n  */\n  moveTo = (...args) => {\n    this._context.moveTo(...args);\n  }\n\n  /**\n    * draws a quadratic curve to a point on the context.\n    * @returns {void}\n  */\n  quadraticCurveTo = (...args) => {\n    this._context.quadraticCurveTo(...args);\n  }\n\n  /**\n    * draws a rectangle on the context.\n    * @param {Float} [x = 0] - rectangle's x position\n    * @param {Float} [y = 0] - rectangle's y position\n    * @param {Float} [width = this.width] - rectangle's width\n    * @param {Float} [height = this.height] - rectangle's height\n    * @returns {void}\n  */\n  rect = (x = 0, y = 0, width = this.width, height = this.height) => {\n    this._context.rect(x, y, width, height);\n  }\n\n  // scale: no scale method! use resize instead!\n\n  /**\n    * strokes the context's current path.\n    * @returns {void}\n  */\n  stroke = (...args) => {\n    this._context.stroke(...args);\n    this._imageDataHandler = null;\n  }\n\n  /* *********************\n  * transformation methods\n  ***********************/\n\n  /**\n    * resets all transforms on the context to zero.\n    * @returns {void}\n  */\n  resetTransform = () => {\n    this._context.resetTransform();\n    // if canvas was scaled it would otherwise be undone\n    this._context.scale(this._devicePixelRatio, this._devicePixelRatio);\n  }\n\n  /**\n    * restores context to a saved state of popped off of a stack.\n    * @returns {void}\n  */\n  restore = () => {\n    this._context.restore();\n  }\n\n  /**\n    * cumulatively rotates the context around x/y coordinates.\n    * @param {Float} angle - amount to rotate\n    * @param {Float} [x = this.width / 2] - center x position\n    * @param {Float} [y = this.height / 2] - center y position\n    * @returns {void}\n  */\n  rotate = (angle, x = 0.5 * this.width, y = 0.5 * this.height) => {\n    if (!angle) {\n      return;\n    }\n    rotate(angle, x, y, this._context, this._context.transform);\n  }\n\n  /**\n    * pushes a saved state of the curent context onto a stack.\n    * @returns {void}\n  */\n  save = () => {\n    this._context.save();\n  }\n\n  /**\n    * resets the context's rotation to a new amount around x/y coordinates.\n    * @param {Float} angle - amount to rotate\n    * @param {Float} [x = this.width / 2] - center x position\n    * @param {Float} [y = this.height / 2] - center y position\n    * @returns {void}\n  */\n  setRotate = (angle, x = 0.5 * this.width, y = 0.5 * this.height) => {\n    rotate(angle, x, y, this._context, this.setTransform);\n  }\n\n  /**\n    * resets the context's transform to new values.\n    * @param {Float} xScale - horizontal scale\n    * @param {Float} xSkew - horizontal skew\n    * @param {Float} ySkew - verical skew\n    * @param {Float} yScale - vertical movement\n    * @param {Float} dx - horizontal movement\n    * @param {Float} dy - vertical movement\n    * @returns {void}\n  */\n  setTransform = (xScale, xSkew, ySkew, yScale, dx, dy) => {\n    xScale *= this._devicePixelRatio;\n    xSkew *= this._devicePixelRatio;\n    ySkew *= this._devicePixelRatio;\n    yScale *= this._devicePixelRatio;\n    dx *= this._devicePixelRatio;\n    dy *= this._devicePixelRatio;\n    this._context.setTransform(xScale, xSkew, ySkew, yScale, dx, dy);\n  }\n\n  /**\n    * sets the context's grid to coordinates.\n    * @param {Float} dx - horizontal movement\n    * @param {Float} dy - vertical movement\n    * @returns {void}\n  */\n  setTranslate = (dx, dy) => {\n    this.setTransform(1, 0, 0, 1, dx, dy);\n  }\n\n  /**\n    * cumulatively moves the context's grid by coordinates.\n    * @param {Float} dx - horizontal movement\n    * @param {Float} dy - vertical movement\n    * @returns {void}\n  */\n  translate = (dx, dy) => {\n    this._context.translate(dx, dy);\n  }\n\n  /* ***********\n  * misc methods\n  *************/\n\n  // eslint-disable valid-jsdoc\n  /**\n    * creates a blank ImageData based on provided width/height.\n    * method overloading to reflect CanvasRenderingContext2D.createImageData.\n    * @param {Number} width - a width amount\n    * @param {Number} height - a height amount\n    * @returns {void}\n  */\n  /**\n    * creates a blank ImageData based on a provided ImageData's dimensions.\n    * method overloading to reflect CanvasRenderingContext2D.createImageData.\n    * @param {ImageData} imageData - an existing ImageData instance\n    * @returns {void}\n  */\n  // eslint-enable valid-jsdoc\n  createImageData = (imageDataOrWidth, height) => {\n    return this._context.createImageData(imageDataOrWidth, height);\n  }\n\n  /* *************\n  * static methods\n  ***************/\n\n  /**\n    * returns Path2D of a path approximately through an array of points.\n    * @param {Array} points - array of points\n    * @param {Path2D} [path = new Path2D()] - Path2D instance to add instructions to\n    * @returns {void}\n  */\n  static quadraticThrough(points, path = new Path2D()) {\n    const { length } = points;\n    let lastPoint;\n    let nextPoint;\n    for (let i = 0; i < length - 1; i++) {\n      lastPoint = nextPoint || points[0];\n      nextPoint = points[i + 1];\n      if (i === 0) {\n        path.moveTo(lastPoint.x, lastPoint.y);\n      } else if (i < length - 2) {\n        const avgX = (lastPoint.x + nextPoint.x) / 2;\n        const avgY = (lastPoint.y + nextPoint.y) / 2;\n        path.quadraticCurveTo(lastPoint.x, lastPoint.y, avgX, avgY);\n      } else {\n        path.quadraticCurveTo(lastPoint.x, lastPoint.y, nextPoint.x, nextPoint.y);\n      }\n    }\n    return path;\n  }\n}\n","import {modulo} from '@danehansen/math';\n\nexport function toRadians(degrees) {\n  return degrees * Math.PI / 180;\n}\n\nexport function toDegrees(radians) {\n  return radians * 180 / Math.PI;\n}\n\nexport function toRadianDirection(degrees) {\n  const circ = Math.PI * 2;\n  const radians = toRadians(-degrees);\n  const offset = radians + circ * 0.25;\n  return modulo(offset, circ);\n}\n\nexport function toDegreeDirection(radians) {\n  const degrees = toDegrees(-radians);\n  return modulo(degrees + 90, 360);\n}\n","export const HUMAN_CENT_THRESHOLD = 5;\nexport const HUMAN_MIN_FREQ = 20;\nexport const HUMAN_MAX_FREQ = 20000;\nexport const STANDARD_SEMITONES = 12;\nexport const STANDARD_A4 = 440;\nexport const CENTS_PER_STANDARD_SEMITONE = 100;\nexport const CENTS_PER_OCTAVE = STANDARD_SEMITONES * CENTS_PER_STANDARD_SEMITONE;\n\nexport const A4 = {\n  415: 'baroque',\n  427: 'classical',\n  428: 'classical',\n  429: 'classical',\n  430: 'classical',\n  430.54: 'scientific',\n  432: '“frequency of the universe”',\n  435: 'diapson normal',\n  439: 'new philharmonic',\n  [STANDARD_A4]: 'stuttgart',\n  452: 'old philharmonic',\n  466: 'chorton',\n};\n\nexport function findInterval(fA, fB) {\n  const cents = CENTS_PER_OCTAVE * Math.log2(fB / fA);\n  return cents;\n}\n\nexport function transposeFrequency(frequency, cents) {\n  return frequency * Math.pow(Math.pow(2, 1 / STANDARD_SEMITONES), (cents / CENTS_PER_STANDARD_SEMITONE));\n}\n\nexport function findFrequency(str) {\n  // TODO\n}\n","import {CENTS_PER_STANDARD_SEMITONE, HUMAN_MAX_FREQ, HUMAN_MIN_FREQ} from './music';\n\nexport const DEFAULT_TRANSPOSITION = 3 * CENTS_PER_STANDARD_SEMITONE;\nexport const DEGREES_IN_CIRCLE = 360;\nexport const RADIANS_IN_CIRCLE = Math.PI * 2;\n\nexport const EQ_FREQUENCIES = [];\nlet frequency = 2;\nwhile(frequency < HUMAN_MAX_FREQ) {\n  frequency *= 2;\n  if (frequency >= HUMAN_MIN_FREQ && frequency <= HUMAN_MAX_FREQ) {\n    EQ_FREQUENCIES.push(frequency);\n  }\n}\n\nexport const MODES = [\n  {\n    name: '(none)',\n    chords: [],\n    useModeForNaming: 1,\n  },\n  {\n    name: 'I Ionian (Major)',\n    chords: ['I', null, 'ii', null, 'iii', 'IV', null, 'V', null, 'vi', null, 'viiº'],\n  },\n  {\n    name: 'II Dorian',\n    chords: ['i', null, 'ii', 'III', null, 'IV', null, 'v', null, 'viº', 'VII', null],\n  },\n  {\n    name: 'III Phrygian',\n    chords: ['i', 'II', null, 'III', null, 'iv', null, 'vº', 'VI', null, 'vii', null],\n  },\n  {\n    name: 'IV Lydian',\n    chords: ['I', null, 'II', null, 'iii', null, 'ivº ', 'V', null, 'vi', null, 'vii'],\n  },\n  {\n    name: 'V Mixolydian',\n    chords: ['I', null, 'ii', null, 'iiiº', 'IV', null, 'v', null, 'vi', 'VII', null],\n  },\n  {\n    name: 'VI Aeolian (Minor)',\n    chords: ['i', null, 'iiº', 'III', null, 'iv', null, 'v', 'VI', null, 'VII', null],\n  },\n  {\n    name: 'VII Locrian',\n    chords: ['iº', 'II', null, 'iii', null, 'iv', 'V',  null, 'VI', null, 'vii', null],\n  },\n  {\n    name: 'Major Pentatonic',\n    chords: ['I', null, 'ii', null, 'iii', null, null, 'V', null, 'vi', null, null],\n    useModeForNaming: 1,\n  },\n  {\n    name: 'Minor Pentatonic',\n    chords: ['i', null, null, 'III', null, 'iv', null, 'v', null, null, 'VII', null],\n    useModeForNaming: 6,\n  },\n  {\n    name: 'Blues Major',\n    chords: ['I', null, 'ii', null, null, 'IV', null, 'v', null, 'vi', null, null],\n    useModeForNaming: 1,\n  },\n  {\n    name: 'Blues Minor',\n    chords: ['i', null, null, 'III', null, 'iv', null, null, 'VI', null, 'vii', null],\n    useModeForNaming: 6,\n  },\n];\n\nexport const OSCILLATOR_TYPES = {\n  SINE: 'sine',\n  SQUARE: 'square',\n  // SAWTOOTH: 'sawtooth',\n  TRIANGLE: 'triangle',\n};\n\nexport const TEMPERMENT_TYPES = {\n  EQUAL: 'equal',\n  JUST: 'just',\n  MEANTONE: 'meantone',\n  PYTHAGOREAN: 'pythagorean',\n};\n","import {toRadianDirection} from '../../util/math';\nimport {RADIANS_IN_CIRCLE, DEGREES_IN_CIRCLE} from '../../util/constants';\n\nfunction findDirectionalColor(direction) {\n  direction -= RADIANS_IN_CIRCLE * 0.25;\n  const colorSlice = RADIANS_IN_CIRCLE / 3;\n  const cosR = Math.cos(-direction);\n  const cosG = Math.cos(-direction - colorSlice);\n  const cosB = Math.cos(-direction + colorSlice);\n\n  const r = Math.round(cosR * 255 * 0.5 + 255 * 0.5);\n  const g = Math.round(cosG * 255 * 0.5 + 255 * 0.5);\n  const b = Math.round(cosB * 255 * 0.5 + 255 * 0.5);\n\n  return {r, g, b};\n}\n\nexport default function findColors(semitones) {\n  const colors = [];\n  const buttonSlice = DEGREES_IN_CIRCLE / semitones;\n  for(let i = 0; i < semitones; i++) {\n    colors.push(findDirectionalColor(toRadianDirection(i * buttonSlice)));\n  }\n  return colors;\n}\n","import {modulo} from '@danehansen/math';\nimport {RADIANS_IN_CIRCLE} from '../../util/constants';\n\nfunction flipRadiansVertically(radians) {\n  return Math.atan2(-Math.sin(radians), Math.cos(radians));\n}\n\nexport default function fillSlice(canvas, color, diameter, startRadians, endRadians, outerRadius, holeRadius, isInKey) {\n  const center = diameter / 2;\n  const isCircle = modulo(startRadians, RADIANS_IN_CIRCLE) === modulo(endRadians, RADIANS_IN_CIRCLE);\n\n  canvas.beginPath();\n  canvas.fillStyle =`rgb(${color.r}, ${color.g}, ${color.b})`;\n\n  if (isCircle) {\n    canvas.arc(center, center, center * outerRadius, 0, RADIANS_IN_CIRCLE);\n  } else {\n    // clockwise straight edge\n    let cos = Math.cos(startRadians);\n    let sin = Math.sin(startRadians);\n    canvas.moveTo(center + cos * center * holeRadius, center + sin * -center * holeRadius);\n    canvas.lineTo(center + cos * center * outerRadius, center + sin * -center * outerRadius);\n\n    // outer arc\n    canvas.arc(center, center, center * outerRadius, flipRadiansVertically(startRadians), flipRadiansVertically(endRadians), true);\n\n    // anticlockwise straight edge\n    cos = Math.cos(endRadians);\n    sin = Math.sin(endRadians);\n    canvas.moveTo(center + cos * center * outerRadius, center + sin * -center * outerRadius);\n    canvas.lineTo(center + cos * center * holeRadius, center + sin * -center * holeRadius);\n\n    // inner arc\n    canvas.arc(center, center, center * holeRadius, flipRadiansVertically(endRadians), flipRadiansVertically(startRadians), false);\n  }\n\n  canvas.fill();\n\n  if (isCircle) {\n    canvas.beginPath();\n    canvas.globalCompositeOperation = 'destination-out';\n    canvas.arc(center, center, center * holeRadius, 0, RADIANS_IN_CIRCLE);\n    canvas.fill();\n    canvas.globalCompositeOperation = 'source-over';\n  }\n}\n","import {findInterval, CENTS_PER_OCTAVE} from './music';\n\nexport default function findIntervalRatio(fRoot, fComparison) {\n  const tolerance = 2;\n  const cents = findInterval(fRoot, fComparison) % CENTS_PER_OCTAVE;\n\n  if (Math.abs(cents - 100) < tolerance || Math.abs(cents + 1100) < tolerance) {\n    return [16, 15];\n  }\n  if (Math.abs(cents - 1100) < tolerance || Math.abs(cents + 100) < tolerance) {\n    return [15, 16];\n  }\n\n  if (Math.abs(cents - 200) < tolerance || Math.abs(cents + 1000) < tolerance) {\n    return [9, 8];\n  }\n  if (Math.abs(cents - 1000) < tolerance || Math.abs(cents + 200) < tolerance) {\n    return [8, 9];\n  }\n\n  if (Math.abs(cents - 300) < tolerance || Math.abs(cents + 900) < tolerance) {\n    return [5, 3];\n  }\n  if (Math.abs(cents - 900) < tolerance || Math.abs(cents + 300) < tolerance) {\n    return [3, 5];\n  }\n\n  if (Math.abs(cents - 400) < tolerance || Math.abs(cents + 800) < tolerance) {\n    return [5, 4];\n  }\n  if (Math.abs(cents - 800) < tolerance || Math.abs(cents + 400) < tolerance) {\n    return [4, 5];\n  }\n\n  if (Math.abs(cents - 500) < tolerance || Math.abs(cents + 700) < tolerance) {\n    return [3, 2];\n  }\n  if (Math.abs(cents - 700) < tolerance || Math.abs(cents + 500) < tolerance) {\n    return [2, 3];\n  }\n\n  if (Math.abs(cents - 600) < tolerance || Math.abs(cents + 600) < tolerance) {\n    return [13, 9];\n  }\n\n  if (Math.abs(cents - 1200) < tolerance || Math.abs(cents + 1200) < tolerance || Math.abs(cents) < tolerance) {\n    return [1, 1];\n  }\n}\n","import findIntervalRatio from '../../util/findIntervalRatio';\nimport {RADIANS_IN_CIRCLE} from '../../util/constants';\n\nexport default function drawInterval(radianA, radianB, diameter, canvas, radius, frequencyA, frequencyB, colorA, colorB) {\n  const center = diameter / 2;\n\n  const cosA = Math.cos(radianA);\n  const sinA = Math.sin(-radianA);\n\n  const cosB = Math.cos(radianB);\n  const sinB = Math.sin(-radianB);\n\n  const pointA = {\n    x: center + cosA * center * radius,\n    y: center + sinA * center * radius,\n  };\n\n  const pointB = {\n    x: center + cosB * center * radius,\n    y: center + sinB * center * radius,\n  };\n\n  const interval = findIntervalRatio(frequencyA, frequencyB);\n  if (interval) {\n    canvas.lineWidth = 1;\n    const xDiff = pointB.x - pointA.x;\n    const yDiff = pointB.y - pointA.y;\n    const diff = Math.sqrt(Math.pow(xDiff, 2) + Math.pow(yDiff, 2));\n    const radiusA = diff / interval[0] / 2;\n    const radiusB = diff / interval[1] / 2;\n\n    canvas.strokeStyle = `rgb(${colorA.r}, ${colorA.g}, ${colorA.b})`;\n    for (let i = 0; i < interval[0]; i++) {\n      canvas.beginPath();\n      const centerX = pointA.x + xDiff / interval[0] * (i + 0.5);\n      const centerY = pointA.y + yDiff / interval[0] * (i + 0.5);\n      canvas.arc(centerX, centerY, radiusA, 0, RADIANS_IN_CIRCLE);\n      canvas.stroke();\n    }\n\n    canvas.strokeStyle = `rgb(${colorB.r}, ${colorB.g}, ${colorB.b})`;\n    for (let i = 0; i < interval[1]; i++) {\n      canvas.beginPath();\n      const centerX = pointA.x + xDiff / interval[1] * (i + 0.5);\n      const centerY = pointA.y + yDiff / interval[1] * (i + 0.5);\n      canvas.arc(centerX, centerY, radiusB, 0, RADIANS_IN_CIRCLE);\n      canvas.stroke();\n    }\n  }\n\n  canvas.globalCompositeOperation = \"source-over\";\n  canvas.strokeStyle = \"white\";\n  canvas.lineWidth = 2;\n  canvas.beginPath();\n  canvas.moveTo(pointA.x, pointA.y);\n  canvas.lineTo(pointB.x, pointB.y);\n  canvas.stroke();\n}\n","import styles from './Display.module.scss';\nimport classnames from 'classnames';\nimport React from 'react';\nimport Canvas from './canvas';\nimport {toRadianDirection} from '../../util/math';\nimport {MODES, RADIANS_IN_CIRCLE, DEGREES_IN_CIRCLE} from '../../util/constants';\nimport {useState, useEffect, useRef} from 'react';\nimport findColors from './findColors';\nimport fillSlice from './fillSlice';\nimport drawInterval from './drawInterval';\n\nexport default function Display({className, activePitches, baseFrequencies, diameter, mode, pitchSequence}) {\n  const rootNode = useRef();\n\n  const [root, setRoot] = useState(null);\n  const [buffer, setBuffer] = useState(null);\n  useEffect(() => {\n    if (!rootNode.current) {\n      return;\n    }\n    setRoot(new Canvas(rootNode.current));\n    setBuffer(new Canvas(undefined, diameter, diameter));\n  }, [rootNode, diameter]);\n\n  useEffect(() => {\n    if (!root) {\n      return;\n    }\n    root.resize(diameter, diameter);\n    buffer.resize(diameter, diameter);\n  }, [root, buffer, diameter]);\n\n  useEffect(() => {\n    if (!root) {\n      return;\n    }\n\n    const semitones = pitchSequence.length;\n    const colors = findColors(semitones);\n\n    function connectPitches() {\n      for (let i = 0; i < activePitches.length; i++) {\n        const pitchA = activePitches[i];\n        const degreesA = DEGREES_IN_CIRCLE / semitones * pitchSequence.indexOf(pitchA);\n        const frequencyA = baseFrequencies[pitchSequence.indexOf(pitchA)];\n        for (let j = i + 1; j < activePitches.length; j++) {\n          const pitchB = activePitches[j];\n          const degreesB = DEGREES_IN_CIRCLE / semitones * pitchSequence.indexOf(pitchB);\n          const frequencyB = baseFrequencies[pitchSequence.indexOf(pitchB)];\n          const colorA = colors[pitchA];\n          const colorB = colors[pitchB]\n          drawInterval(toRadianDirection(degreesA), toRadianDirection(degreesB), diameter, buffer, 0.4, frequencyA, frequencyB, colorA, colorB);\n        }\n      }\n    }\n\n    function drawSlices() {\n      const halfSlice = RADIANS_IN_CIRCLE / semitones / 2;\n      const {chords} = MODES[mode];\n\n      for (let i = 0; i < semitones; i++) {\n        const pitch = pitchSequence[i];\n        const degrees = pitch / semitones * DEGREES_IN_CIRCLE;\n        const color = colors[i];\n        const isActive = activePitches.indexOf(i) >= 0;\n        const radians = toRadianDirection(degrees);\n        const isInKey = !!chords[i];\n\n        fillSlice(buffer, color, diameter, radians - halfSlice, radians + halfSlice, isActive ? 1 : 0.95, isActive ? 0.12 : 0.1, isInKey);\n      }\n    }\n\n    root.clearRect();\n    buffer.clearRect();\n    drawSlices();\n    connectPitches();\n    root.drawImage(buffer);\n  }, [activePitches, baseFrequencies, diameter, mode, pitchSequence, buffer, root]);\n\n  return <canvas className={classnames(styles.root, className)} ref={rootNode} />;\n}\n","import styles from './Input.module.scss';\nimport classnames from 'classnames';\n\nexport default function Input({className, ...rest}) {\n  return <input className={classnames(styles.root, className)} {...rest} />\n}\n","import styles from './Button.module.scss';\nimport classnames from 'classnames';\n\nexport default function Button({\n  className,\n  href,\n\n  component:Component = href ? 'a' : 'button',\n  target = href && '_blank',\n  ...rest\n}) {\n  return <Component className={classnames(styles.root, className)} target={target} href={href} {...rest} />\n}\n","import styles from './Menu.module.scss';\nimport {OSCILLATOR_TYPES, MODES, EQ_FREQUENCIES} from '../../util/constants';\nimport {STANDARD_A4, A4, STANDARD_SEMITONES, HUMAN_CENT_THRESHOLD, CENTS_PER_STANDARD_SEMITONE, CENTS_PER_OCTAVE} from '../../util/music';\nimport classnames from 'classnames';\nimport Input from './Input/Input';\nimport Button from '../Button/Button';\n\nfunction findIncrementLabel(increment, semitones) {\n  if (increment === 1) {\n    return 'Clockwise';\n  } else if (increment === semitones - 1) {\n    return 'Anticlockwise';\n  }\n  if (semitones % STANDARD_SEMITONES === 0) {\n    if (increment === 7) {\n      return 'Circle of Fifths';\n    } else if (increment === semitones - 7) {\n      return 'Circle of Fourths';\n    }\n  }\n  return `skip ${increment - 1}`;\n}\n\nexport default function Menu({\n    a4,\n    setA4,\n    allPitchNames,\n    eq,\n    setEq,\n    mode,\n    setMode,\n    oscillator,\n    setOscillator,\n    pitchSkip,\n    setPitchSkip,\n    semitones,\n    setSemitones,\n    transposition,\n    setTransposition,\n    pitchSkipOptions,\n  }) {\n\n  function onOscillatorChange({ target: { value }}) {\n    setOscillator(value);\n  }\n\n  function onEQChange(index, {target: {value}}) {\n    const values = [...eq]\n    values[index] = value;\n    setEq(values);\n  }\n\n  return (\n    <form className={styles.root}>\n      <div className={styles.property}>\n        <h2 className={styles.title}>Oscillator</h2>\n        {Object.values(OSCILLATOR_TYPES).map((value) => {\n          return <label className={styles.label} key={value}>\n            <Input type=\"radio\" checked={oscillator === value} value={value} onChange={onOscillatorChange} />\n            <div className={styles.labelText}>{value}</div>\n          </label>\n        })}\n      </div>\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>EQ<Button className={styles.reset} onClick={(evt) => {evt.preventDefault(); setEq(EQ_FREQUENCIES.map(() => 0))}}>reset</Button></h2>\n        <div className={styles.verticalRangeHolder}>\n          {eq.map((value, i) => {\n            return <Input\n              key={i} className={styles.verticalRange} type=\"range\" min=\"-1\" max={1 * 0.27} step=\"0.01\" value={value} onChange={onEQChange.bind(null, i)} />\n          })}\n        </div>\n      </div>\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>Transposition</h2>\n        <div className={styles.columns}>\n          {allPitchNames.map((name, index) => {\n            return <label className={styles.label} key={name}>\n              <Input type=\"radio\" value={index * CENTS_PER_STANDARD_SEMITONE} name=\"transposition\" checked={transposition === index * CENTS_PER_STANDARD_SEMITONE} onChange={({target:{value}}) => {setTransposition(parseInt(value))}} />\n              <div className={styles.labelText}>{name}</div>\n            </label>\n          })}\n        </div>\n      </div>\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>Mode</h2>\n        <div className={styles.columns}>\n          {MODES.map((modeObj, index) => {\n            return <label className={styles.label} key={modeObj.name}>\n              <Input type=\"radio\" value={index} name=\"mode\" checked={mode === index} onChange={({target:{value}}) => {setMode(parseInt(value))}} />\n              <div className={styles.labelText}>{modeObj.name}</div>\n            </label>\n          })}\n        </div>\n      </div>\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>Semitones<Button className={styles.reset} onClick={(evt) => {evt.preventDefault(); setSemitones(STANDARD_SEMITONES)}}>reset</Button><div className={styles.valueText}>{semitones}</div></h2>\n        <label className={classnames(styles.label, styles.wide)}>\n          <Input type=\"range\" min={1} max={CENTS_PER_OCTAVE / HUMAN_CENT_THRESHOLD} value={semitones} onChange={({target: {value}}) => {setSemitones(parseInt(value))}} />\n        </label>\n      </div>\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>A4<Button className={styles.reset} onClick={(evt) => {evt.preventDefault(); setA4(STANDARD_A4)}}>reset</Button><div className={styles.valueText}>{a4}{A4[a4] && ` (${A4[a4]})`}</div></h2>\n        <label className={classnames(styles.label, styles.wide)}>\n          <Input\n            type=\"range\"\n            min={Math.min(...Object.keys(A4))}\n            max={Math.max(...Object.keys(A4))}\n            value={a4}\n            onChange={({target:{value}}) => {setA4(parseInt(value))}}\n          />\n        </label>\n      </div>\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>Organize</h2>\n        <div className={styles.columns}>\n        {pitchSkipOptions.map((num) => {\n          return <label className={styles.label} key={num}>\n            <Input type=\"radio\" value={num} name=\"pitchSkip\" checked={pitchSkip === num} onChange={({target:{value}}) => {setPitchSkip(parseInt(value))}} />\n            <div className={styles.labelText}>{findIncrementLabel(num, semitones)}</div>\n          </label>\n        })}\n        </div>\n      </div>\n\n      <Button\n        className={styles.issue}\n        href=\"https://github.com/danehansen/shepard-wheel/issues\"\n      >submit issue</Button>\n    </form>\n  );\n}\n","import styles from './PitchLabel.module.scss';\nimport classnames from 'classnames';\nimport { DEGREES_IN_CIRCLE } from '../../util/constants';\n\nexport default function PitchLabel({pitchNamesSorted, diameter, chordNamesSorted}) {\n  const semitones = pitchNamesSorted.length;\n\n  return <div className={styles.root}>{pitchNamesSorted.map(function(name, index) {\n    const degrees = DEGREES_IN_CIRCLE / semitones * index;\n    const hasAccidental = name?.length === 2 || name?.length === 3;\n    const isSmall = name?.length > 3;\n    let transform;\n    let transformOrigin;\n    const radius = -0.475;\n    const accidentalRadis = radius * 0.96;\n\n    if (isSmall) {\n      transform = `translate(0%, -50%) rotate(${degrees}deg) translate(0%, 50%) translateY(${diameter * radius}px) rotate(${90}deg)`;\n      transformOrigin = `0 50%`;\n    } else {\n      transformOrigin = `50% 0`;\n      if (hasAccidental) {\n        transform = `translate(-50%, 0) rotate(${degrees}deg) translateY(${diameter * accidentalRadis}px) `;\n      } else {\n        transform = `translate(-50%, 0) rotate(${degrees}deg) translateY(${diameter * radius}px) `;\n      }\n    }\n\n    return <div\n      className={classnames(styles.button, isSmall && styles.small, hasAccidental && styles.hasAccidental, !chordNamesSorted[index] && styles.deemphesized)}\n      key={index}\n      style={{transform, transformOrigin}}\n    >{name}</div>\n  })}</div>\n}\n","import styles from './ChordLabel.module.scss';\nimport {DEGREES_IN_CIRCLE} from '../../util/constants';\n\nexport default function ChordLabel({chordNamesSorted, diameter}) {\n  const semitones = chordNamesSorted.length;\n\n  return <div className={styles.root}>{chordNamesSorted.map(function(name, index) {\n    if (!name) {\n      return null;\n    }\n    const degrees = DEGREES_IN_CIRCLE / semitones * index;\n\n    return <div\n      className={styles.button}\n      key={index}\n      style={{\n        transform: `translate(-50%, -50%) rotate(${degrees}deg) translateY(${diameter * -0.22}px)`,\n      }}\n    >{name}</div>\n  })}</div>\n}\n","import {useRef} from 'react';\nimport {modulo} from '@danehansen/math';\nimport {toDegreeDirection} from '../../util/math';\nimport styles from './TouchPad.module.scss';\nimport {RADIANS_IN_CIRCLE, DEGREES_IN_CIRCLE} from '../../util/constants';\n\nexport default function TouchPad({\n  pitchSequence,\n  callback,\n  diameter,\n}) {\n  const rootNode = useRef();\n\n  function onTouchMove(evt) {\n    anyTouch(evt);\n  }\n\n  function onTouchStart(evt) {\n    anyTouch(evt);\n  }\n\n  function onTouchEnd(evt) {\n    anyTouch(evt);\n  }\n\n  function onTouchCancel(evt) {\n    anyTouch(evt);\n  }\n\n  function anyTouch(evt) {\n    const {targetTouches} = evt;\n\n    if (!targetTouches) {\n      callback([]);\n    }\n    const rect = rootNode.current.getBoundingClientRect();\n    const halfSlice = RADIANS_IN_CIRCLE / pitchSequence.length / 2;\n    const pitches = []\n    for (let i = 0; i < targetTouches.length; i++) {\n      const {clientX, clientY} = targetTouches[i];\n      const x = clientX - rect.x - diameter * 0.5;\n      const y = -(clientY - rect.y - diameter * 0.5);\n      const length = Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));\n\n      if (length <= diameter / 2) {\n        const rad = modulo(Math.atan2(y, x), RADIANS_IN_CIRCLE);\n        const degrees = toDegreeDirection(rad - halfSlice);\n        const index = Math.floor(degrees / DEGREES_IN_CIRCLE * pitchSequence.length);\n        pitches.push(pitchSequence[index]);\n      }\n    }\n    callback(pitches);\n  }\n\n  return <div\n    ref={rootNode}\n    className={styles.root}\n    onTouchMove={onTouchMove}\n    onTouchStart={onTouchStart}\n    onTouchEnd={onTouchEnd}\n    onTouchCancel={onTouchCancel}\n  />;\n}\n","import {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function FirstTouch({component: Component = 'div', callback, ...rest}) {\n  const [hasCalledCallback, setHasCalledCallback] = useState(false);\n\n  function onClick() {\n    setHasCalledCallback(true);\n    callback();\n  }\n\n  return <Component onClick={hasCalledCallback ? null : onClick} {...rest}></Component>;\n}\n\nFirstTouch.propTypes = {\n  component: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  callback: PropTypes.func.isRequired,\n};\n","export default function findPitchSkipOptions(semitones) {\n  const increments = [1];\n  for(let i = 2; i < semitones; i++) {\n    if (findIncrementsOfSemitone(semitones, i)) {\n      increments.push(i);\n    }\n  }\n  return increments;\n}\n\nfunction findIncrementsOfSemitone(semitones, increment) {\n  const semitoneIndexes = [];\n  for(let i = 0; i < semitones; i++) {\n    const semitoneIndex = (i * increment) % semitones;\n    if (semitoneIndexes[semitoneIndex] !== undefined) {\n      return false;\n    } else {\n      semitoneIndexes[semitoneIndex] = semitoneIndex;\n    }\n  }\n  return semitoneIndexes;\n}\n","import {modulo} from '@danehansen/math';\nimport {MODES} from './constants';\nimport {STANDARD_SEMITONES, CENTS_PER_STANDARD_SEMITONE} from './music';\n\nconst PITCH_NAMES = ['A', ['A♯','B♭'], 'B', 'C', ['C♯','D♭'], 'D', ['D♯','E♭'], 'E', 'F', ['F♯','G♭'], 'G', ['G♯','A♭']];\n\nfunction m(num) {\n  return modulo(num, STANDARD_SEMITONES);\n}\n\nexport default function findAllPitchNames(transposition, mode) {\n  const {useModeForNaming} = MODES[mode];\n  if (typeof useModeForNaming === 'number') {\n    return findAllPitchNames(transposition, useModeForNaming);\n  }\n\n  function makeArrayWithNakedLettersInKeySpots(array) {\n    const letters = ['A', 'B', 'C', 'D', 'E', 'F', 'G'];\n    const {chords} = MODES[mode];\n    let lastLetterIndex = 0;\n    for (let i = 0; i < STANDARD_SEMITONES; i++) {\n      const chordIndex = m(i - transposition / CENTS_PER_STANDARD_SEMITONE);\n      const chord = chords[chordIndex];\n      if (chord) {\n        array[i] = letters[lastLetterIndex];\n        lastLetterIndex++;\n      }\n    }\n    return array;\n  }\n\n  function addAccidentalsToKeySpots(array) {\n    for (let i = 0; i < STANDARD_SEMITONES; i++) {\n      const pitchName = PITCH_NAMES[i];\n      const lastPitchName = PITCH_NAMES[m(i - 1)]\n      const nextPitchName = PITCH_NAMES[m(i + 1)]\n      if (array[i]) {\n        if (!Array.isArray(pitchName)) {\n          if (lastPitchName === array[i]) {\n            array[i] = `${array[i]}♯`;\n          } else if (nextPitchName === array[i]) {\n            array[i] = `${array[i]}♭`;\n          }\n        } else {\n          const index = pitchName.findIndex((node) => node.indexOf(array[i]) >= 0)\n          array[i] = pitchName[index];\n        }\n      }\n    }\n  }\n\n  function fillInEmptySpots(array) {\n    const hasFlats = array.join('').indexOf('♭') >= 0;\n    const hasSharps = array.join('').indexOf('♯') >= 0;\n    for (let i = 0; i < 12; i++) {\n      if (array[i]) {\n        continue;\n      }\n      const pitchName = PITCH_NAMES[i];\n      if (Array.isArray(pitchName)) {\n        if (hasFlats && !hasSharps) {\n          array[i] = pitchName[1];\n        } else if (!hasFlats && hasSharps) {\n          array[i] = pitchName[0];\n        } else {\n          // defaulting to sharps for C major\n          array[i] = pitchName[0];\n        }\n      } else {\n        array[i] = pitchName;\n      }\n    }\n  }\n\n  const allNames = [];\n  makeArrayWithNakedLettersInKeySpots(allNames);\n  addAccidentalsToKeySpots(allNames);\n  fillInEmptySpots(allNames);\n  return allNames;\n}\n","import {round} from '@danehansen/math';\nimport {STANDARD_SEMITONES, CENTS_PER_STANDARD_SEMITONE} from './music';\n\nexport default function findPitchNames(semitones, transposition, allPitchNames) {\n  return [...Array(semitones).keys()].map(function(i) {\n    const nameIndexFloat = (i / semitones * STANDARD_SEMITONES + (transposition / CENTS_PER_STANDARD_SEMITONE)) % STANDARD_SEMITONES;\n    const nameIndex = Math.floor(nameIndexFloat);\n    const prefix = allPitchNames[nameIndex];\n    const remainder = nameIndexFloat % 1;\n    if (!remainder) {\n      return prefix;\n    }\n    return `${prefix}${String(round(remainder, 0.001)).slice(1,5)}`;\n  })\n}\n","import {HUMAN_MIN_FREQ, STANDARD_SEMITONES, CENTS_PER_STANDARD_SEMITONE, transposeFrequency} from './music';\n\nexport default function findBaseFrequencies(semitones, rootFrequency) {\n  const frequencies = [];\n  for (let i = 0; i < semitones; i++) {\n    let frequency = transposeFrequency(rootFrequency, i * CENTS_PER_STANDARD_SEMITONE * (STANDARD_SEMITONES / semitones));\n    while(frequency / 2 > HUMAN_MIN_FREQ) {\n      frequency /= 2;\n    }\n    frequencies.push(frequency);\n  }\n  return frequencies;\n}\n","export default function findPitchSequence(semitones, pitchSkip) {\n  const sequence = []\n  for (let i = 0; i < semitones; i++) {\n    sequence.push((i * pitchSkip) % semitones);\n  }\n  return sequence;\n}\n","export default function sortPitchNames(pitchNames, pitchSkip) {\n  const sorted = pitchNames.map(function(pitchName, index) {\n    return pitchNames[(index * pitchSkip) % pitchNames.length];\n  })\n  return sorted;\n}\n","import {HUMAN_MAX_FREQ} from './music';\nimport {EQ_FREQUENCIES} from './constants';\n\nlet frequencies;\nlet currentOscillators;\nlet audioContext;\nlet gainNode;\nlet headNode;\n\nexport function initializaAudio(baseFrequencies, eq) {\n  if (audioContext) {\n    audioContext.close();\n  }\n  audioContext = new (window.AudioContext || window.webkitAudioContext)();\n  gainNode = audioContext.createGain();\n  gainNode.connect(audioContext.destination);\n\n  // TODO: figure out this gain value\n  gainNode.gain.value = 0.1;\n\n  headNode = gainNode;\n  for(let i = 0; i < eq.length; i++) {\n    const eqNode = audioContext.createBiquadFilter();\n\n    if (i === 0) {\n      eqNode.type = 'lowshelf'\n    } else if (i === eq.length - 1) {\n      eqNode.type = 'highshelf'\n    } else {\n      eqNode.type = 'peaking'\n      // eqNode.Q.value = 1; // 0.0001 to 1000\n    }\n    eqNode.frequency.value = EQ_FREQUENCIES[i];\n    eqNode.gain.value = eq[i] * 40;\n    eqNode.connect(headNode)\n    headNode = eqNode;\n  }\n  gainNode.connect(headNode);\n\n  currentOscillators = [];\n  frequencies = baseFrequencies.map(function(frequency) {\n    return findAudibleOctaves(frequency);\n  })\n}\n\nfunction findAudibleOctaves(frequency) {\n  const frequencies = [];\n  while(frequency < HUMAN_MAX_FREQ) {\n    frequencies.push(frequency);\n    frequency *= 2;\n  }\n  return frequencies;\n}\n\nfunction startNote(index, type) {\n  const oscillators = [];\n  currentOscillators[index] = oscillators;\n  for(const frequency of frequencies[index]) {\n    const oscillatorNode = audioContext.createOscillator();\n    oscillatorNode.frequency.value = frequency;\n    oscillatorNode.type = type;\n    oscillatorNode.connect(headNode);\n    oscillatorNode.start();\n    oscillators.push(oscillatorNode);\n  }\n}\n\nfunction stopNote(index) {\n  for(const oscillator of currentOscillators[index]) {\n    oscillator.stop();\n  }\n  currentOscillators[index] = null;\n}\n\nexport function toggleNote(note, isPlaying, type) {\n  if (!currentOscillators) {\n    return;\n  }\n  if (isPlaying && !currentOscillators[note]) {\n    startNote(note, type);\n  } else if (!isPlaying && currentOscillators[note]) {\n    stopNote(note);\n  }\n}\n","import {useState, useEffect} from 'react';\n\nconst WIN = typeof window !== 'undefined' ? window : null;\n\nconst PLACEHOLDER_WINDOW = {\n  addEventListener() {},\n  innerHeight: 0,\n  innerWidth: 0,\n  removeEventListener() {},\n};\n\nexport function useViewportDimensions(win = WIN || PLACEHOLDER_WINDOW) {\n  const [innerHeight, setInnerHeight] = useState(win.innerHeight);\n  const [innerWidth, setInnerWidth] = useState(win.innerWidth);\n\n  useEffect(() => {\n    function onResize() {\n      setInnerHeight(win.innerHeight);\n      setInnerWidth(win.innerWidth);\n    }\n\n    win.addEventListener('resize', onResize);\n    return () => {\n      win.removeEventListener('resize', onResize);\n    }\n  }, [win]);\n\n  return [innerWidth, innerHeight];\n}\n","import styles from './App.module.scss';\nimport Display from './Display/Display';\nimport Menu from './Menu/Menu';\nimport PitchLabel from './PitchLabel/PitchLabel';\nimport ChordLabel from './ChordLabel/ChordLabel';\nimport TouchPad from './TouchPad/TouchPad';\nimport Button from './Button/Button';\nimport FirstTouch from './FirstTouch/FirstTouch';\nimport {OSCILLATOR_TYPES, DEFAULT_TRANSPOSITION, EQ_FREQUENCIES} from '../util/constants';\nimport {STANDARD_A4, STANDARD_SEMITONES, transposeFrequency} from '../util/music';\nimport {useState, useEffect} from 'react';\nimport findPitchSkipOptions from '../util/findPitchSkipOptions';\nimport findAllPitchNames from '../util/findAllPitchNames';\nimport findPitchNames from '../util/findPitchNames';\nimport findBaseFrequencies from '../util/findBaseFrequencies';\nimport findPitchSequence from '../util/findPitchSequence';\nimport findChordNames from '../util/findChordNames';\nimport sortPitchNames from '../util/sortPitchNames';\nimport {initializaAudio, toggleNote} from '../util/shepardTone';\nimport queryString from 'query-string';\nimport {isEqual} from 'lodash';\nimport {useViewportDimensions} from '../util/hooks';\n// import {random} from '@danehansen/math';\n\nexport default function App() {\n  const urlParams = queryString.parse(window.location.search, {parseNumbers: true, arrayFormat: 'comma'});\n  function useURLParams(key, value, def) {\n    useEffect(() => {\n      function changeParams() {\n        window.history.replaceState(null, null, `${window.location.origin}${window.location.pathname}?${queryString.stringify(urlParams, {arrayFormat: 'comma'})}`);\n      }\n\n      if (!isEqual(urlParams[key], value)) {\n        if (isEqual(def, value) && urlParams[key] !== undefined) {\n          delete urlParams[key];\n          changeParams();\n        } else if (!isEqual(def, value)) {\n          urlParams[key] = value;\n          changeParams();\n        }\n      }\n    }, [value, key, def]);\n  }\n\n  const [a4, setA4] = useState(urlParams.a4 || STANDARD_A4);\n  useURLParams('a4', a4, STANDARD_A4);\n\n  const [oscillator, setOscillator] = useState(urlParams.oscillator || OSCILLATOR_TYPES.SINE);\n  useURLParams('oscillator', oscillator, OSCILLATOR_TYPES.SINE);\n\n  const [semitones, setSemitones] = useState(urlParams.semitones || STANDARD_SEMITONES);\n  useURLParams('semitones', semitones, STANDARD_SEMITONES);\n\n  const [transposition, setTransposition] = useState(urlParams.transposition !== undefined ? urlParams.transposition : DEFAULT_TRANSPOSITION);\n  useURLParams('transposition', transposition, DEFAULT_TRANSPOSITION);\n\n  const [mode, setMode] = useState(urlParams.mode || 0);\n  useURLParams('mode', mode, 0);\n\n  const [allPitchNames, setAllPitchNames] = useState(findAllPitchNames(transposition, mode));\n  useEffect(() => {\n    setAllPitchNames(findAllPitchNames(transposition, mode));\n  }, [mode, transposition]);\n\n  const [pitchNames, setPitchNames] = useState(findPitchNames(semitones, transposition, allPitchNames));\n  useEffect(() => {\n    setPitchNames(findPitchNames(semitones, transposition, allPitchNames));\n  }, [semitones, transposition, allPitchNames]);\n\n  const [pitchSkipOptions, setPitchSkipOptions] = useState(findPitchSkipOptions(semitones));\n  useEffect(() => {\n    setPitchSkipOptions(findPitchSkipOptions(semitones));\n  }, [semitones]);\n\n  const _ps = urlParams.pitchSkip ? urlParams.pitchSkip : pitchSkipOptions[0];\n  const [pitchSkip, setPitchSkip] = useState(_ps);\n  useEffect(() => {\n    if (pitchSkipOptions.indexOf(pitchSkip) < 0) {\n      setPitchSkip(pitchSkipOptions[0]);\n    }\n  }, [pitchSkipOptions, pitchSkip]);\n  useURLParams('pitchSkip', pitchSkip, _ps);\n\n  const _eq = [];\n  for (let i = 0; i < EQ_FREQUENCIES.length; i++) {\n    _eq.push(0);\n  }\n\n  const [eq, setEq] = useState(urlParams.eq || EQ_FREQUENCIES.map(() => 0));\n  useURLParams('eq', eq, EQ_FREQUENCIES.map(() => 0));\n\n  const [rootFrequency, setRootFrequency] = useState(transposeFrequency(a4, transposition));\n  useEffect(() => {\n    setRootFrequency(transposeFrequency(a4, transposition));\n  }, [transposition, a4]);\n\n  const [baseFrequencies, setBaseFrequencies] = useState(findBaseFrequencies(semitones, rootFrequency));\n  useEffect(() => {\n    setBaseFrequencies(findBaseFrequencies(semitones, rootFrequency));\n  }, [semitones, rootFrequency]);\n\n  const [pitchSequence, setPitchSequence] = useState(findPitchSequence(semitones, pitchSkip));\n  useEffect(() => {\n    setPitchSequence(findPitchSequence(semitones, pitchSkip));\n  }, [semitones, pitchSkip]);\n\n  const [pitchNamesSorted, setPitchNamesSorted] = useState(sortPitchNames(pitchNames, pitchSkip));\n  useEffect(() => {\n    setPitchNamesSorted(sortPitchNames(pitchNames, pitchSkip));\n  }, [pitchNames, pitchSkip]);\n\n  const [chordNamesSorted, setChordNamesSorted] = useState([]);\n  useEffect(() => {\n    setChordNamesSorted(findChordNames(semitones, mode, pitchSkip));\n  }, [semitones, pitchSkip, mode]);\n\n  const [activePitches, setActivePitches] = useState([]);\n\n  const diameter = Math.min(...useViewportDimensions());\n\n  const [isMenuOpen, setMenuOpen] = useState(false);\n  function onMenuButtonClick() {\n    if (isMenuOpen) {\n      initializaAudio(baseFrequencies, eq);\n    }\n    setMenuOpen(!isMenuOpen);\n  }\n\n  function onTouchCallback(pitches) {\n\n    const randomPitches = [];\n    // if (pitches.length) {\n    //   const numRandomPitches = random(1, 3, true);\n    //   for (let i = 0; i < numRandomPitches; i++) {\n    //     let randomPitch;\n    //     do {\n    //       randomPitch = random(0, 12, true);\n    //     } while (pitches.indexOf(randomPitch) >= 0)\n    //     randomPitches.push(randomPitch);\n    //   }\n    // }\n\n    const newPitches = [...pitches, ...randomPitches]\n\n    for(let i = 0; i < semitones; i++) {\n      if (newPitches.indexOf(i) >= 0) {\n        toggleNote(i, true, oscillator)\n      } else {\n        toggleNote(i, false, oscillator)\n      }\n    }\n\n    setActivePitches(newPitches);\n  }\n\n  return (\n    <FirstTouch className={styles.root} callback={ initializaAudio.bind(null, baseFrequencies, eq)}>\n      <div className={styles.contentHolder}>\n      </div>\n      <div className={styles.wheelHolder} style={{width: `${diameter}px`, height: `${diameter}px`}}>\n        <Display\n          activePitches={activePitches}\n          baseFrequencies={baseFrequencies}\n          diameter={diameter}\n          pitchSequence={pitchSequence}\n          mode={mode}\n        />\n        <PitchLabel pitchNamesSorted={pitchNamesSorted} diameter={diameter} chordNamesSorted={chordNamesSorted} />\n        <ChordLabel chordNamesSorted={chordNamesSorted} diameter={diameter} />\n        <TouchPad\n          callback={onTouchCallback}\n          diameter={diameter}\n          pitchSequence={pitchSequence}\n        />\n      </div>\n\n      {isMenuOpen && <div className={styles.menuHolder}><Menu\n        a4={a4}\n        setA4={setA4}\n        allPitchNames={allPitchNames}\n        eq={eq}\n        setEq={setEq}\n        mode={mode}\n        setMode={setMode}\n        oscillator={oscillator}\n        setOscillator={setOscillator}\n        pitchSkip={pitchSkip}\n        setPitchSkip={setPitchSkip}\n        semitones={semitones}\n        setSemitones={setSemitones}\n        transposition={transposition}\n        setTransposition={setTransposition}\n        pitchSkipOptions={pitchSkipOptions}\n      /></div>}\n\n      <Button className={styles.menuButton} onClick={onMenuButtonClick}>{isMenuOpen ? 'x' : 'menu'}</Button>\n    </FirstTouch>\n  );\n}\n","import {MODES} from './constants';\n\nexport default function findChordNames(semitones, modeIndex, pitchSkip) {\n  const twelveChordsInMode = [...MODES[modeIndex].chords];\n  const semitonesChordsInMode = [];\n  for (let i = 0; i < semitones; i++) {\n    const index = i / semitones * twelveChordsInMode.length;\n    semitonesChordsInMode.push(twelveChordsInMode[index] || null);\n  }\n\n  const semitonesChordsInModeSorted = semitonesChordsInMode.map((chord, i) => {\n    const index = (i * pitchSkip) % semitones;\n    return semitonesChordsInMode[index];\n  });\n\n  return semitonesChordsInModeSorted;\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/reset.module.scss';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}