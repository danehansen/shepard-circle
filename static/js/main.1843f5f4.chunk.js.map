{"version":3,"sources":["App/Menu/Menu.module.scss","App/Label/Label.module.scss","App/TouchPad/TouchPad.module.scss","App/Display/Display.module.scss","constants.js","util/findIncrementOptions.js","util/findPitchNames.js","App/Menu/Menu.js","App/ResizeListener/ResizeListener.js","util/math.js","util/convertIndexToRadians.js","App/Label/Label.js","util/convertRadiansToIndex.js","App/TouchPad/TouchPad.js","App/Display/canvas.js","App/Display/Display.js","util/findInterval.js","util/shepardTone.js","App/App.js","reportWebVitals.js","index.js","App/App.module.scss"],"names":["module","exports","MAX_FREQ","OSCILLATOR_TYPES","TEMPERMENT_TYPES","semitones","increments","i","findIncrementsOfSemitone","push","increment","Array","keys","semitoneIndexes","semitoneIndex","undefined","map","key","String","fromCharCode","parseInt","toUpperCase","shift","findIncrementLabel","str","Menu","a4","temperment","minFreq","maxFreq","layoutIncrement","oscillator","rootPitch","setMinFreq","setMaxFreq","setA4","setOscillator","setTemperment","setSemitones","setRootPitch","setLayoutIncrement","onOscillatorChange","value","target","pitchNames","findPitchNames","className","styles","root","property","title","label","input","type","checked","onChange","labelText","name","index","findIncrementOptions","num","min","max","step","ResizeListener","props","_onResize","win","setState","innerHeight","innerWidth","state","addEventListener","this","removeEventListener","children","React","Component","defaultProps","window","toRadianDirection","degrees","radians","Math","PI","toRadians","circ","offset","modulo","convertIndexToRadians","Label","rad","x","cos","y","sin","classnames","button","length","small","style","left","top","convertRadiansToIndex","CIRC","RADIANS_IN_SLICE","DEGREES_IN_SLICE","lowerLimit","upperLimit","adjustedRad","TouchPad","callback","diameter","rootNode","useRef","anyTouch","evt","targetTouches","rect","current","getBoundingClientRect","pitches","clientX","clientY","sqrt","pow","pitch","atan2","ref","onTouchMove","onTouchStart","onTouchEnd","onTouchCancel","rotate","angle","ctx","func","dx","dy","call","Canvas","element","document","createElement","width","offsetWidth","height","offsetHeight","devicePixelRatio","resize","isMounted","_element","parentNode","_width","_height","_devicePixelRatio","_imageDataHandler","_context","scale","arc","radius","startAngle","endAngle","anticlockwise","beginPath","bezierCurveTo","clearRect","clip","closePath","drawImage","source","sx","sy","sWidth","sHeight","dWidth","dHeight","isCanvas","_drawImageDest","fill","fillRect","lineTo","moveTo","quadraticCurveTo","stroke","resetTransform","restore","transform","save","setRotate","setTransform","xScale","xSkew","ySkew","yScale","setTranslate","translate","createImageData","imageDataOrWidth","getContext","fillStyle","globalCompositeOperation","globalAlpha","lineWidth","strokeStyle","points","lastPoint","nextPoint","path","Path2D","avgX","avgY","Display","_rootNode","createRef","_root","_buffer","_drawSlices","prevProps","prevState","_connectPitches","activePitches","colors","buttonSlice","directionalColor","findColors","unshift","pop","color","isActive","indexOf","fillSlice","pitchA","j","connectPitches","canvas","outerRadius","holeRadius","center","halfSlice","newAngle","direction","colorSlice","cosR","cosG","cosB","r","round","g","b","pitchB","radianA","cosA","sinA","radianB","pointA","pointB","interval","a","findInterval","xDiff","yDiff","diff","radiusA","radiusB","centerX","centerY","frequencies","currentOscillators","audioCtx","gainNode","initializaAudio","close","AudioContext","webkitAudioContext","createGain","connect","destination","gain","findFrequencies","distance","lowestFrequency","currentFrequency","toggleNote","note","isPlaying","oscillators","frequency","createOscillator","start","startNote","stop","stopNote","App","useState","isMenuOpen","setMenuOpen","hasInitializedAudio","setHasInitializedAudio","setActivePitches","onTouchCallback","onClick","contentHolder","smallest","wheelHolder","menuHolder","menuButton","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1843f5f4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Menu_root__3QA5H\",\"label\":\"Menu_label__3hKMT\",\"labelText\":\"Menu_labelText__2uoMn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Label_root__iHLA-\",\"button\":\"Label_button__opkRi\",\"small\":\"Label_small__FYd4m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TouchPad_root__22wzt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Display_root__ig8ld\"};","export const MIN_FREQ = 20;\nexport const MAX_FREQ = 20000;\n\nexport const OSCILLATOR_TYPES = {\n  SINE: 'sine',\n  SQUARE: 'square',\n  SAWTOOTH: 'sawtooth',\n  TRIANGLE: 'triangle',\n};\n\nexport const TEMPERMENT_TYPES = {\n  EQUAL: 'equal',\n  JUST: 'just',\n  MEANTONE: 'meantone',\n  PYTHAGOREAN: 'pythagorean',\n};\n","export default function(semitones) {\n  const increments = [];\n  for(let i = 1; i < semitones; i++) {\n    if (findIncrementsOfSemitone(semitones, i)) {\n      increments.push(i);\n    }\n  }\n  return increments;\n}\n\nfunction findIncrementsOfSemitone(semitones, increment) {\n  const allSemitones = [...Array(semitones).keys()];\n  const semitoneIndexes = [];\n  for(let i = 0; i < semitones; i++) {\n    const semitoneIndex = (i * increment) % semitones;\n    if (semitoneIndexes[semitoneIndex] !== undefined) {\n      return false;\n    } else {\n      semitoneIndexes[semitoneIndex] = semitoneIndex;\n    }\n  }\n  return semitoneIndexes;\n}\n","export default function(semitones) {\n  switch(semitones) {\n    case 1:\n      return ['C'];\n    case 2:\n      return ['C', 'F#/Gb'];\n    case 3:\n      return ['C', 'E', 'G#/Ab'];\n    case 4:\n      return ['C', 'D#/Eb', 'F#/Gb', 'A'];\n    case 6:\n      return ['A#/Bb', 'C', 'D', 'E', 'F#/Gb','G#/Ab'];\n    case 12:\n      return ['A', 'A#/Bb', 'B', 'C', 'C#/Db', 'D', 'D#/Eb', 'E', 'F', 'F#/Gb', 'G', 'G#/Ab'];\n    default:\n      if (semitones <= 26) {\n        return [...Array(semitones).keys()].map(function(key){return String.fromCharCode(97 + parseInt(key)).toUpperCase()});\n\n      }\n      const keys = [...Array(semitones + 1).keys()];\n      keys.shift();\n      return keys;\n  }\n}\n","import styles from './Menu.module.scss';\nimport {MIN_FREQ, MAX_FREQ, TEMPERMENT_TYPES, OSCILLATOR_TYPES} from '../../constants';\nimport findIncrementOptions from '../../../src/util/findIncrementOptions';\nimport findPitchNames from '../../../src/util/findPitchNames';\n\nfunction findIncrementLabel(increment, semitones) {\n  let str = String(increment);\n  if (increment === 1) {\n    str += ` (chromatic)`\n  } else if (increment === semitones - 1) {\n    str += ` (reverse chromatic)`\n  } else if (semitones === 12 && increment === 7) {\n    str += ` (circle of fifths)`\n  }\n  return str;\n}\n\nexport default function Menu({ a4, temperment, semitones, minFreq, maxFreq, layoutIncrement, oscillator, rootPitch, setMinFreq, setMaxFreq, setA4, setTemperment, setOscillator, setSemitones, setRootPitch, setLayoutIncrement }) {\n  function onTempermentChange({ target: { value }}) {\n    setTemperment(value);\n  }\n\n  function onOscillatorChange({ target: { value }}) {\n    setOscillator(value);\n  }\n\n  const pitchNames = findPitchNames(semitones);\n\n  return (\n    <form className={styles.root}>\n      <div className={styles.property}>\n        <h2 className={styles.title}>Oscillator</h2>\n        <label className={styles.label}>\n          <input className={styles.input} type=\"radio\" checked={oscillator === OSCILLATOR_TYPES.SINE} value={OSCILLATOR_TYPES.SINE} onChange={onOscillatorChange} />\n          <div className={styles.labelText}>{OSCILLATOR_TYPES.SINE}</div>\n        </label>\n        <label className={styles.label}>\n          <input className={styles.input} type=\"radio\" checked={oscillator === OSCILLATOR_TYPES.SQUARE} value={OSCILLATOR_TYPES.SQUARE} onChange={onOscillatorChange} />\n          <div className={styles.labelText}>{OSCILLATOR_TYPES.SQUARE}</div>\n        </label>\n        <label className={styles.label}>\n          <input className={styles.input} type=\"radio\" checked={oscillator === OSCILLATOR_TYPES.SAWTOOTH} value={OSCILLATOR_TYPES.SAWTOOTH} onChange={onOscillatorChange} />\n          <div className={styles.labelText}>{OSCILLATOR_TYPES.SAWTOOTH}</div>\n        </label>\n        <label className={styles.label}>\n          <input className={styles.input} type=\"radio\" checked={oscillator === OSCILLATOR_TYPES.TRIANGLE} value={OSCILLATOR_TYPES.TRIANGLE} onChange={onOscillatorChange} />\n          <div className={styles.labelText}>{OSCILLATOR_TYPES.TRIANGLE}</div>\n        </label>\n      </div>\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>Root Pitch</h2>\n        {pitchNames.map(function(name, index) {\n          return <label className={styles.label} key={name}>\n            <input className={styles.input} type=\"radio\" value={index} name=\"rootPitch\" checked={rootPitch === index} onChange={function({target:{value}}){setRootPitch(parseInt(value))}} />\n            <div className={styles.labelText}>{name}</div>\n          </label>\n        })}\n      </div>\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>Layout Increment</h2>\n        {findIncrementOptions(semitones).map(function(num) {\n          return <label className={styles.label} key={num}>\n            <input className={styles.input} type=\"radio\" value={num} name=\"increment\" checked={layoutIncrement === num} onChange={function({target:{value}}){setLayoutIncrement(parseInt(value))}} />\n            <div className={styles.labelText}>{findIncrementLabel(num, semitones)}</div>\n          </label>\n        })}\n      </div>\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>Frequencies</h2>\n        <label className={styles.label}>\n          <input\n            className={styles.input}\n            type=\"number\"\n            min={MIN_FREQ}\n            max={MAX_FREQ}\n            value={minFreq}\n            step=\"1\"\n            onChange={function({target:{value}}){setMinFreq(parseInt(value))}}\n          />\n          <div className={styles.labelText}>Minimum Frequency</div>\n        </label>\n        <label className={styles.label}>\n          <input\n            className={styles.input}\n            type=\"number\"\n            min={MIN_FREQ}\n            max={MAX_FREQ}\n            value={maxFreq}\n            step=\"1\"\n            onChange={function({target:{value}}){setMaxFreq(parseInt(value))}}\n          />\n          <div className={styles.labelText}>Max Frequency</div>\n        </label>\n      </div>\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>Semitones</h2>\n        <label className={styles.label}>\n          <input className={styles.input} type=\"number\" min={1} max={100} value={semitones} step=\"1\" onChange={function({target: {value}}){setSemitones(parseInt(value))}} />\n        </label>\n      </div>\n\n      <div className={styles.property}>\n        <h2 className={styles.title}>A4</h2>\n        <label className={styles.label}>\n          <input\n            className={styles.input}\n            type=\"number\"\n            min={MIN_FREQ}\n            max={MAX_FREQ}\n            value={a4}\n            step=\"1\"\n            onChange={function({target:{value}}){setA4(parseInt(value))}}\n          />\n        </label>\n      </div>\n\n      {/*<div className={styles.property}>\n        <h2 className={styles.title}>Temperment</h2>\n        <label className={styles.label}>\n          <input className={styles.input} type=\"radio\" disabled checked={temperment === TEMPERMENT_TYPES.EQUAL} value={TEMPERMENT_TYPES.EQUAL} onChange={onTempermentChange} />\n          <div className={styles.labelText}>{TEMPERMENT_TYPES.EQUAL}</div>\n        </label>\n        <label className={styles.label}>\n          <input className={styles.input} type=\"radio\" disabled checked={temperment === TEMPERMENT_TYPES.JUST} value={TEMPERMENT_TYPES.JUST} onChange={onTempermentChange} />\n          <div className={styles.labelText}>{TEMPERMENT_TYPES.JUST}</div>\n        </label>\n        <label className={styles.label}>\n          <input className={styles.input} type=\"radio\" disabled checked={temperment === TEMPERMENT_TYPES.MEANTONE} value={TEMPERMENT_TYPES.MEANTONE} onChange={onTempermentChange} />\n          <div className={styles.labelText}>{TEMPERMENT_TYPES.MEANTONE}</div>\n        </label>\n        <label className={styles.label}>\n          <input className={styles.input} type=\"radio\" disabled checked={temperment === TEMPERMENT_TYPES.PYTHAGOREAN} value={TEMPERMENT_TYPES.PYTHAGOREAN} onChange={onTempermentChange} />\n          <div className={styles.labelText}>{TEMPERMENT_TYPES.PYTHAGOREAN}</div>\n        </label>\n      </div>*/}\n    </form>\n  );\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst PLACEHOLDER_WINDOW = {\n  addEventListener() {},\n  innerHeight: 0,\n  innerWidth: 0,\n  removeEventListener() {},\n};\n\nexport default class ResizeListener extends React.Component {\n  static propTypes = {\n    children: PropTypes.func.isRequired,\n    win: PropTypes.object,\n  };\n\n  static defaultProps = {\n    win: typeof window !== 'undefined' ? window : PLACEHOLDER_WINDOW,\n  };\n\n  constructor(props) {\n    super(props);\n    const { win } = props;\n    this.state = {\n      innerHeight: win.innerHeight,\n      innerWidth: win.innerWidth,\n    };\n    win.addEventListener('resize', this._onResize);\n  }\n\n  componentWillUnmount() {\n    const { win } = this.props;\n    win.removeEventListener('resize', this._onResize);\n  }\n\n  _onResize = () => {\n    const { win } = this.props;\n    this.setState({\n      innerHeight: win.innerHeight,\n      innerWidth: win.innerWidth,\n    });\n  };\n\n  render() {\n    const { innerHeight, innerWidth } = this.state;\n    const { children } = this.props;\n    return children(innerWidth, innerHeight);\n  }\n}\n","import {modulo} from '@danehansen/math';\n\nexport function toRadians(degrees) {\n  return degrees * Math.PI / 180;\n}\n\nexport function toDegrees(radians) {\n  return radians * 180 / Math.PI;\n}\n\nexport function toRadianDirection(degrees) {\n  const radians = toRadians(-degrees);\n  const circ = Math.PI * 2;\n  const offset = radians + Math.PI * 0.5;\n  return modulo(offset, circ);\n}\n\nexport function toDegreeDirection(radians) {\n  const degrees = toDegrees(-radians);\n  return modulo(degrees + 90, 360);\n}\n","import { toRadianDirection } from './math';\n\nexport default function convertIndexToRadians(index, semitones, rootPitch, layoutIncrement) {\n  const degreesInSlice = 360 / semitones;\n  const degrees = index * layoutIncrement / semitones * 360;\n  const degreesOffset = degrees - (degreesInSlice * rootPitch *  layoutIncrement)\n  const radians = toRadianDirection(degreesOffset);\n  return radians;\n}\n","import styles from './Label.module.scss';\nimport classnames from 'classnames';\nimport findPitchNames from '../../util/findPitchNames';\nimport convertIndexToRadians from '../../util/convertIndexToRadians';\n\nexport default function Label({rootPitch, semitones, layoutIncrement}) {\n  const pitchNames = findPitchNames(semitones);\n  const radius = 35;\n  return <div className={styles.root}>\n  {pitchNames.map(function(name, index) {\n    const rad = convertIndexToRadians(index, semitones, rootPitch, layoutIncrement);\n    const x = Math.cos(rad);\n    const y = -Math.sin(rad);\n    return <div\n      className={classnames(styles.button, name.length > 1 && styles.small)}\n      key={name}\n      style={{\n        left: `${(x * radius + 50)}%`,\n        top: `${(y * radius + 50)}%`,\n      }}\n    >{name}</div>\n  })}</div>\n}\n","import { modulo, round } from '@danehansen/math';\nimport convertIndexToRadians from './convertIndexToRadians';\nimport {toRadianDirection} from './math';\n\nexport default function convertRadiansToIndex(rad, semitones, rootPitch, layoutIncrement) {\n  const ROUND = 0.001;\n  const CIRC = Math.PI * 2;\n  const RADIANS_IN_SLICE = CIRC / semitones;\n  const DEGREES_IN_SLICE = 360 / semitones;\n\n  for(let i = 0; i < semitones; i++) {\n    const degrees = modulo(DEGREES_IN_SLICE * (i - rootPitch) * layoutIncrement, 360);\n    const radians = toRadianDirection(degrees);\n    const lowerLimit  = radians - RADIANS_IN_SLICE / 2;\n    const upperLimit = radians + RADIANS_IN_SLICE / 2;\n    let adjustedRad = rad;\n\n    if (lowerLimit <= adjustedRad && upperLimit >= adjustedRad) {\n      return i;\n    }\n\n    if (lowerLimit < 0 && upperLimit > 0) {\n      adjustedRad -= CIRC;\n    } else if (lowerLimit < CIRC && upperLimit > CIRC) {\n      adjustedRad += CIRC;\n    }\n\n    if (lowerLimit <= adjustedRad && upperLimit >= adjustedRad) {\n      return i;\n    }\n  }\n}\n","import {useRef} from 'react';\nimport {round, modulo} from '@danehansen/math';\nimport styles from './TouchPad.module.scss';\nimport convertRadiansToIndex from '../../util/convertRadiansToIndex';\n\nexport default function TouchPad({className, callback, semitones, diameter, layoutIncrement, rootPitch}) {\n  const rootNode = useRef(null);\n\n  function onTouchMove(evt) {\n    // console.log('onTouchMove');\n    anyTouch(evt);\n  }\n\n  function onTouchStart(evt) {\n    // console.log('onTouchStart');\n    anyTouch(evt);\n  }\n\n  function onTouchEnd(evt) {\n    const {targetTouches} = evt;\n    // console.log('onTouchEnd', targetTouches[0]);\n    anyTouch(evt);\n  }\n\n  function onTouchCancel(evt) {\n    // console.log('onTouchCancel');\n    anyTouch(evt);\n  }\n\n  function anyTouch(evt) {\n    const {targetTouches} = evt;\n\n    if (!targetTouches) {\n      callback([]);\n    }\n    const rect = rootNode.current.getBoundingClientRect();\n    const pitches = []\n    for (let i = 0; i < targetTouches.length; i++) {\n      const {clientX, clientY} = targetTouches[i];\n      const x = clientX - rect.x - diameter * 0.5;\n      const y = -(clientY - rect.y - diameter * 0.5);\n\n      const length = Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));\n      if (length <= diameter / 2) {\n        const rad = modulo(Math.atan2(y, x), Math.PI * 2);\n        const pitch = convertRadiansToIndex(rad, semitones, rootPitch, layoutIncrement);\n        pitches.push(pitch);\n      }\n    }\n    callback(pitches);\n  }\n\n  return <div\n    ref={rootNode}\n    className={styles.root}\n    onTouchMove={onTouchMove}\n    onTouchStart={onTouchStart}\n    onTouchEnd={onTouchEnd}\n    onTouchCancel={onTouchCancel}\n  />;\n}\n","// import ImageDataHandler from './image-data-handler';\n\nfunction rotate(angle, x, y, ctx, func) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const dx = x - cos * x - sin * -y;\n  const dy = y - sin * x - cos * y;\n  func.call(ctx, cos, sin, -sin, cos, dx, dy);\n}\n\n/**\n* a helper for canvas manipulation, to store a reference to the element as well as it's context.\nalso adds some helpful method defaults. also has some drawing utilities.\n* @param {HTMLCanvasElement} [element = document.createElement('canvas')] - put HTMLCanvasElement if this is your\n* final render canvas\n* @param {Integer} [width = element.offsetWidth] - width of area\n* @param {Integer} [height = element.offsetHeight] - height of area\n* @param {Float} [devicePixelRatio = window.devicePixelRatio] - actual pixels to css pixel\n*/\nexport default class Canvas {\n  /* *******************\n  * initializing methods\n  *********************/\n\n  constructor(element = document.createElement('canvas'), width = element.offsetWidth, height = element.offsetHeight, devicePixelRatio = window.devicePixelRatio) { // eslint-disable-line max-len\n    this._element = element;\n    this._context = this._element.getContext('2d');\n    this.resize(width, height, devicePixelRatio);\n  }\n\n  /**\n    * sets width/height properties as well as scaling\n    * @param {Integer} [width = this.width] - width of area of canvas\n    * @param {Integer} [height = this.height] - height of area of canvas\n    * @param {Float} [devicePixelRatio = window.devicePixelRatio] - actual pixels to css pixel\n    * @returns {void}\n  */\n  // eslint-disable complexity\n  resize = (width, height, devicePixelRatio = window.devicePixelRatio) => {\n    // allow for case to call with no params when devicePixelRatio is changed\n    // allow for case to call with no params when dom element is resized\n    // otherwise width and height are defined\n    // this method will erase the canvas and reset any clipping, fillStyle, lineWidth, strokeStyle, etc...\n    if (!width || !height) {\n      const isMounted = !!this._element.parentNode;\n      width = isMounted ? this._element.offsetWidth : this._width;\n      height = isMounted ? this._element.offsetHeight : this._height;\n    }\n    this._devicePixelRatio = devicePixelRatio;\n    this._width = width;\n    this._height = height;\n    this._element.width = width * this._devicePixelRatio;\n    this._element.height = height * this._devicePixelRatio;\n    this._imageDataHandler = null;\n    this._context.scale(this._devicePixelRatio, this._devicePixelRatio);\n  }\n  // eslint-enable complexity\n\n  /* ******\n  * getters\n  ********/\n\n  /**\n    * get the instance's HTMLCanvasElement\n    * @readonly\n    * @type {HTMLCanvasElement}\n  */\n  get element() {\n    return this._element;\n  }\n\n  /**\n    * get the instance's height\n    * @readonly\n    * @type {Integer}\n  */\n  get height() {\n    return this._height;\n  }\n\n  /**\n    * get the instance's ImageDataHandler reflecting the current state\n    * @readonly\n    * @type {ImageDataHandler}\n  */\n  get imageDataHandler() {\n    if (!this._imageDataHandler) {\n      const width = this._width * this._devicePixelRatio;\n      const height = this._height * this._devicePixelRatio;\n      // this._imageDataHandler = new ImageDataHandler(this._context, 0, 0, width, height);\n    }\n    return this._imageDataHandler;\n  }\n\n  /**\n    * get the instance's width\n    * @readonly\n    * @type {Integer}\n  */\n  get width() {\n    return this._width;\n  }\n\n  /* ******\n  * setters\n  ********/\n\n  /**\n    * set the fill color of the context.\n    * @param {String} str - new value for fillStyle\n    * @type {String}\n  */\n  set fillStyle(str) {\n    this._context.fillStyle = str;\n  }\n\n  /**\n    * set the globalCompositeOperation of the context.\n    * @param {String} str - new value for globalCompositeOperation\n    * @type {String}\n  */\n  set globalCompositeOperation(str) {\n    this._context.globalCompositeOperation = str;\n  }\n\n  /**\n    * set the alpha the context.\n    * @param {Float} num - new value for globalAlpha\n    * @type {Float}\n  */\n  set globalAlpha(num) {\n    this._context.globalAlpha = num;\n  }\n\n  /**\n    * set the stroke width of the context.\n    * @param {Float} num - new value for lineWidth\n    * @type {Float}\n  */\n  set lineWidth(num) {\n    this._context.lineWidth = num;\n  }\n\n  /**\n    * sets the stroke color of the context.\n    * @param {String} str - new value for strokeStyle\n    * @type {String}\n  */\n  set strokeStyle(str) {\n    this._context.strokeStyle = str;\n  }\n\n  /* **************\n  * drawing methods\n  ****************/\n\n  /**\n    * draws an arc on the context\n    * @param {Float} x - center point's x position\n    * @param {Float} y - center point's y position\n    * @param {Float} radius - arc's radius\n    * @param {Float} [startAngle = 0] - angle to begin arc\n    * @param {Float} [endAngle = Math.PI * 2] - angle to end arc\n    * @param {Boolean} [anticlockwise = false] - draws anticlockwise if true\n    * @returns {void}\n  */\n  arc = (x, y, radius, startAngle = 0, endAngle = Math.PI * 2, anticlockwise = false) => {\n    this._context.arc(x, y, radius, startAngle, endAngle, anticlockwise);\n  }\n\n  /**\n    * begins a drawing path on the context\n    * @returns {void}\n  */\n  beginPath = () => {\n    this._context.beginPath();\n  }\n\n  /**\n    * draws an bezier curve on the context\n    * @returns {void}\n  */\n  bezierCurveTo = (...args) => {\n    this._context.bezierCurveTo(...args);\n  }\n\n  /**\n    * clears a rectangle on the context. also nulls the _imageDataHandler value if one exists.\n    * @param {Float} [x = 0] - rectangle's x position\n    * @param {Float} [y = 0] - rectangle's y position\n    * @param {Float} [width = this.width] - rectangle's width\n    * @param {Float} [height = this.height] - rectangle's height\n    * @returns {void}\n  */\n  clearRect = (x = 0, y = 0, width = this.width, height = this.height) => {\n    this._context.clearRect(x, y, width, height);\n    this._imageDataHandler = null;\n  }\n\n  /**\n    * creates a clipping path on the context for future drawing calls.\n    * @returns {void}\n  */\n  clip = (...args) => {\n    this._context.clip(...args);\n  }\n\n  /**\n    * closes a path on the context\n    * @returns {void}\n  */\n  closePath = () => {\n    this._context.closePath();\n  }\n\n  // eslint-disable valid-jsdoc\n  /**\n    * draws an Image or canvas element into the context. also nulls the _imageDataHandler value if one exists.\n    * method overloading to reflect CanvasRenderingContext2D.drawImage.\n    * @param {Canvas|Image|HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} source - where to take pixels from\n    * @param {Float} [dx = 0] - x coordinate of source's destination\n    * @param {Float} [dy = 0] - y coordinate of source's destination\n    * @param {Float} [dWidth = image.width] - width of destination\n    * @param {Float} [dHeight = image.height] - height of destination\n    * @returns {void}\n  */\n  /**\n    * draws an Image or canvas element into the context. also nulls the _imageDataHandler value if one exists.\n    * method overloading to reflect CanvasRenderingContext2D.drawImage.\n    * @param {Canvas|Image|HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} source - where to take pixels from\n    * @param {Float} sx - x coordinate of where to pull from source\n    * @param {Float} sy - y coordinate of where to pull from source\n    * @param {Float} sWidth - width of area to pull from source\n    * @param {Float} sHeight - height of area to pull from source\n    * @param {Float} dx - x coordinate of source's destination\n    * @param {Float} dy - y coordinate of source's destination\n    * @param {Float} dWidth - width of destination\n    * @param {Float} dHeight - height of destination\n    * @returns {void}\n  */\n  drawImage = (source, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight) => { // eslint-disable-line max-params\n    // sx, sy, sWidth, sHeight on images do not get scaled against devicePixelRatio\n    const hasSource = typeof dx === 'number';\n    const isCanvas = source instanceof Canvas;\n    if (hasSource) {\n      if (isCanvas) {\n        sx *= this._devicePixelRatio;\n        sy *= this._devicePixelRatio;\n        sWidth *= this._devicePixelRatio;\n        sHeight *= this._devicePixelRatio;\n        this._context.drawImage(source.element, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);\n      } else {\n        this._context.drawImage(source, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);\n      }\n    } else if (isCanvas) {\n      sWidth = sWidth || source.width;\n      sHeight = sHeight || source.height;\n      this._drawImageDest(source.element, sx, sy, sWidth, sHeight);\n    } else {\n      this._drawImageDest(source, sx, sy, sWidth, sHeight);\n    }\n    this._imageDataHandler = null;\n  }\n  // eslint-enable valid-jsdoc\n\n  _drawImageDest = (source, dx = 0, dy = 0, dWidth = source.width, dHeight = source.height) => {\n    this._context.drawImage(source, dx, dy, dWidth, dHeight);\n  }\n\n  /**\n    * fills a path on the context. also nulls the _imageDataHandler value if one exists.\n    * @returns {void}\n  */\n  fill = (...args) => {\n    this._context.fill(...args);\n    this._imageDataHandler = null;\n  }\n\n  /**\n    * draws a filled rectangle on the context. also nulls the _imageDataHandler value if one exists.\n    * @param {Float} [x = 0] - rectangle's x position\n    * @param {Float} [y = 0] - rectangle's y position\n    * @param {Float} [width = this.width] - rectangle's width\n    * @param {Float} [height = this.height] - rectangle's height\n    * @returns {void}\n  */\n  fillRect = (x = 0, y = 0, width = this.width, height = this.height) => {\n    this._context.fillRect(x, y, width, height);\n    this._imageDataHandler = null;\n  }\n\n  /**\n    * draws a line to a point on the context.\n    * @returns {void}\n  */\n  lineTo = (...args) => {\n    this._context.lineTo(...args);\n  }\n\n  /**\n    * moves to a point on the context.\n    * @returns {void}\n  */\n  moveTo = (...args) => {\n    this._context.moveTo(...args);\n  }\n\n  /**\n    * draws a quadratic curve to a point on the context.\n    * @returns {void}\n  */\n  quadraticCurveTo = (...args) => {\n    this._context.quadraticCurveTo(...args);\n  }\n\n  /**\n    * draws a rectangle on the context.\n    * @param {Float} [x = 0] - rectangle's x position\n    * @param {Float} [y = 0] - rectangle's y position\n    * @param {Float} [width = this.width] - rectangle's width\n    * @param {Float} [height = this.height] - rectangle's height\n    * @returns {void}\n  */\n  rect = (x = 0, y = 0, width = this.width, height = this.height) => {\n    this._context.rect(x, y, width, height);\n  }\n\n  // scale: no scale method! use resize instead!\n\n  /**\n    * strokes the context's current path.\n    * @returns {void}\n  */\n  stroke = (...args) => {\n    this._context.stroke(...args);\n    this._imageDataHandler = null;\n  }\n\n  /* *********************\n  * transformation methods\n  ***********************/\n\n  /**\n    * resets all transforms on the context to zero.\n    * @returns {void}\n  */\n  resetTransform = () => {\n    this._context.resetTransform();\n    // if canvas was scaled it would otherwise be undone\n    this._context.scale(this._devicePixelRatio, this._devicePixelRatio);\n  }\n\n  /**\n    * restores context to a saved state of popped off of a stack.\n    * @returns {void}\n  */\n  restore = () => {\n    this._context.restore();\n  }\n\n  /**\n    * cumulatively rotates the context around x/y coordinates.\n    * @param {Float} angle - amount to rotate\n    * @param {Float} [x = this.width / 2] - center x position\n    * @param {Float} [y = this.height / 2] - center y position\n    * @returns {void}\n  */\n  rotate = (angle, x = 0.5 * this.width, y = 0.5 * this.height) => {\n    if (!angle) {\n      return;\n    }\n    rotate(angle, x, y, this._context, this._context.transform);\n  }\n\n  /**\n    * pushes a saved state of the curent context onto a stack.\n    * @returns {void}\n  */\n  save = () => {\n    this._context.save();\n  }\n\n  /**\n    * resets the context's rotation to a new amount around x/y coordinates.\n    * @param {Float} angle - amount to rotate\n    * @param {Float} [x = this.width / 2] - center x position\n    * @param {Float} [y = this.height / 2] - center y position\n    * @returns {void}\n  */\n  setRotate = (angle, x = 0.5 * this.width, y = 0.5 * this.height) => {\n    rotate(angle, x, y, this._context, this.setTransform);\n  }\n\n  /**\n    * resets the context's transform to new values.\n    * @param {Float} xScale - horizontal scale\n    * @param {Float} xSkew - horizontal skew\n    * @param {Float} ySkew - verical skew\n    * @param {Float} yScale - vertical movement\n    * @param {Float} dx - horizontal movement\n    * @param {Float} dy - vertical movement\n    * @returns {void}\n  */\n  setTransform = (xScale, xSkew, ySkew, yScale, dx, dy) => {\n    xScale *= this._devicePixelRatio;\n    xSkew *= this._devicePixelRatio;\n    ySkew *= this._devicePixelRatio;\n    yScale *= this._devicePixelRatio;\n    dx *= this._devicePixelRatio;\n    dy *= this._devicePixelRatio;\n    this._context.setTransform(xScale, xSkew, ySkew, yScale, dx, dy);\n  }\n\n  /**\n    * sets the context's grid to coordinates.\n    * @param {Float} dx - horizontal movement\n    * @param {Float} dy - vertical movement\n    * @returns {void}\n  */\n  setTranslate = (dx, dy) => {\n    this.setTransform(1, 0, 0, 1, dx, dy);\n  }\n\n  /**\n    * cumulatively moves the context's grid by coordinates.\n    * @param {Float} dx - horizontal movement\n    * @param {Float} dy - vertical movement\n    * @returns {void}\n  */\n  translate = (dx, dy) => {\n    this._context.translate(dx, dy);\n  }\n\n  /* ***********\n  * misc methods\n  *************/\n\n  // eslint-disable valid-jsdoc\n  /**\n    * creates a blank ImageData based on provided width/height.\n    * method overloading to reflect CanvasRenderingContext2D.createImageData.\n    * @param {Number} width - a width amount\n    * @param {Number} height - a height amount\n    * @returns {void}\n  */\n  /**\n    * creates a blank ImageData based on a provided ImageData's dimensions.\n    * method overloading to reflect CanvasRenderingContext2D.createImageData.\n    * @param {ImageData} imageData - an existing ImageData instance\n    * @returns {void}\n  */\n  // eslint-enable valid-jsdoc\n  createImageData = (imageDataOrWidth, height) => {\n    return this._context.createImageData(imageDataOrWidth, height);\n  }\n\n  /* *************\n  * static methods\n  ***************/\n\n  /**\n    * returns Path2D of a path approximately through an array of points.\n    * @param {Array} points - array of points\n    * @param {Path2D} [path = new Path2D()] - Path2D instance to add instructions to\n    * @returns {void}\n  */\n  static quadraticThrough(points, path = new Path2D()) {\n    const { length } = points;\n    let lastPoint;\n    let nextPoint;\n    for (let i = 0; i < length - 1; i++) {\n      lastPoint = nextPoint || points[0];\n      nextPoint = points[i + 1];\n      if (i === 0) {\n        path.moveTo(lastPoint.x, lastPoint.y);\n      } else if (i < length - 2) {\n        const avgX = (lastPoint.x + nextPoint.x) / 2;\n        const avgY = (lastPoint.y + nextPoint.y) / 2;\n        path.quadraticCurveTo(lastPoint.x, lastPoint.y, avgX, avgY);\n      } else {\n        path.quadraticCurveTo(lastPoint.x, lastPoint.y, nextPoint.x, nextPoint.y);\n      }\n    }\n    return path;\n  }\n}\n","import styles from './Display.module.scss';\nimport classnames from 'classnames';\nimport React from 'react';\nimport Canvas from './canvas';\nimport {modulo} from '@danehansen/math';\nimport convertIndexToRadians from '../../util/convertIndexToRadians';\nimport findInterval from '../../util/findInterval';\n\nexport default class Display extends React.Component {\n  state = {}\n\n  constructor(props) {\n    super(props);\n    this._rootNode = React.createRef();\n  }\n\n  componentDidMount() {\n    const {current} = this._rootNode;\n    const {diameter} = this.props;\n    this._root = new Canvas(current);\n    this._root.globalCompositeOperation = 'copy';\n    this._buffer = new Canvas(undefined, diameter, diameter);\n\n    this._drawSlices();\n    this._root.drawImage(this._buffer);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) {\n      this._buffer.clearRect();\n      this._drawSlices();\n      this._connectPitches();\n      this._root.drawImage(this._buffer);\n    }\n  }\n\n  render() {\n    const {className} = this.props;\n    return <canvas className={classnames(styles.root, className)} ref={this._rootNode} />;\n  }\n\n  _drawSlices() {\n    const {activePitches, layoutIncrement, semitones, rootPitch, diameter} = this.props;\n\n    const colors = findColors(semitones);\n    for (let i = 0; i < rootPitch; i++) {\n      colors.unshift(colors.pop());\n    }\n\n    for (let i = 0; i < semitones; i++) {\n      const pitch = i;\n      const radians = convertIndexToRadians(pitch, semitones, rootPitch, layoutIncrement);\n      const color = colors[i];\n      const isActive = activePitches.indexOf(pitch) >= 0;\n      fillSlice(this._buffer, color, pitch, semitones, rootPitch, layoutIncrement, diameter, isActive ? 1 : 0.95, isActive ? 0.12 : 0.1);\n    }\n  }\n\n  _connectPitches() {\n    const {activePitches, semitones, rootPitch, layoutIncrement, diameter} = this.props;\n    for (let i = 0; i < activePitches.length; i++) {\n      const pitchA = activePitches[i];\n      for (let j = i; j < activePitches.length; j++) {\n        const pitchB = activePitches[j];\n        connectPitches(pitchA, pitchB, semitones, rootPitch, layoutIncrement, diameter, this._buffer, 0.4);\n      }\n    }\n  }\n}\n\nfunction fillSlice(canvas, color, pitch, semitones, rootPitch, layoutIncrement, diameter, outerRadius, holeRadius) {\n  const center = diameter / 2;\n  const halfSlice = Math.PI / semitones;\n  let radians = convertIndexToRadians(pitch, semitones, rootPitch, layoutIncrement);\n\n  // this is the edge of slice on the clockwise side\n  // canvas.moveTo(center, center);\n  let cos = Math.cos(radians - halfSlice);\n  let sin = Math.sin(radians - halfSlice);\n  canvas.beginPath();\n  canvas.fillStyle = color;\n  canvas.moveTo(center + cos * center * holeRadius, center + sin * -center * holeRadius);\n  canvas.lineTo(center + cos * center * outerRadius, center + sin * -center * outerRadius);\n\n  // outer arc\n  cos = Math.cos(radians);\n  sin = Math.sin(radians);\n  const newAngle = Math.atan2(-sin, cos)\n  let startAngle = newAngle + halfSlice;\n  let endAngle = newAngle - halfSlice;\n  canvas.arc(center, center, center * outerRadius, startAngle, endAngle, true);\n\n  // this is the edge of slice on the anticlockwise side\n  cos = Math.cos(radians + halfSlice);\n  sin = Math.sin(radians + halfSlice);\n  canvas.moveTo(center + cos * center * outerRadius, center + sin * -center * outerRadius);\n  canvas.lineTo(center + cos * center * holeRadius, center + sin * -center * holeRadius);\n\n  // inner arc\n  cos = Math.cos(radians);\n  sin = Math.sin(radians);\n  startAngle = newAngle - halfSlice;\n  endAngle = newAngle + halfSlice;\n  canvas.arc(center, center, center * holeRadius, startAngle, endAngle, false);\n\n  canvas.fill();\n}\n\nfunction findColors(semitones) {\n  const colors = [];\n  const buttonSlice = Math.PI * 2 / semitones;\n  for(let i = 0; i < semitones; i++) {\n    colors.push(directionalColor(i * buttonSlice));\n  }\n  return colors;\n}\n\nfunction directionalColor(direction) {\n  const colorSlice = Math.PI * 2 / 3;\n  const cosR = Math.cos(direction);\n  const sinR = Math.sin(direction);\n  const cosG = Math.cos(direction - colorSlice);\n  const sinG = Math.sin(direction - colorSlice);\n  const cosB = Math.cos(direction + colorSlice);\n  const sinB = Math.sin(direction + colorSlice);\n\n  const r = Math.round(cosR * 255 * 0.5 + 255 * 0.5);\n  const g = Math.round(cosG * 255 * 0.5 + 255 * 0.5);\n  const b = Math.round(cosB * 255 * 0.5 + 255 * 0.5);\n\n  return `rgb(${r}, ${g}, ${b})`;\n}\n\nfunction connectPitches(pitchA, pitchB, semitones, rootPitch, layoutIncrement, diameter, canvas, radius) {\n  const center = diameter / 2;\n\n  const radianA = convertIndexToRadians(pitchA, semitones, rootPitch, layoutIncrement);\n  const cosA = Math.cos(radianA);\n  const sinA = Math.sin(-radianA);\n\n  const radianB = convertIndexToRadians(pitchB, semitones, rootPitch, layoutIncrement);\n  const cosB = Math.cos(radianB);\n  const sinB = Math.sin(-radianB);\n\n  const pointA = {\n    x: center + cosA * center * radius,\n    y: center + sinA * center * radius,\n  };\n\n  const pointB = {\n    x: center + cosB * center * radius,\n    y: center + sinB * center * radius,\n  };\n\n  const interval = findInterval(pitchA, pitchB, semitones);\n  if (interval) {\n    canvas.strokeStyle = \"#888\";\n    const xDiff = pointB.x - pointA.x;\n    const yDiff = pointB.y - pointA.y;\n    const diff = Math.sqrt(Math.pow(xDiff, 2) + Math.pow(yDiff, 2));\n    const radiusA = diff / interval.a / 2;\n    const radiusB = diff / interval.b / 2;\n\n    for (let i = 0; i < interval.a; i++) {\n      canvas.beginPath();\n      const centerX = pointA.x + xDiff / interval.a * (i + 0.5);\n      const centerY = pointA.y + yDiff / interval.a * (i + 0.5);\n      canvas.arc(centerX, centerY, radiusA, 0, Math.PI * 2);\n      canvas.stroke();\n    }\n\n    for (let i = 0; i < interval.b; i++) {\n      canvas.beginPath();\n      const centerX = pointA.x + xDiff / interval.b * (i + 0.5);\n      const centerY = pointA.y + yDiff / interval.b * (i + 0.5);\n      canvas.arc(centerX, centerY, radiusB, 0, Math.PI * 2);\n      canvas.stroke();\n    }\n  }\n\n  canvas.strokeStyle = \"black\";\n  canvas.beginPath();\n  canvas.moveTo(pointA.x, pointA.y);\n  canvas.lineTo(pointB.x, pointB.y);\n  canvas.stroke();\n}\n","export default function(pitchA, pitchB, semitones) {\n  if (semitones === 12) {\n    switch(pitchA - pitchB) {\n      case 1:\n        return {a: 16, b: 15};\n      case 2:\n        return {a: 9, b: 8};\n      case 3:\n        return {a: 6, b: 5};\n      case 4:\n        return {a: 5, b: 4};\n      case 5:\n        return {a: 4, b: 3};\n      case 6:\n        return {a: 7, b: 5};\n      case 7:\n        return {a: 3, b: 2};\n      case 8:\n        return {a: 8, b: 5};\n      case 9:\n        return {a: 5, b: 3};\n      case 10:\n        return {a: 16, b: 9};\n      case 11:\n        return {a: 15, b: 8};\n    }\n\n    switch(pitchB - pitchA) {\n      case 1:\n        return {a: 15, b: 16};\n      case 2:\n        return {a: 8, b: 9};\n      case 3:\n        return {a: 5, b: 6};\n      case 4:\n        return {a: 4, b: 5};\n      case 5:\n        return {a: 3, b: 4};\n      case 6:\n        return {a: 5, b: 7};\n      case 7:\n        return {a: 2, b: 3};\n      case 8:\n        return {a: 5, b: 8};\n      case 9:\n        return {a: 3, b: 5};\n      case 10:\n        return {a: 9, b: 16};\n      case 11:\n        return {a: 8, b: 15};\n    }\n  }\n}\n","let frequencies;\nlet currentOscillators;\nlet audioCtx;\nlet gainNode;\n\nexport function initializaAudio(semitones, a4, minFreq, maxFreq) {\n  if (audioCtx) {\n    audioCtx.close();\n  }\n  audioCtx = new (window.AudioContext || window.webkitAudioContext)();\n  gainNode = audioCtx.createGain();\n\n  gainNode.connect(audioCtx.destination);\n\n  // TODO: figure out this gain value\n  gainNode.gain.value = 0.1;\n\n  currentOscillators = [];\n  frequencies = [];\n  for(let i = 0; i < semitones; i++) {\n    frequencies[i] = findFrequencies(i, a4, minFreq, maxFreq, semitones)\n  }\n}\n\nfunction findFrequencies(distance, a4, minFreq, maxFreq, semitones) {\n  let lowestFrequency = a4 * Math.pow(Math.pow(2, 1 / semitones), distance);\n\n  while(lowestFrequency >= minFreq) {\n    lowestFrequency /= 2;\n  }\n  lowestFrequency *= 2;\n\n  const frequencies = [];\n  for (let currentFrequency = lowestFrequency; currentFrequency <= maxFreq; currentFrequency *= 2) {\n    frequencies.push(currentFrequency);\n  }\n  return frequencies;\n}\n\nfunction startNote(index, type) {\n  const oscillators = [];\n  currentOscillators[index] = oscillators;\n  for(const frequency of frequencies[index]) {\n    const oscillator = audioCtx.createOscillator();\n    oscillator.frequency.value = frequency;\n    oscillator.type = type;\n    oscillator.connect(gainNode);\n    oscillator.start();\n    oscillators.push(oscillator);\n  }\n}\n\nfunction stopNote(index) {\n  for(const oscillator of currentOscillators[index]) {\n    oscillator.stop();\n  }\n  currentOscillators[index] = null;\n}\n\nexport function toggleNote(note, isPlaying, type) {\n  if (isPlaying && !currentOscillators[note]) {\n    startNote(note, type);\n  } else if (!isPlaying && currentOscillators[note]) {\n    stopNote(note);\n  }\n}\n","import styles from './App.module.scss';\nimport Menu from './Menu/Menu';\nimport {useState} from 'react';\nimport {MIN_FREQ, MAX_FREQ, TEMPERMENT_TYPES, OSCILLATOR_TYPES} from '../constants';\nimport findIncrementOptions from '../util/findIncrementOptions';\nimport ResizeListener from './ResizeListener/ResizeListener';\nimport Label from './Label/Label';\nimport TouchPad from './TouchPad/TouchPad';\nimport Display from './Display/Display';\nimport {initializaAudio, toggleNote} from '../util/shepardTone'\n\nexport default function App() {\n  let [isMenuOpen, setMenuOpen] = useState(false);\n  let [a4, setA4] = useState(440);\n  let [temperment, setTemperment] = useState(TEMPERMENT_TYPES.EQUAL);\n  let [oscillator, setOscillator] = useState(OSCILLATOR_TYPES.SINE);\n  let [rootPitch, setRootPitch] = useState(3);\n\n  let [minFreq, setMinFreq] = useState(MIN_FREQ);\n  let [maxFreq, setMaxFreq] = useState(MAX_FREQ);\n  function changeMinFreq(num) {\n    if (num >= maxFreq) {\n      setMaxFreq(num + 1);\n    }\n    setMinFreq(num);\n  }\n  function changeMaxFreq(num) {\n    if (num <= minFreq) {\n      setMinFreq(num - 1);\n    }\n    setMaxFreq(num);\n  }\n\n  let [semitones, setSemitones] = useState(12);\n  function changeSemitones(num) {\n    const incrementOptions = findIncrementOptions(num);\n    if (incrementOptions.indexOf(layoutIncrement) >= 0) {\n      setLayoutIncrement(1);\n    }\n    if (temperment !== TEMPERMENT_TYPES.EQUAL) {\n      setTemperment(TEMPERMENT_TYPES.EQUAL);\n    }\n    setSemitones(num);\n  }\n\n  let [layoutIncrement, setLayoutIncrement] = useState(1);\n  function changeLayoutIncrement(num) {\n    setLayoutIncrement(num);\n  }\n\n\n  let [hasInitializedAudio, setHasInitializedAudio] = useState(false);\n  function onInitialClick() {\n    initializaAudio(semitones, a4, minFreq, maxFreq);\n    setHasInitializedAudio(true);\n  }\n\n  function onMenuButtonClick() {\n    if (isMenuOpen) {\n      initializaAudio(semitones, a4, minFreq, maxFreq);\n    }\n    setMenuOpen(!isMenuOpen);\n  }\n\n  let [activePitches, setActivePitches] = useState([]);\n\n  function onTouchCallback(pitches) {\n    for(let i = 0; i < semitones; i++) {\n      if (pitches.indexOf(i) >= 0) {\n        toggleNote(i, true, oscillator)\n      } else {\n        toggleNote(i, false, oscillator)\n      }\n    }\n    setActivePitches(pitches);\n  }\n\n  return (\n    <div className={styles.root} onClick={hasInitializedAudio ? null : onInitialClick}>\n      <div className={styles.contentHolder}>\n      </div>\n      <ResizeListener>\n        {function(innerWidth, innerHeight) {\n          const smallest = Math.min(innerWidth, innerHeight);\n          return <div className={styles.wheelHolder} style={{width: `${smallest}px`, height: `${smallest}px`}}>\n            <Display\n              diameter={smallest}\n              semitones={semitones}\n              layoutIncrement={layoutIncrement}\n              activePitches={activePitches}\n              rootPitch={rootPitch}\n              diameter={smallest}\n            />\n            <Label\n              layoutIncrement={layoutIncrement}\n              rootPitch={rootPitch}\n              semitones={semitones}\n            />\n            {hasInitializedAudio && <TouchPad\n              callback={onTouchCallback}\n              semitones={semitones}\n              diameter={smallest}\n              layoutIncrement={layoutIncrement}\n              rootPitch={rootPitch}\n            />}\n          </div>\n        }}\n      </ResizeListener>\n\n      {isMenuOpen && <div className={styles.menuHolder}><Menu\n        minFreq={minFreq}\n        maxFreq={maxFreq}\n        setMinFreq={changeMinFreq}\n        setMaxFreq={changeMaxFreq}\n        a4={a4}\n        setA4={setA4}\n        temperment={temperment}\n        setTemperment={setTemperment}\n        oscillator={oscillator}\n        setOscillator={setOscillator}\n        semitones={semitones}\n        setSemitones={changeSemitones}\n        rootPitch={rootPitch}\n        setRootPitch={setRootPitch}\n        layoutIncrement={layoutIncrement}\n        setLayoutIncrement={changeLayoutIncrement}\n      /></div>}\n\n      <button className={styles.menuButton} onClick={onMenuButtonClick}>{isMenuOpen ? 'close menu' : 'open menu'}</button>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/reset.module.scss';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__nWMuC\",\"menuHolder\":\"App_menuHolder__243kY\",\"menuButton\":\"App_menuButton__3IBp4\",\"contentHolder\":\"App_contentHolder__3Zpi7\",\"wheelHolder\":\"App_wheelHolder__1I76D\"};"],"sourceRoot":""}