{"version":3,"sources":["App/App.module.scss","App/Keypad/Keypad.module.scss","App/Display/Display.js","App/Keypad/Keypad.js","App/shepardTone.js","App/notes.js","App/App.js","reportWebVitals.js","index.js"],"names":["module","exports","Display","className","classnames","styles","root","Keypad","notes","map","note","i","rad","Math","PI","length","x","cos","y","sin","button","style","left","top","onPointerDown","play","onPointerUp","pause","label","CURRENT_NOTES","toggleNote","isPlaying","index","START_FREQ","pow","audioCtx","AudioContext","gainNode","createGain","multiplier","oscillators","connect","destination","gain","value","freq","console","log","oscillator","createOscillator","frequency","start","startNote","close","NOTES","CHROMATIC_NOTES","toggleShepardTone","bind","FIFTH_NOTES","push","App","useState","isChromatic","setChromatic","toggle","type","checked","onChange","evt","holderHolder","holder","display","keypad","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb71cd6c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__nWMuC\",\"label\":\"App_label__1QbUI\",\"toggle\":\"App_toggle__IuLcT\",\"holderHolder\":\"App_holderHolder__1QyUG\",\"holder\":\"App_holder__33-ly\",\"display\":\"App_display___uQ79\",\"keypad\":\"App_keypad__OzuJb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Keypad_root__2ThFc\",\"button\":\"Keypad_button__1d0eI\"};","import styles from './Display.module.scss';\nimport classnames from 'classnames';\n\nexport default function Display({className}) {\n  return (\n    <div className={classnames(styles.root, className)}>\n    </div>\n  );\n}\n","import styles from './Keypad.module.scss';\nimport classnames from 'classnames';\n\nexport default function Keypad({className, notes}) {\n  return (\n    <div className={classnames(styles.root, className)}>\n      {notes.map(function(note, i) {\n        const rad = Math.PI * 2 / notes.length * (i - 6);\n        const x = Math.cos(rad);\n        const y = Math.sin(rad)\n        return <button\n          className={styles.button}\n          key={note.label}\n          style={{\n            left: `${(x + 1) * 50}%`,\n            top: `${(y + 1) * 50}%`,\n          }}\n          onPointerDown={note.play}\n          onPointerUp={note.pause}\n        >{note.label}</button>\n      })}\n    </div>\n  );\n}\n","const A = 440;\nconst MIN_FREQ = 20;\nconst MAX_FREQ = 20000;\n\nconst CURRENT_NOTES = [];\n\nfunction startNote(index) {\n  const START_FREQ = A / Math.pow(2, 4);\n  const audioCtx = new AudioContext();\n  CURRENT_NOTES[index] = audioCtx;\n  const gainNode = audioCtx.createGain();\n  const steps_per_loop = 12;\n  const multiplier = Math.pow(2, 1 / steps_per_loop);\n  const oscillators = [];\n\n  gainNode.connect(audioCtx.destination);\n  gainNode.gain.value = 100 / 100 / 12;\n\n  for(let i = START_FREQ; i <= MAX_FREQ; i *= 2) {\n    const freq = i * Math.pow(multiplier, index);\n    if (freq < MIN_FREQ) {\n      continue;\n    } else if (freq > MAX_FREQ) {\n      break;\n    }\n    console.log(freq)\n    const oscillator = audioCtx.createOscillator();\n    oscillator.frequency.value = freq;\n    oscillator.connect(gainNode);\n    oscillator.start(0);\n    oscillators[i] = oscillator;\n  }\n}\n\nfunction stopNote(index) {\n  CURRENT_NOTES[index].close();\n  CURRENT_NOTES[index] = null;\n}\n\nexport default function toggleNote(note, isPlaying) {\n  if (isPlaying && !CURRENT_NOTES[note]) {\n    startNote(note);\n  } else if (!isPlaying && CURRENT_NOTES[note]) {\n    stopNote(note);\n  }\n}\n","import toggleShepardTone from './shepardTone';\n\nconst NOTES = ['A','A#/Bb','B','C','C#/Db','D','D#/Eb','E','F','F#/Gb','G','G#/Ab'];\n\nexport const CHROMATIC_NOTES = NOTES.map(function(note, i) {\n  return {\n    label: note,\n    index: i,\n    play: toggleShepardTone.bind(null, i, true),\n    pause: toggleShepardTone.bind(null, i, false),\n  }\n});\n\nexport const FIFTH_NOTES = [];\nwhile(FIFTH_NOTES.length < NOTES.length) {\n  FIFTH_NOTES.push(CHROMATIC_NOTES[\n    ((FIFTH_NOTES.length * 7) + 6) \n    % NOTES.length])\n}\n","import styles from './App.module.scss';\nimport Display from './Display/Display';\nimport Keypad from './Keypad/Keypad';\nimport {CHROMATIC_NOTES, FIFTH_NOTES} from './notes';\nimport {useState} from 'react';\n\nexport default function App() {\n  let [isChromatic, setChromatic] = useState(false);\n\n  function onChange(evt) {\n    setChromatic(!isChromatic)\n  }\n\n  return (\n    <div className={styles.root}>\n      <label className={styles.label}>\n        {isChromatic ? 'CHROMATIC' : 'CIRCLE OF FIFTHS'}\n        <input className={styles.toggle} type=\"checkbox\" checked={isChromatic} onChange={onChange} />\n      </label>\n      <div className={styles.holderHolder}>\n        <div className={styles.holder}>\n          <Display className={styles.display} />\n          <Keypad className={styles.keypad} notes={isChromatic ? CHROMATIC_NOTES : FIFTH_NOTES} />\n        </div>\n      </div>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/reset.module.scss';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}